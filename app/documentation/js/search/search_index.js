var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Action.html",[0,0.041,1,1.641]],["body/classes/Action.html",[0,0.062,1,2.931,2,2.363,3,0.213,4,0.213,5,0.183,6,4.842,7,0.34,8,0.696,9,7.036,10,3.697,11,0.739,12,0.554,13,0.018,14,1.151,15,0.554,16,5.628,17,3.278,18,5.628,19,5.628,20,0.244,21,0.016,22,0.016]],["title/classes/ActionConstants.html",[0,0.041,23,1.215]],["body/classes/ActionConstants.html",[0,0.049,2,1.273,3,0.115,4,0.115,5,0.099,7,0.183,8,0.463,12,0.58,13,0.019,14,1.217,15,0.58,20,0.225,21,0.01,22,0.01,23,1.444,24,2.121,25,6.719,26,4.228,27,4.461,28,4.461,29,4.461,30,4.461,31,4.461,32,4.461,33,4.461,34,4.461,35,4.461,36,4.228,37,4.461,38,4.461,39,4.461,40,4.461,41,4.461,42,4.461,43,4.461,44,1.656,45,1.656,46,3.033,47,3.383,48,3.789,49,3.789,50,2.839,51,2.52,52,3.383,53,3.789,54,3.789,55,3.789,56,3.383,57,3.789,58,3.08,59,1.196,60,3.08,61,1.95,62,1.444,63,2.637,64,5.424,65,3.121,66,3.789,67,3.033,68,3.08,69,3.033,70,3.08,71,3.789,72,3.033,73,3.789,74,4.064,75,3.033,76,3.08,77,1.794,78,4.662,79,3.033,80,3.789,81,2.059,82,3.033,83,4.896,84,3.033,85,3.789,86,4.41,87,3.033,88,3.789,89,3.033,90,3.033,91,3.383,92,3.033,93,3.08,94,3.033,95,3.383,96,2.637,97,3.033,98,3.789,99,3.033,100,3.789,101,3.789,102,3.033,103,1.67,104,3.033,105,3.789,106,3.789,107,3.033,108,3.903,109,1.043,110,2.121,111,1.501,112,1.816,113,2.609,114,2.609,115,3.383,116,2.609,117,2.609,118,2.609,119,2.609,120,2.609,121,1.343,122,2.33,123,2.609,124,2.609]],["title/injectables/ActionsService.html",[125,1.159,126,2.219]],["body/injectables/ActionsService.html",[0,0.058,3,0.199,4,0.199,5,0.171,7,0.317,11,0.667,12,0.5,13,0.019,14,1.082,15,0.5,20,0.228,21,0.015,22,0.015,125,1.985,126,3.803,127,2.757,128,4.514,129,0.954,130,6.351,131,0.832,132,3.382,133,4.423,134,5.248,135,1.061,136,1.061,137,6.351,138,5.248,139,5.248,140,0.788,141,3.588,142,0.746,143,2.323,144,0.588,145,2.323,146,2.598,147,2.937,148,2.757,149,2.598,150,2.323,151,1.565,152,5.248]],["title/classes/ActivityLog.html",[0,0.041,153,1.641]],["body/classes/ActivityLog.html",[0,0.057,1,3.298,2,2.172,3,0.196,4,0.196,5,0.168,7,0.313,8,0.662,10,3.566,12,0.579,13,0.018,14,1.166,15,0.579,17,3.116,20,0.224,21,0.015,22,0.015,142,0.662,153,2.787,154,3.915,155,4.449,156,1.6,157,4.051,158,5.213,159,2.45,160,5.172,161,5.172,162,5.172,163,5.172,164,5.172,165,5.172,166,1.164]],["title/components/ActivityLogComponent.html",[167,0.181,168,0.721]],["body/components/ActivityLogComponent.html",[0,0.033,1,3.049,3,0.114,4,0.114,5,0.098,7,0.182,8,0.46,10,2.977,11,0.542,12,0.511,13,0.019,14,0.693,15,0.542,20,0.13,21,0.01,22,0.01,44,1.274,45,1.274,129,0.657,131,0.476,135,0.502,136,0.502,140,0.657,142,0.699,144,0.337,150,1.33,153,2.782,154,1.578,156,1.42,157,3.171,158,4.352,159,2.046,166,1.2,167,0.252,168,1.101,169,1.081,170,0.778,171,0.778,172,0.778,173,0.778,174,6.002,175,5.36,176,2.584,177,0.983,178,1.336,179,0.778,180,1.947,181,1.772,182,1.624,183,2.402,184,1.133,185,5.158,186,1.133,187,4.374,188,3.608,189,5.158,190,3.608,191,5.158,192,5.666,193,1.538,194,3.004,195,3.517,196,4.374,197,3.004,198,1.053,199,3.004,200,3.004,201,3.004,202,1.188,203,3.608,204,3.004,205,3.004,206,3.608,207,2.619,208,3.059,209,5.158,210,4.374,211,3.004,212,3.004,213,2.101,214,1.936,215,2.584,216,1.936,217,1.799,218,1.578,219,1.936,220,2.101,221,3.004,222,3.004,223,2.101,224,3.004,225,3.004,226,3.004,227,2.101,228,2.101,229,3.36,230,3.763,231,4.374,232,4.374,233,4.374,234,4.374,235,3.963,236,1.936,237,1.468,238,1.434,239,2.71,240,2.619,241,1.936,242,1.487,243,2.101,244,1.405,245,2.101,246,1.799,247,3.325,248,2.71,249,2.584,250,1.578,251,2.584,252,1.681,253,3.004,254,4.374,255,1.799,256,3.004,257,3.004,258,3.004,259,3.004,260,1.936,261,0.778,262,1.133,263,1.133,264,0.778,265,1.468,266,0.778,267,0.778,268,0.644,269,0.778,270,0.644,271,0.778,272,0.584,273,1.216,274,1.133,275,0.584,276,1.336,277,0.584,278,0.778,279,0.584,280,0.778,281,0.644,282,0.778,283,0.584,284,0.743,285,1.133,286,0.584,287,0.778,288,0.584,289,0.778,290,0.613,291,0.675,292,0.778,293,0.584,294,0.778,295,0.584,296,0.644,297,0.584,298,0.778,299,0.644,300,0.778,301,0.584,302,0.584,303,1.081,304,0.584,305,0.584,306,0.778,307,0.584,308,0.778,309,0.584,310,0.743,311,0.708,312,0.778,313,0.778]],["title/injectables/ActivityLogService.html",[125,1.159,195,2.074]],["body/injectables/ActivityLogService.html",[0,0.053,3,0.18,4,0.18,5,0.154,7,0.287,11,0.627,12,0.47,13,0.019,15,0.514,20,0.206,21,0.014,22,0.014,125,1.866,127,2.493,129,0.896,131,0.752,132,3.058,133,4.315,135,0.997,136,0.997,140,0.896,141,3.71,142,0.757,143,2.101,144,0.532,145,2.101,146,2.349,147,2.656,148,2.493,149,2.349,150,2.101,151,2.043,153,3.238,183,1.893,195,3.34,219,4.416,273,1.407,314,4.082,315,6.851,316,4.745,317,5.968,318,4.745,319,4.745,320,3.645,321,2.842,322,4.082,323,2.656,324,4.082,325,4.745,326,4.745,327,3.319,328,4.745,329,2.349,330,4.745,331,4.745,332,4.745,333,4.745,334,4.745,335,5.968,336,4.745,337,4.745]],["title/components/AppComponent.html",[167,0.181,268,0.794]],["body/components/AppComponent.html",[0,0.032,3,0.111,4,0.111,5,0.095,7,0.177,8,0.451,11,0.534,12,0.441,13,0.019,14,0.805,15,0.49,20,0.127,21,0.01,22,0.01,44,0.658,45,0.658,51,2.25,56,3.297,59,1.792,61,2.478,62,1.954,77,1.696,103,1.928,108,2.67,129,0.645,131,0.464,135,0.489,136,0.489,140,0.645,142,0.655,144,0.328,145,1.296,149,2.125,150,1.296,156,0.69,166,0.542,167,0.249,168,0.569,169,1.061,170,0.758,171,0.758,172,0.758,173,0.758,177,0.965,178,1.317,179,0.758,180,1.942,181,1.777,182,0.69,184,1.112,186,1.112,193,1.52,198,1.038,261,0.758,262,1.112,263,1.112,264,0.758,265,1.45,266,0.758,267,0.758,268,1.199,269,0.758,270,0.627,271,0.758,272,0.569,273,1.198,274,1.112,275,0.569,276,1.317,277,0.569,278,0.758,279,0.569,280,0.758,281,0.627,282,0.758,283,0.569,284,0.724,285,1.112,286,0.569,287,0.758,288,0.569,289,0.758,290,0.598,291,0.658,292,0.758,293,0.569,294,0.758,295,0.569,296,0.627,297,0.569,298,0.758,299,0.627,300,0.758,301,0.569,302,0.569,303,1.061,304,0.569,305,0.569,306,0.758,307,0.569,308,0.758,309,0.569,310,0.724,311,0.69,312,0.758,313,0.758,323,1.638,338,2.518,339,5.082,340,4.292,341,5.082,342,3.555,343,5.082,344,5.959,345,2.048,346,1.614,347,1.517,348,4.292,349,2.928,350,2.928,351,2.844,352,5.082,353,4.292,354,2.25,355,4.292,356,3.692,357,5.597,358,4.356,359,4.292,360,3.904,361,4.292,362,4.292,363,3.692,364,3.904,365,2.67,366,4.292,367,3.352,368,4.292,369,4.292,370,4.292,371,4.292,372,2.928,373,2.928,374,2.048,375,0.598,376,2.928,377,2.928,378,2.518,379,3.297,380,3.297,381,2.928,382,0.658,383,2.928,384,6.435,385,2.928,386,2.928,387,2.518,388,2.518,389,2.048,390,3.692,391,2.928,392,2.928,393,2.518,394,2.249,395,2.928,396,2.928,397,2.048,398,2.518,399,2.249,400,2.518,401,2.928,402,1.887,403,2.928,404,2.928,405,2.928,406,2.928,407,2.928,408,2.928,409,2.249,410,1.753,411,2.928,412,2.928,413,2.518,414,4.292,415,2.928,416,4.292,417,3.692,418,4.292,419,4.292,420,2.928,421,2.928,422,2.928,423,2.928,424,2.928,425,2.249,426,2.249,427,2.249,428,2.249]],["title/modules/AppModule.html",[429,2.389,430,2.592]],["body/modules/AppModule.html",[0,0.046,3,0.158,4,0.158,5,0.136,13,0.019,20,0.181,21,0.013,22,0.013,142,0.785,143,1.85,144,0.469,181,0.985,268,1.6,283,1.27,288,1.27,290,1.423,291,1.237,295,1.27,296,0.896,309,1.27,430,5.424,431,2.196,432,3.545,433,3.595,434,3.595,435,3.595,436,3.595,437,3.595,438,4.491,439,4.172,440,4.172,441,4.172,442,4.225,443,2.923,444,4.179,445,4.225,446,4.225,447,3.545,448,5.5,449,5.5,450,4.731,451,3.21,452,3.545,453,3.847,454,3.595,455,4.179,456,5.5,457,4.179,458,4.225,459,4.225,460,1.437,461,4.179,462,4.179,463,5.288,464,4.179,465,4.179,466,3.595,467,2.923,468,3.595,469,3.21,470,2.694,471,2.503,472,2.923,473,2.339,474,4.179,475,4.731,476,4.731,477,4.731,478,2.435]],["title/modules/AppRoutingModule.html",[429,2.389,438,2.389]],["body/modules/AppRoutingModule.html",[0,0.051,3,0.176,4,0.176,5,0.151,13,0.019,20,0.255,21,0.014,22,0.014,109,2.222,142,0.774,144,0.52,167,0.351,283,1.256,284,1.146,288,1.321,290,1.201,291,1.323,295,1.256,296,0.994,309,1.256,310,1.146,311,1.094,375,0.947,397,3.244,402,2.989,431,2.437,438,3.792,447,2.989,452,3.792,453,3.244,466,3.99,467,3.244,468,3.99,479,3.563,480,3.244,481,4.164,482,5.061,483,4.638,484,3.563,485,5.883,486,4.638,487,4.638,488,3.563,489,4.638,490,3.563,491,4.638,492,3.792,493,4.638,494,3.292,495,3.99,496,3.99,497,3.99,498,6.261,499,2.346,500,3.563,501,1.675,502,3.563,503,3.99,504,3.99,505,3.99,506,3.99,507,4.638,508,4.638,509,3.563]],["title/classes/Auth.html",[0,0.041,510,2.592]],["body/classes/Auth.html",[0,0.063,2,2.406,3,0.217,4,0.217,5,0.186,7,0.346,8,0.703,12,0.527,13,0.018,14,1.157,15,0.527,20,0.248,21,0.016,22,0.016,159,2.559,499,2.827,510,4.68,511,4.928,512,5.729,513,5.729]],["title/injectables/AuthService.html",[125,1.159,346,0.96]],["body/injectables/AuthService.html",[0,0.028,1,2.913,3,0.095,4,0.095,5,0.081,7,0.151,8,0.401,11,0.662,12,0.551,13,0.019,14,1.152,15,0.572,20,0.108,21,0.009,22,0.009,23,0.819,26,2.666,44,1.32,45,1.32,58,1.747,59,1.594,61,1.687,62,1.924,63,3.097,65,1.236,74,1.61,77,1.472,96,1.496,103,2.226,108,2.003,109,1.59,125,1.192,126,3.097,127,1.312,129,0.572,131,0.396,132,1.61,133,3.515,135,1.051,136,1.051,140,0.988,141,3.389,142,0.729,143,1.106,144,0.28,145,1.106,146,1.236,147,1.398,148,1.312,149,1.236,150,1.106,151,2.07,153,2.787,157,2.894,159,1.376,166,1.27,182,0.589,183,0.996,195,3.417,198,1.056,202,1.817,220,1.747,324,2.149,329,2.288,346,0.987,347,1.439,354,2.046,358,3.233,363,2.149,364,3.973,365,2.428,375,0.51,382,1.32,389,2.666,393,3.279,394,3.55,399,4.835,402,2.456,425,2.928,426,2.928,427,2.928,428,2.928,478,1.106,499,0.996,510,4.105,514,2.149,515,4.622,516,2.979,517,2.979,518,4.622,519,3.811,520,3.811,521,3.811,522,3.811,523,4.449,524,3.811,525,5.171,526,3.811,527,5.171,528,2.003,529,3.55,530,3.811,531,3.811,532,2.498,533,2.757,534,3.811,535,5.171,536,2.498,537,1.747,538,3.811,539,2.498,540,3.811,541,3.333,542,3.811,543,2.498,544,3.811,545,2.498,546,2.498,547,3.811,548,3.895,549,2.498,550,2.498,551,3.811,552,2.498,553,2.498,554,3.976,555,3.811,556,3.811,557,3.811,558,3.811,559,2.498,560,2.498,561,2.498,562,2.456,563,2.498,564,2.498,565,4.063,566,2.498,567,2.498,568,2.498,569,2.498,570,2.498,571,2.498,572,1.747,573,2.498,574,2.149,575,2.498,576,2.498,577,1.496,578,1.236,579,2.498,580,2.498,581,3.233,582,2.498,583,2.498,584,2.498,585,2.498,586,2.498,587,1.747,588,2.133,589,1.919,590,1.312,591,2.498,592,2.498,593,2.498,594,5.87,595,3.783,596,3.279,597,2.498,598,2.498,599,2.498,600,2.149,601,2.149,602,3.976,603,2.666,604,2.498,605,2.498,606,2.498,607,1.919,608,1.919,609,1.496,610,1.919,611,0.947,612,2.498,613,2.149,614,2.498,615,1.398,616,3.279,617,2.149,618,2.149,619,2.149,620,2.149,621,2.149,622,1.747,623,1.919,624,1.919,625,2.149,626,1.919,627,2.498,628,2.149,629,2.003,630,1.236,631,2.149,632,2.498,633,2.149,634,2.149,635,2.149,636,2.149,637,2.498,638,0.781,639,1.168]],["title/components/ChangePhotoComponent.html",[167,0.181,270,0.794]],["body/components/ChangePhotoComponent.html",[0,0.031,3,0.104,4,0.104,5,0.133,7,0.166,8,0.431,11,0.571,12,0.457,13,0.019,15,0.531,20,0.119,21,0.01,22,0.01,44,0.619,45,0.619,58,1.926,62,0.903,76,1.926,77,1.653,108,3.201,109,0.947,121,1.219,129,0.616,131,0.65,135,0.685,136,0.685,140,0.816,142,0.663,144,0.309,151,1.223,156,1.529,166,0.509,167,0.24,168,0.535,169,1.014,170,0.713,171,0.713,172,0.713,173,0.713,177,0.922,178,1.27,179,0.713,180,1.929,181,1.755,182,0.649,184,1.063,186,1.063,193,1.475,198,1.186,207,1.649,237,1.395,238,1.345,240,2.457,241,3.745,242,2.031,244,1.288,246,2.457,247,3.16,261,0.713,262,1.063,263,1.063,264,0.713,265,1.408,266,0.713,267,0.713,268,0.59,269,0.713,270,1.164,271,0.713,272,0.535,273,1.156,274,1.063,275,0.535,276,1.27,277,0.535,278,0.713,279,0.535,280,0.713,281,0.59,282,0.713,283,0.535,284,0.681,285,1.063,286,0.535,287,0.713,288,0.535,289,0.713,290,0.562,291,0.619,292,0.713,293,0.535,294,0.713,295,0.535,296,0.59,297,0.535,298,0.713,299,0.59,300,0.713,301,0.535,302,0.535,303,1.014,304,0.535,305,0.535,306,0.713,307,0.535,308,0.713,309,0.535,310,0.681,311,0.649,312,0.713,313,0.713,347,1.436,351,1.541,365,2.576,367,2.457,375,0.562,382,1.102,460,0.947,471,1.649,478,1.816,501,2.098,528,2.155,565,2.457,601,5.24,609,2.936,624,2.115,640,5.889,641,4.788,642,2.369,643,4.102,644,4.903,645,4.102,646,4.998,647,4.903,648,4.903,649,6.092,650,4.102,651,4.674,652,1.649,653,2.794,654,2.65,655,5.81,656,4.102,657,2.754,658,2.754,659,2.754,660,4.102,661,2.754,662,4.218,663,2.65,664,4.102,665,2.754,666,2.754,667,4.102,668,4.102,669,4.102,670,2.869,671,4.102,672,2.754,673,2.754,674,2.754,675,2.754,676,1.723,677,2.754,678,2.115,679,2.369,680,1.926,681,1.775,682,1.447,683,3.151,684,2.115,685,1.156,686,4.998,687,4.463,688,2.754,689,1.219,690,1.156,691,2.754,692,2.754,693,2.754,694,2.754,695,2.754,696,2.754,697,2.754,698,2.754,699,2.754,700,2.754,701,2.754,702,2.754,703,2.754,704,2.754,705,2.754,706,2.754,707,1.098,708,2.369,709,2.754,710,2.754,711,3.529,712,4.102,713,4.102,714,3.151,715,4.102,716,4.102,717,4.102,718,4.102,719,4.102,720,4.102,721,4.102,722,4.102,723,3.529,724,3.766,725,4.218,726,4.218,727,1.219,728,2.936,729,2.754,730,1.098,731,1.541,732,1.541,733,1.926,734,1.447,735,2.155,736,2.369,737,2.369,738,2.754,739,2.754,740,2.754]],["title/classes/Constants.html",[0,0.041,112,2.219]],["body/classes/Constants.html",[0,0.06,2,1.715,3,0.155,4,0.155,5,0.133,7,0.247,8,0.569,13,0.019,14,1.206,15,0.426,20,0.264,21,0.013,22,0.013,23,1.339,24,2.857,25,6.649,26,3.789,27,3.513,28,3.513,29,3.513,30,3.513,31,3.513,32,3.513,33,3.513,34,3.513,35,3.513,36,3.789,37,3.513,38,3.513,39,3.513,40,3.513,41,3.513,42,3.513,43,3.513,44,1.218,45,1.218,47,3.137,48,3.513,49,3.513,50,2.632,51,2.398,52,3.137,53,3.513,54,3.513,55,3.513,56,3.137,57,3.513,58,2.857,59,1.109,60,2.857,61,1.808,62,1.339,63,2.446,64,5.229,65,3.009,66,3.513,68,2.857,70,2.857,71,3.513,73,3.513,74,3.918,76,2.857,77,1.73,78,4.528,80,3.513,81,1.91,83,4.66,85,3.513,86,4.251,88,3.513,91,3.137,93,2.857,95,3.137,96,2.446,98,3.513,100,3.513,101,3.513,103,1.549,105,3.513,106,3.513,108,4.03,109,1.405,110,2.857,111,2.022,112,3.244,113,5.229,114,4.66,115,4.973,116,4.66,117,4.66,118,4.66,119,4.66,120,5.229,121,2.398,122,4.161,123,4.66,124,4.66,741,4.084,742,4.084]],["title/components/CreateRoleComponent.html",[167,0.181,272,0.721]],["body/components/CreateRoleComponent.html",[0,0.038,3,0.129,4,0.129,5,0.111,7,0.206,8,0.503,11,0.689,12,0.435,13,0.019,15,0.498,20,0.148,21,0.011,22,0.011,23,1.117,44,0.766,45,0.766,59,0.925,62,1.117,77,0.969,81,1.593,129,0.719,131,0.758,135,0.569,136,0.569,140,0.719,142,0.722,144,0.382,156,0.803,166,0.63,167,0.271,168,0.662,169,1.183,170,0.883,171,0.883,172,0.883,173,0.883,177,1.076,178,1.433,179,0.883,180,1.971,181,1.794,182,0.803,184,1.24,186,1.24,193,1.629,198,1.13,202,1.716,237,0.969,238,1.117,261,0.883,262,1.24,263,1.24,264,0.883,265,1.555,266,0.883,267,0.883,268,0.73,269,0.883,270,0.73,271,0.883,272,1.166,273,1.703,274,1.24,275,0.662,276,1.433,277,0.662,278,0.883,279,0.662,280,0.883,281,0.73,282,0.883,283,0.662,284,0.842,285,1.24,286,0.662,287,0.883,288,0.662,289,0.883,290,0.696,291,0.766,292,0.883,293,0.662,294,0.883,295,0.662,296,0.73,297,0.662,298,0.883,299,0.73,300,0.883,301,0.662,302,0.662,303,1.183,304,0.662,305,0.662,306,0.883,307,0.662,308,0.883,309,0.662,310,0.842,311,0.803,312,0.883,313,0.883,346,1.744,347,1.587,375,0.696,382,1.349,460,1.172,501,1.23,611,2.761,638,1.065,654,2.827,663,2.323,676,1.43,685,1.43,689,1.508,690,1.43,707,1.359,743,5.639,744,5.035,745,2.617,746,4.759,747,4.117,748,2.738,749,5.035,750,2.93,751,3.444,752,4.117,753,3.407,754,2.93,755,2.93,756,2.383,757,1.23,758,2.196,759,1.359,760,2.196,761,3.084,762,1.686,763,3.407,764,2.93,765,2.93,766,2.514,767,4.117,768,3.407,769,2.617,770,2.617,771,2.617,772,2.196,773,3.676,774,2.514,775,1.508]],["title/components/CreateStatusComponent.html",[167,0.181,275,0.721]],["body/components/CreateStatusComponent.html",[0,0.037,1,1.477,3,0.126,4,0.126,5,0.108,7,0.202,8,0.496,11,0.684,12,0.43,13,0.019,15,0.494,20,0.145,21,0.011,22,0.011,23,1.093,44,0.75,45,0.75,59,0.906,77,0.949,129,0.708,131,0.747,135,0.557,136,0.557,140,0.708,142,0.756,144,0.374,153,1.477,154,1.752,156,0.786,166,0.872,167,0.268,168,0.648,169,1.165,170,0.864,171,0.864,172,0.864,173,0.864,177,1.06,178,1.417,179,0.864,180,1.968,181,1.791,182,0.786,183,1.33,184,1.222,186,1.222,193,1.614,198,1.117,202,1.703,217,1.997,218,1.752,237,0.949,238,1.093,261,0.864,262,1.222,263,1.222,264,0.864,265,1.54,266,0.864,267,0.864,268,0.715,269,0.864,270,0.715,271,0.864,272,0.648,273,1.696,274,1.222,275,1.156,276,1.417,277,0.648,278,0.864,279,0.648,280,0.864,281,0.715,282,0.864,283,0.648,284,0.824,285,1.222,286,0.648,287,0.864,288,0.648,289,0.864,290,0.681,291,0.75,292,0.864,293,0.648,294,0.864,295,0.648,296,0.715,297,0.648,298,0.864,299,0.715,300,0.864,301,0.648,302,0.648,303,1.165,304,0.648,305,0.648,306,0.864,307,0.648,308,0.864,309,0.648,310,0.824,311,0.786,312,0.864,313,0.864,346,1.734,347,1.578,375,0.681,382,1.336,460,1.147,501,1.204,577,1.997,578,1.651,611,1.788,638,1.043,654,2.81,663,2.296,676,1.4,685,1.4,689,1.477,690,1.4,707,1.33,748,2.707,749,5.001,757,1.204,759,1.33,760,2.15,761,3.039,762,1.651,769,2.562,770,2.562,771,2.562,774,2.477,775,1.477,776,5.6,777,5.001,778,2.562,779,2.803,780,4.201,781,3.622,782,2.869,783,3.643,784,4.715,785,3.335,786,3.335,787,3.335,788,2.869,789,2.333,790,3.335,791,2.869,792,3.335,793,4.056]],["title/components/CreateUserComponent.html",[167,0.181,277,0.721]],["body/components/CreateUserComponent.html",[0,0.032,3,0.11,4,0.11,5,0.094,7,0.175,8,0.447,11,0.706,12,0.488,13,0.019,15,0.537,17,2.498,20,0.125,21,0.01,22,0.01,23,0.948,44,0.957,45,0.957,59,0.785,77,0.823,81,1.352,103,1.097,112,1.732,129,0.639,131,0.674,135,0.711,136,0.711,140,0.836,142,0.717,144,0.324,151,1.269,156,0.682,159,1.822,166,1.32,167,0.247,168,0.562,169,1.052,170,0.749,171,0.749,172,0.749,173,0.749,177,0.957,178,1.307,179,0.749,180,1.939,181,1.765,182,0.682,184,1.102,186,1.102,193,1.511,198,1.136,202,1.61,218,1.52,237,0.823,238,0.948,261,0.749,262,1.102,263,1.102,264,0.749,265,1.442,266,0.749,267,0.749,268,0.62,269,0.749,270,0.62,271,0.749,272,0.562,273,1.651,274,1.102,275,0.562,276,1.307,277,1.082,278,0.749,279,0.562,280,0.749,281,0.62,282,0.749,283,0.562,284,0.715,285,1.102,286,0.562,287,0.749,288,0.562,289,0.749,290,0.591,291,0.65,292,0.749,293,0.562,294,0.749,295,0.562,296,0.62,297,0.562,298,0.749,299,0.62,300,0.749,301,0.562,302,0.562,303,1.052,304,0.562,305,0.562,306,0.749,307,0.562,308,0.749,309,0.562,310,1.247,311,0.682,312,0.749,313,0.749,346,1.661,347,1.512,375,0.591,382,1.333,460,0.995,473,1.619,499,2.365,501,1.044,528,2.235,533,2.498,541,2.742,595,1.864,611,2.352,615,2.381,638,0.904,653,2.745,654,2.692,663,2.119,676,1.214,682,1.52,685,1.214,689,1.28,690,2.692,707,1.154,748,2.498,749,4.764,751,3.368,756,2.023,757,1.044,758,1.864,759,1.154,760,1.864,761,2.742,762,1.432,765,2.488,766,2.651,769,2.222,770,2.222,771,2.222,774,2.235,775,1.28,794,5.954,795,5.317,796,2.488,797,5.046,798,4.254,799,4.341,800,4.787,801,3.66,802,4.787,803,2.488,804,4.254,805,2.892,806,2.892,807,3.66,808,2.892,809,2.892,810,2.892,811,2.892,812,2.892,813,2.488,814,2.892,815,1.864,816,2.892,817,3.53,818,2.488,819,2.488,820,2.488,821,2.488,822,2.488,823,2.222,824,2.488,825,2.488,826,2.892,827,2.488,828,2.742,829,3.66,830,3.268,831,3.66,832,4.254]],["title/components/DashboardComponent.html",[167,0.181,279,0.721]],["body/components/DashboardComponent.html",[0,0.033,3,0.166,4,0.114,5,0.098,7,0.182,8,0.46,11,0.542,12,0.344,13,0.019,14,0.693,15,0.542,20,0.13,21,0.01,22,0.01,44,0.983,45,0.983,51,2.666,59,1.538,60,3.608,62,1.434,65,2.165,68,2.101,77,0.855,86,3.059,95,4.352,96,1.799,103,1.956,109,1.033,129,0.657,131,0.476,135,0.502,136,0.502,140,0.904,142,0.661,144,0.337,145,1.33,150,1.33,156,0.708,166,0.556,167,0.252,168,0.584,169,1.081,170,0.778,171,0.778,172,0.778,173,0.778,177,0.983,178,1.336,179,0.778,180,1.947,181,1.772,182,0.708,184,1.133,186,1.133,193,1.538,198,1.325,202,1.188,207,1.799,261,0.778,262,1.133,263,1.133,264,0.778,265,1.468,266,0.778,267,0.778,268,0.644,269,0.778,270,0.644,271,0.778,272,0.584,273,1.216,274,1.133,275,0.584,276,1.336,277,0.584,278,0.778,279,1.101,280,0.778,281,0.644,282,0.778,283,0.584,284,0.743,285,1.133,286,0.584,287,0.778,288,0.584,289,0.778,290,0.613,291,0.675,292,0.778,293,0.584,294,0.778,295,0.584,296,0.644,297,0.584,298,0.778,299,0.644,300,0.778,301,0.584,302,0.584,303,1.081,304,0.584,305,0.584,306,0.778,307,0.584,308,0.778,309,0.584,310,0.743,311,0.708,312,0.778,313,0.778,342,3.608,345,2.101,346,1.628,347,1.53,354,1.33,356,2.584,358,3.059,365,1.578,367,1.799,374,3.608,375,0.613,382,0.675,388,2.584,390,2.584,397,3.059,400,2.584,410,1.799,499,2.26,587,2.101,588,2.448,589,3.36,607,2.308,630,1.487,670,2.101,685,1.261,707,2.402,730,2.057,757,1.085,779,1.659,833,2.584,834,5.158,835,4.374,836,5.158,837,4.437,838,5.158,839,5.666,840,4.874,841,5.666,842,4.212,843,4.374,844,5.158,845,4.374,846,4.374,847,3.004,848,3.325,849,4.374,850,4.374,851,4.374,852,4.374,853,3.36,854,3.004,855,3.004,856,4.374,857,3.004,858,3.004,859,3.004,860,6.022,861,3.004,862,3.36,863,2.584,864,2.308,865,3.004,866,3.763,867,3.004,868,3.36,869,3.004,870,2.584,871,3.004,872,4.874,873,2.101,874,3.004,875,3.004,876,2.584,877,2.584,878,3.004,879,3.004,880,2.101,881,4.374,882,4.374,883,2.584,884,3.004,885,3.004,886,3.004,887,4.374,888,2.308,889,3.004,890,3.004,891,2.584,892,3.004,893,4.374,894,2.584,895,3.004,896,2.584,897,3.004,898,2.584,899,3.004,900,3.004,901,2.308,902,2.308,903,2.308,904,2.584,905,2.584,906,3.004]],["title/modules/DashboardModule.html",[429,2.389,494,2.074]],["body/modules/DashboardModule.html",[0,0.043,3,0.148,4,0.148,5,0.127,13,0.019,20,0.17,21,0.012,22,0.012,142,0.777,143,1.732,144,0.439,168,1.237,270,1.465,272,1.237,275,1.237,277,1.237,279,1.237,281,1.465,286,1.237,293,1.237,296,0.838,297,1.237,299,1.465,301,1.237,302,1.237,304,1.237,305,1.237,307,1.237,397,2.736,431,2.055,432,3.392,439,4.095,440,3.152,441,4.095,442,4.043,443,2.736,445,4.043,446,4.043,447,3.392,452,3.392,454,3.365,458,4.043,459,4.043,460,1.345,463,5.117,469,4.043,470,2.521,471,2.343,472,2.736,473,2.189,475,4.528,476,4.528,477,4.528,478,2.33,494,4.39,578,1.936,641,2.736,907,3.365,908,3.365,909,3.912,910,3.365,911,4.407,912,3.912,913,4.528,914,3.681,915,3.912,916,3.912,917,3.912,918,3.912,919,3.912,920,3.912,921,3.365]],["title/modules/DashboardRoutingModule.html",[429,2.389,911,2.389]],["body/modules/DashboardRoutingModule.html",[0,0.04,3,0.135,4,0.135,5,0.116,13,0.019,20,0.214,21,0.012,22,0.012,109,1.7,142,0.784,144,0.4,166,0.66,167,0.359,168,1.102,175,2.74,182,1.165,183,1.423,272,1.102,273,1.337,275,1.102,277,1.102,279,1.102,286,1.102,293,1.102,297,1.102,301,1.102,302,1.102,303,1.402,304,1.102,305,1.102,307,1.102,375,0.728,431,1.874,447,2.299,452,3.185,480,2.495,481,3.655,482,4.251,492,4.692,498,6.309,500,5.545,501,2.606,502,5.545,503,6.209,504,6.209,505,6.209,506,6.209,509,2.74,611,1.353,744,2.74,766,1.874,777,3.796,779,1.874,795,2.74,911,3.185,914,2.495,922,2.74,923,3.567,924,3.567,925,3.567,926,3.567,927,3.567,928,4.942,929,3.567,930,3.567,931,2.74,932,4.942,933,3.567,934,3.796,935,3.567,936,3.567,937,3.567,938,3.567,939,2.74,940,3.567,941,3.567,942,3.567,943,2.495,944,3.069,945,3.567,946,3.567,947,3.567,948,3.567]],["title/classes/DataMail.html",[0,0.041,949,2.389]],["body/classes/DataMail.html",[0,0.065,2,2.45,3,0.221,4,0.221,5,0.19,7,0.353,8,0.711,12,0.459,13,0.017,14,1.072,15,0.459,20,0.253,21,0.016,22,0.016,533,3.534,949,4.358,950,5.018,951,5.834]],["title/interceptors/ErrorInterceptor.html",[440,2.219,952,2.847]],["body/interceptors/ErrorInterceptor.html",[0,0.043,3,0.147,4,0.147,5,0.127,7,0.359,11,0.551,12,0.413,13,0.019,15,0.413,20,0.257,21,0.012,22,0.012,47,2.989,51,2.934,61,1.722,62,1.945,77,1.688,109,1.804,121,1.722,125,1.639,129,0.788,131,0.617,135,0.876,136,0.876,140,0.584,141,3.335,142,0.733,143,1.722,144,0.436,145,1.722,150,1.722,151,1.893,177,0.875,320,2.989,321,2.33,323,2.178,345,2.721,346,1.769,347,1.645,354,2.322,358,2.721,360,2.989,365,2.044,375,0.794,382,0.875,440,3.14,590,2.044,609,2.33,610,2.989,629,2.044,630,1.926,707,2.092,714,4.028,888,2.989,953,3.347,954,2.989,955,5.103,956,3.891,957,4.511,958,5.701,959,5.461,960,5.701,961,3.891,962,4.511,963,3.347,964,4.511,965,3.891,966,3.891,967,3.891,968,3.891,969,5.244,970,3.347,971,2.989,972,4.028,973,4.028,974,3.347,975,2.989,976,2.989,977,2.989,978,3.347,979,4.511,980,3.891,981,5.932,982,5.244,983,3.891,984,5.244,985,5.244,986,5.244,987,5.244,988,3.891,989,3.891,990,3.891,991,5.932,992,5.932,993,3.891,994,3.891,995,3.891,996,3.891,997,3.891,998,5.244,999,3.891,1000,3.891,1001,3.891,1002,3.891,1003,3.891,1004,3.891,1005,3.891,1006,3.347,1007,3.891,1008,3.891,1009,3.891,1010,5.244,1011,3.891,1012,3.347,1013,3.891,1014,3.891,1015,3.891,1016,3.891,1017,3.891,1018,3.891,1019,3.891,1020,5.244,1021,3.891,1022,3.891,1023,3.891,1024,3.891,1025,3.891,1026,3.891,1027,3.891]],["title/components/FooterComponent.html",[167,0.181,281,0.794]],["body/components/FooterComponent.html",[0,0.041,3,0.141,4,0.141,5,0.121,7,0.225,11,0.534,13,0.018,15,0.4,20,0.161,21,0.012,22,0.012,59,1.38,60,3.554,61,2.25,62,1.666,65,2.515,77,1.916,129,0.763,131,0.918,140,0.558,142,0.39,144,0.416,156,0.876,166,0.687,167,0.283,168,0.722,169,1.256,170,0.962,171,0.962,172,0.962,173,0.962,177,1.143,178,1.501,179,0.962,180,1.987,181,1.808,182,0.876,184,1.317,186,1.317,193,1.691,198,1.038,237,1.057,238,1.218,242,1.839,261,0.962,262,1.317,263,1.317,264,0.962,265,1.613,266,0.962,267,0.962,268,0.796,269,0.962,270,0.796,271,0.962,272,0.722,273,1.366,274,1.317,275,0.722,276,1.501,277,0.722,278,0.962,279,0.722,280,0.962,281,1.335,282,0.962,283,0.722,284,0.918,285,1.317,286,0.722,287,0.962,288,0.722,289,0.962,290,0.758,291,0.835,292,0.962,293,0.722,294,0.962,295,0.722,296,0.796,297,0.722,298,0.962,299,0.796,300,0.962,301,0.722,302,0.722,303,1.256,304,0.722,305,0.722,306,0.962,307,0.722,308,0.962,309,0.722,310,0.918,311,0.876,312,0.962,313,0.962,351,2.844,354,2.25,365,2.67,587,3.554,629,2.67,726,3.196,727,1.645,730,1.482,731,2.079,732,2.079,733,2.598,734,1.952,735,1.952,848,3.275,894,4.372,1028,3.196,1029,5.792,1030,5.792,1031,5.082,1032,3.715,1033,3.715,1034,5.082,1035,5.082,1036,5.082,1037,5.082,1038,5.082,1039,5.082,1040,5.082,1041,5.082,1042,5.082,1043,5.082,1044,5.082,1045,5.082,1046,5.082,1047,5.082,1048,5.082,1049,5.082,1050,4.372,1051,5.082,1052,5.082,1053,1.952,1054,3.196,1055,1.952,1056,2.67,1057,3.715,1058,3.715,1059,3.715,1060,3.715,1061,2.224,1062,3.196,1063,3.715,1064,3.715,1065,2.854,1066,3.715,1067,3.715,1068,2.224,1069,3.715,1070,3.196,1071,5.792,1072,3.715,1073,3.715,1074,3.715,1075,3.715,1076,3.715,1077,3.715,1078,3.715,1079,2.394,1080,3.196]],["title/components/ForgotPasswordComponent.html",[167,0.181,283,0.721]],["body/components/ForgotPasswordComponent.html",[0,0.024,1,2.789,3,0.081,4,0.081,5,0.069,7,0.129,8,0.355,10,1.773,11,0.44,12,0.496,13,0.019,14,0.82,15,0.544,20,0.093,21,0.008,22,0.008,23,0.7,44,1.416,45,1.416,59,1.291,61,1.852,62,1.559,63,2.506,65,1.057,74,2.175,77,1.191,81,0.999,93,1.494,109,0.735,111,1.057,121,0.945,126,2.847,129,0.507,131,0.535,135,0.357,136,0.357,140,0.628,142,0.721,144,0.239,151,0.637,153,2.645,154,1.122,156,0.504,157,2.661,158,1.641,159,1.218,166,1.165,167,0.205,168,0.415,169,0.834,170,0.553,171,0.553,172,0.553,173,0.553,177,0.759,178,1.084,179,0.553,180,1.868,181,1.7,182,0.504,183,0.852,184,0.874,186,0.874,193,1.291,195,3.226,198,0.971,202,1.774,217,1.279,218,1.122,219,1.376,220,1.494,237,1.191,238,1.106,239,1.122,242,1.057,244,0.999,248,1.773,250,1.122,252,1.195,255,1.279,260,1.376,261,0.553,262,0.874,263,0.874,264,0.553,265,1.232,266,0.553,267,0.553,268,0.458,269,0.553,270,0.458,271,0.553,272,0.415,273,0.987,274,0.874,275,0.415,276,1.084,277,0.415,278,0.553,279,0.415,280,0.553,281,0.458,282,0.553,283,0.924,284,1.477,285,0.874,286,0.415,287,0.553,288,0.415,289,0.553,290,0.436,291,0.48,292,0.553,293,0.415,294,0.553,295,0.415,296,1.019,297,0.415,298,0.553,299,0.458,300,0.553,301,0.415,302,0.415,303,0.834,304,0.415,305,0.415,306,0.553,307,0.415,308,0.553,309,0.415,310,0.528,311,0.796,312,0.553,313,0.553,329,2.071,346,1.493,347,1.359,351,1.195,354,2.292,360,1.641,365,1.773,375,0.436,382,1.344,389,1.494,460,0.735,478,0.945,484,5.354,499,2.195,501,0.771,516,2.697,517,2.697,528,1.773,529,3.214,533,2.958,562,2.175,565,2.506,577,1.279,578,1.057,581,3.325,588,2.342,589,1.641,590,1.122,603,1.494,615,2.661,616,2.903,617,1.837,618,1.837,619,1.837,620,1.837,621,1.837,622,2.927,623,2.593,624,1.641,625,1.837,626,1.641,628,1.837,629,1.773,630,1.057,631,1.837,633,1.837,634,1.837,635,1.837,636,1.837,638,1.055,639,0.999,653,2.552,654,2.311,663,1.757,676,0.897,682,1.122,685,0.897,689,0.945,690,0.897,707,0.852,708,3.599,727,0.945,728,1.279,730,0.852,731,1.889,732,3.081,734,1.122,735,1.122,748,2.071,757,0.771,759,0.852,762,1.057,775,0.945,783,3.226,789,1.494,828,1.376,842,1.494,873,1.494,949,3.851,1012,1.837,1053,1.122,1055,2.72,1056,1.122,1061,1.279,1068,1.279,1079,1.376,1081,5.996,1082,1.641,1083,3.599,1084,2.903,1085,1.511,1086,3.599,1087,3.599,1088,4.184,1089,4.754,1090,4.754,1091,3.599,1092,1.837,1093,3.599,1094,4.09,1095,3.375,1096,2.136,1097,2.136,1098,2.136,1099,1.837,1100,1.837,1101,1.837,1102,2.136,1103,1.837,1104,1.837,1105,1.837,1106,2.136,1107,1.837,1108,2.136,1109,1.837,1110,1.837,1111,2.136,1112,1.641,1113,1.641,1114,1.837,1115,1.837,1116,2.593,1117,2.136,1118,1.837,1119,3.375,1120,1.641,1121,2.136,1122,1.641,1123,2.136,1124,2.136,1125,2.136,1126,2.136,1127,2.136,1128,2.903,1129,2.136,1130,1.837,1131,2.136,1132,2.136,1133,2.136,1134,2.136,1135,2.136,1136,2.136,1137,2.136,1138,2.36,1139,2.136,1140,1.837,1141,2.136,1142,2.136,1143,2.136,1144,2.136,1145,2.136,1146,2.136,1147,2.136,1148,1.837,1149,1.641,1150,1.494,1151,2.136,1152,2.136,1153,2.136,1154,1.837,1155,2.136,1156,2.136,1157,2.136,1158,2.136,1159,2.136,1160,2.136,1161,1.837,1162,2.136,1163,2.136,1164,1.837,1165,1.837,1166,1.837,1167,1.837,1168,3.375,1169,3.375,1170,1.376,1171,1.376,1172,1.376,1173,1.494,1174,1.494,1175,1.376,1176,1.376,1177,1.641,1178,1.376,1179,1.376,1180,1.376,1181,1.376,1182,1.494]],["title/components/HomeComponent.html",[167,0.181,286,0.721]],["body/components/HomeComponent.html",[0,0.048,3,0.164,4,0.164,5,0.141,7,0.262,11,0.592,13,0.018,15,0.444,20,0.188,21,0.013,22,0.013,129,0.846,131,0.992,140,0.651,142,0.456,144,0.486,156,1.023,166,0.802,167,0.306,168,0.843,169,1.393,170,1.124,171,1.124,172,1.124,173,1.124,177,1.267,178,1.622,179,1.124,180,2.012,181,1.831,182,1.023,184,1.46,186,1.46,193,1.799,198,1.15,261,1.124,262,1.46,263,1.46,264,1.124,265,1.717,266,1.124,267,1.124,268,0.929,269,1.124,270,0.929,271,1.124,272,0.843,273,1.476,274,1.46,275,0.843,276,1.622,277,0.843,278,1.124,279,0.843,280,1.124,281,0.929,282,1.124,283,0.843,284,1.072,285,1.46,286,1.288,287,1.124,288,0.843,289,1.124,290,0.886,291,0.975,292,1.124,293,0.843,294,1.124,295,0.843,296,0.929,297,0.843,298,1.124,299,0.929,300,1.124,301,0.843,302,0.843,303,1.393,304,0.843,305,0.843,306,1.124,307,0.843,308,1.124,309,0.843,310,1.072,311,1.023,312,1.124,313,1.124,1183,3.731,1184,4.847,1185,6.259,1186,5.635,1187,4.337,1188,4.337,1189,5.635]],["title/components/LoginComponent.html",[167,0.181,288,0.721]],["body/components/LoginComponent.html",[0,0.03,3,0.101,4,0.101,5,0.087,7,0.162,8,0.422,11,0.563,12,0.422,13,0.019,15,0.535,17,2.841,20,0.116,21,0.01,22,0.01,23,0.878,36,2.809,44,0.903,45,0.903,51,1.185,59,1.455,61,1.185,62,1.58,70,1.872,77,0.762,78,2.809,103,1.828,109,1.381,111,1.325,121,2.134,129,0.603,131,0.636,135,0.671,136,0.671,140,0.805,142,0.676,144,0.3,151,1.438,156,0.631,159,2.257,166,0.495,167,0.236,168,0.52,169,0.993,170,0.693,171,0.693,172,0.693,173,0.693,177,0.903,178,1.249,179,0.693,180,1.923,181,1.76,182,0.631,184,1.041,186,1.041,193,1.455,198,1.172,237,1.372,238,1.317,239,1.406,242,1.325,244,1.252,248,2.11,250,1.406,252,1.498,255,1.603,260,1.725,261,0.693,262,1.041,263,1.041,264,0.693,265,1.388,266,0.693,267,0.693,268,0.574,269,0.693,270,0.574,271,0.693,272,0.52,273,1.137,274,1.041,275,0.52,276,1.249,277,0.52,278,0.693,279,0.52,280,0.693,281,0.574,282,0.693,283,0.52,284,1.192,285,1.041,286,0.52,287,0.693,288,1.041,289,0.693,290,0.547,291,0.602,292,0.693,293,0.52,294,0.693,295,0.52,296,0.574,297,0.52,298,0.693,299,0.574,300,0.693,301,0.52,302,0.52,303,0.993,304,0.52,305,0.52,306,0.693,307,0.52,308,0.693,309,0.52,310,0.662,311,0.631,312,0.693,313,0.693,346,1.62,347,1.474,351,1.498,365,1.406,374,1.872,375,0.547,382,1.291,402,4.239,409,2.056,410,1.603,425,2.056,426,2.056,427,2.056,428,2.056,460,0.921,473,2.698,478,1.185,499,2.623,528,2.11,588,1.498,590,2.11,596,2.303,608,2.056,615,2.248,629,1.406,638,0.837,653,2.768,654,2.249,663,2.024,676,1.124,682,1.406,685,1.124,690,1.686,727,1.185,728,1.603,730,1.068,731,2.248,732,3.373,734,1.406,735,1.406,748,2.652,757,0.966,759,1.068,762,1.325,775,1.185,842,1.872,848,3.453,873,1.872,891,2.303,1053,1.406,1055,3.016,1056,1.406,1061,1.603,1068,1.603,1079,1.725,1087,4.147,1091,4.147,1093,4.147,1094,4.608,1110,2.303,1112,2.056,1113,2.056,1118,2.303,1122,2.056,1130,2.303,1149,2.056,1164,2.303,1165,2.303,1166,2.303,1167,2.303,1170,1.725,1171,1.725,1172,1.725,1173,1.872,1174,1.872,1175,1.725,1176,1.725,1178,1.725,1179,1.725,1180,1.725,1181,1.725,1182,1.872,1190,2.303,1191,4.821,1192,4.016,1193,4.821,1194,5.357,1195,4.016,1196,2.677,1197,2.677,1198,4.016,1199,2.677,1200,2.677,1201,2.677,1202,4.016,1203,2.677,1204,2.677,1205,2.677,1206,2.677,1207,2.303,1208,2.677,1209,2.303,1210,2.677,1211,2.677,1212,3.085,1213,3.085,1214,3.085,1215,2.056,1216,2.677,1217,2.677,1218,2.677,1219,2.677,1220,2.677,1221,4.016,1222,2.677,1223,2.677,1224,2.303,1225,2.303,1226,2.303,1227,2.303,1228,2.303,1229,2.303,1230,2.677,1231,2.677,1232,4.016,1233,2.677,1234,2.677,1235,2.677,1236,2.677,1237,2.303,1238,4.016,1239,2.056,1240,2.677,1241,2.677,1242,2.677,1243,2.303,1244,2.056,1245,2.677,1246,2.677,1247,2.677,1248,2.677,1249,2.056,1250,2.677,1251,2.677,1252,2.303,1253,2.303,1254,3.455,1255,3.455,1256,4.016,1257,4.016]],["title/classes/MailReq.html",[0,0.041,548,2.592]],["body/classes/MailReq.html",[0,0.063,2,2.406,3,0.217,4,0.217,5,0.186,7,0.346,8,0.703,12,0.527,13,0.018,14,1.157,15,0.527,20,0.248,21,0.016,22,0.016,159,2.559,548,4.68,1258,4.928,1259,6.097,1260,5.729,1261,5.729]],["title/interfaces/Menu.html",[1262,2.592,1263,2.592]],["body/interfaces/Menu.html",[3,0.217,4,0.217,5,0.186,7,0.346,8,0.703,11,0.768,12,0.527,13,0.018,14,1.194,20,0.248,21,0.016,22,0.016,1262,4.007,1263,4.68,1264,5.729,1265,4.928,1266,7.304]],["title/injectables/MessageService.html",[125,1.159,1267,2.219]],["body/injectables/MessageService.html",[0,0.058,3,0.2,4,0.2,5,0.172,7,0.319,8,0.67,11,0.555,12,0.502,13,0.019,14,1.153,15,0.539,20,0.229,21,0.015,22,0.015,44,1.186,45,1.186,125,1.992,127,2.772,129,0.957,135,0.881,136,0.881,140,0.957,142,0.555,144,0.592,148,2.772,149,2.612,198,1.301,1267,3.816,1268,4.539,1269,4.973,1270,6.372,1271,7.11,1272,6.372,1273,5.277,1274,5.277,1275,5.277,1276,5.277,1277,5.277]],["title/components/NotFoundPageComponent.html",[167,0.181,290,0.757]],["body/components/NotFoundPageComponent.html",[0,0.041,3,0.139,4,0.139,5,0.12,7,0.222,8,0.53,11,0.606,12,0.289,13,0.018,15,0.488,20,0.159,21,0.012,22,0.012,59,0.998,68,2.572,77,1.046,103,1.395,129,0.758,131,0.583,135,0.614,136,0.614,140,0.758,142,0.53,144,0.412,150,1.628,156,0.867,166,0.68,167,0.282,168,0.715,169,1.247,170,0.953,171,0.953,172,0.953,173,0.953,177,1.135,178,1.493,179,0.953,180,1.985,181,1.807,182,0.867,184,1.307,186,1.307,193,1.684,198,1.176,237,1.436,238,1.205,248,1.932,250,1.932,255,2.202,261,0.953,262,1.307,263,1.307,264,0.953,265,1.607,266,0.953,267,0.953,268,0.788,269,0.953,270,0.788,271,0.953,272,0.715,273,1.358,274,1.307,275,0.715,276,1.493,277,0.715,278,0.953,279,0.715,280,0.953,281,0.788,282,0.953,283,0.715,284,0.909,285,1.307,286,0.715,287,0.953,288,0.715,289,0.953,290,1.266,291,1.696,292,0.953,293,0.715,294,0.953,295,0.715,296,0.788,297,0.715,298,0.953,299,0.788,300,0.953,301,0.715,302,0.715,303,1.247,304,0.715,305,0.715,306,0.953,307,0.715,308,0.953,309,0.715,310,0.909,311,0.867,312,0.953,313,0.953,347,1.583,375,0.751,402,2.37,410,2.202,467,4.545,607,2.824,630,1.82,652,2.202,724,2.824,725,3.163,727,1.628,728,2.202,730,1.466,731,2.824,732,3.637,734,1.932,735,1.932,837,4.956,842,4.545,866,3.163,876,3.163,877,3.163,883,3.163,1053,1.932,1055,3.258,1056,1.932,1061,2.202,1068,2.202,1170,2.37,1171,2.37,1172,2.37,1175,2.37,1176,2.37,1178,2.37,1179,2.37,1180,2.37,1181,2.37,1278,5.59,1279,3.163,1280,4.341,1281,5.761,1282,5.046,1283,5.046,1284,3.677,1285,3.677,1286,3.677,1287,3.677,1288,3.677,1289,3.677]],["title/components/ProfileComponent.html",[167,0.181,293,0.721]],["body/components/ProfileComponent.html",[0,0.025,3,0.185,4,0.085,5,0.114,7,0.135,8,0.367,10,1.174,11,0.671,12,0.491,13,0.019,14,0.554,15,0.563,17,2.132,20,0.097,21,0.008,22,0.008,44,1.318,45,1.318,50,2.253,51,1.548,52,2.686,59,0.949,62,1.598,76,1.562,77,1.775,78,1.562,103,1.326,108,2.263,109,1.819,112,1.337,129,0.525,131,0.554,135,0.719,136,0.719,140,0.881,142,0.704,144,0.25,146,1.106,147,1.25,151,1.285,156,0.824,159,1.91,166,1.154,167,0.211,168,0.434,169,0.864,170,0.579,171,0.579,172,0.579,173,0.579,177,0.786,178,1.116,179,0.579,180,1.88,181,1.711,182,0.527,184,0.906,186,0.906,193,1.323,198,1.274,202,1.323,218,1.174,237,0.995,247,1.44,250,1.174,261,0.579,262,0.906,263,0.906,264,0.579,265,1.263,266,0.579,267,0.579,268,0.479,269,0.579,270,0.749,271,0.579,272,0.434,273,1.016,274,0.906,275,0.434,276,1.116,277,0.434,278,0.579,279,0.434,280,0.579,281,0.479,282,0.579,283,0.434,284,0.552,285,0.906,286,0.434,287,0.579,288,0.434,289,0.579,290,0.456,291,0.502,292,0.579,293,0.947,294,0.579,295,0.434,296,0.479,297,0.434,298,0.579,299,0.479,300,0.579,301,0.434,302,0.434,303,1.387,304,0.434,305,0.434,306,0.579,307,0.434,308,0.579,309,0.434,310,1.065,311,0.527,312,0.579,313,0.579,342,1.562,347,1.323,351,1.25,354,0.989,367,2.093,375,0.456,382,0.969,394,2.686,409,1.716,460,0.768,471,1.337,473,1.25,478,0.989,499,2.488,501,0.806,528,1.837,533,2.132,541,2.253,588,1.25,595,2.253,603,3.408,615,2.961,629,1.837,630,2.412,638,0.698,639,1.044,641,1.562,646,1.921,652,1.337,653,2.596,654,2.462,663,2.62,670,1.562,676,1.468,678,1.716,679,1.921,680,1.562,681,1.44,682,1.174,685,0.938,686,1.921,687,3.744,689,1.548,690,1.468,707,1.394,711,1.921,730,0.891,748,2.132,759,0.891,762,1.106,775,0.989,799,3.706,801,3.007,807,3.007,815,1.44,817,3.013,818,1.921,819,1.921,830,2.686,853,1.716,863,1.921,864,1.716,898,3.007,901,1.716,902,1.716,903,2.686,904,1.921,905,1.921,921,1.921,944,3.007,1055,1.174,1056,2.56,1070,1.921,1080,1.921,1085,1.555,1290,1.921,1291,4.308,1292,3.496,1293,4.308,1294,4.826,1295,4.308,1296,4.308,1297,4.308,1298,4.308,1299,4.873,1300,3.496,1301,4.873,1302,4.192,1303,4.873,1304,4.873,1305,5.29,1306,5.29,1307,3.496,1308,2.234,1309,3.496,1310,4.308,1311,2.234,1312,2.234,1313,2.234,1314,3.496,1315,3.007,1316,3.496,1317,3.744,1318,3.496,1319,2.234,1320,2.234,1321,2.234,1322,2.234,1323,2.234,1324,2.234,1325,4.308,1326,3.496,1327,2.234,1328,2.234,1329,2.234,1330,2.234,1331,2.234,1332,2.234,1333,3.496,1334,2.234,1335,2.234,1336,2.234,1337,2.234,1338,2.234,1339,2.234,1340,2.234,1341,2.686,1342,2.686,1343,3.496,1344,2.234,1345,2.234,1346,2.234,1347,2.234,1348,2.234,1349,2.234,1350,2.234,1351,2.234,1352,2.234,1353,2.234,1354,2.234,1355,2.234,1356,2.234,1357,2.234,1358,2.234,1359,2.234,1360,2.234,1361,1.921,1362,3.496,1363,2.234,1364,2.234,1365,2.234,1366,2.234,1367,2.234,1368,2.234,1369,2.234,1370,2.234,1371,2.234,1372,2.234,1373,2.234,1374,2.234,1375,2.234,1376,2.234,1377,2.234,1378,1.921,1379,2.234,1380,2.234,1381,2.234,1382,2.234,1383,1.921,1384,2.234,1385,2.234,1386,2.234,1387,2.234,1388,2.234,1389,2.234,1390,2.234,1391,3.496,1392,4.873,1393,3.007,1394,3.496,1395,3.007,1396,2.234,1397,2.234,1398,2.234]],["title/components/ResetPasswordComponent.html",[167,0.181,295,0.721]],["body/components/ResetPasswordComponent.html",[0,0.025,1,2.707,3,0.166,4,0.087,5,0.074,7,0.138,8,0.374,11,0.459,12,0.515,13,0.019,14,0.897,15,0.559,20,0.099,21,0.008,22,0.008,23,0.749,44,1.375,45,1.375,51,2.183,59,0.62,62,0.749,63,1.367,65,1.76,77,0.65,103,1.349,109,1.223,111,1.13,121,1.011,129,0.534,131,0.564,135,0.381,136,0.381,140,0.803,142,0.698,144,0.256,151,1.061,153,2.707,154,1.2,156,1.03,157,2.76,166,1.246,167,0.214,168,0.444,169,0.879,170,0.592,171,0.592,172,0.592,173,0.592,177,0.8,178,1.132,179,0.592,180,1.885,181,1.716,182,0.538,183,0.911,184,0.921,186,0.921,193,1.339,198,1.207,202,1.869,217,1.367,218,1.2,237,1.243,238,1.166,239,1.2,244,1.068,248,1.869,250,1.2,252,1.278,255,1.367,260,1.472,261,0.592,262,0.921,263,0.921,264,0.592,265,1.278,266,0.592,267,0.592,268,0.489,269,0.592,270,0.489,271,0.592,272,0.444,273,1.03,274,0.921,275,0.444,276,1.132,277,0.444,278,0.592,279,0.444,280,0.592,281,0.489,282,0.592,283,0.444,284,0.564,285,0.921,286,0.444,287,0.592,288,0.444,289,0.592,290,0.466,291,0.513,292,0.592,293,0.444,294,0.592,295,0.959,296,1.376,297,0.444,298,0.592,299,0.489,300,0.592,301,0.444,302,0.444,303,0.879,304,0.444,305,0.444,306,0.592,307,0.444,308,0.592,309,0.444,310,0.564,311,0.538,312,0.592,313,0.592,329,2.162,346,1.532,347,1.394,351,1.99,354,1.011,375,0.466,382,1.109,389,2.488,398,3.06,410,1.367,460,0.785,478,1.011,488,5.485,499,2.746,501,1.781,516,2.816,517,2.816,528,1.869,533,2.646,554,3.06,562,2.292,565,2.616,577,1.367,578,1.13,581,1.597,587,2.488,588,1.99,590,1.869,595,2.816,603,2.488,622,2.488,638,1.112,639,1.068,653,2.617,654,2.377,663,1.834,676,0.959,682,1.2,685,0.959,689,1.011,690,1.493,707,1.419,727,1.011,728,1.367,730,0.911,731,1.99,732,2.991,734,1.2,735,1.2,757,0.824,759,0.911,774,2.975,775,1.011,828,1.472,848,2.292,873,1.597,888,2.732,949,3.94,1053,1.2,1055,2.808,1056,1.2,1061,1.367,1068,1.367,1079,1.472,1082,1.754,1083,3.758,1084,3.06,1085,1.577,1086,3.758,1092,1.964,1099,1.964,1100,1.964,1101,1.964,1103,1.964,1104,1.964,1105,1.964,1107,3.06,1109,1.964,1114,1.964,1122,2.732,1140,1.964,1154,1.964,1170,1.472,1171,1.472,1172,1.472,1173,1.597,1174,1.597,1175,1.472,1176,1.472,1177,1.754,1178,1.472,1179,1.472,1180,1.472,1181,1.472,1182,1.597,1209,1.964,1244,1.754,1249,1.754,1361,1.964,1393,4.87,1399,6.143,1400,4.369,1401,4.932,1402,4.932,1403,4.598,1404,2.283,1405,2.283,1406,2.283,1407,2.283,1408,3.557,1409,3.557,1410,3.758,1411,3.06,1412,3.557,1413,2.283,1414,2.283,1415,2.283,1416,2.283,1417,2.283,1418,2.283,1419,2.283,1420,2.732,1421,2.732,1422,2.283,1423,2.283,1424,2.283,1425,2.283,1426,2.283,1427,2.283,1428,3.557,1429,2.283,1430,2.283,1431,2.283,1432,2.283,1433,2.283,1434,1.964,1435,2.283,1436,3.557,1437,3.557,1438,2.283,1439,2.283,1440,2.283,1441,1.964,1442,1.964,1443,2.283,1444,2.283,1445,2.283,1446,2.283,1447,2.283,1448,2.283]],["title/classes/Role.html",[0,0.041,611,1.406]],["body/classes/Role.html",[0,0.063,2,2.406,3,0.217,4,0.217,5,0.186,7,0.346,8,0.703,11,0.745,12,0.527,13,0.018,14,1.06,15,0.527,17,3.312,20,0.248,21,0.016,22,0.016,611,2.538,1085,2.559,1449,4.928,1450,5.729,1451,5.729]],["title/injectables/RoleService.html",[125,1.159,751,1.947]],["body/injectables/RoleService.html",[0,0.041,3,0.139,4,0.139,5,0.119,7,0.221,8,0.529,11,0.722,12,0.571,13,0.019,14,1.174,15,0.559,20,0.159,21,0.012,22,0.012,44,1.132,45,1.508,125,1.573,127,1.924,129,0.756,131,0.798,132,2.361,133,4.015,135,1.168,136,1.147,140,1.031,141,3.869,142,0.722,143,1.621,144,0.411,145,1.621,146,1.813,147,2.05,148,1.924,149,1.813,151,2.048,183,2.007,198,0.748,202,1.561,321,2.193,323,2.05,327,2.562,329,1.813,382,1.573,537,2.562,572,4.022,611,2.692,638,1.573,727,2.228,730,1.461,751,2.644,823,4.756,1085,2.076,1150,2.562,1267,4.113,1269,2.562,1452,3.151,1453,4.417,1454,5.033,1455,4.329,1456,5.033,1457,3.866,1458,3.866,1459,3.663,1460,5.033,1461,3.663,1462,4.329,1463,3.663,1464,3.663,1465,5.033,1466,3.663,1467,3.866,1468,4.022,1469,4.985,1470,3.663,1471,4.417,1472,3.866,1473,3.663,1474,4.329,1475,3.663,1476,2.562,1477,3.52,1478,3.52,1479,3.663,1480,2.814,1481,3.663,1482,2.814,1483,3.663,1484,3.663,1485,3.663,1486,2.814,1487,3.663,1488,2.814,1489,3.663,1490,2.814,1491,3.663,1492,3.663,1493,2.814,1494,2.814,1495,2.814,1496,2.814,1497,2.814,1498,2.814]],["title/components/RolesComponent.html",[167,0.181,297,0.721]],["body/components/RolesComponent.html",[0,0.035,3,0.171,4,0.119,5,0.102,7,0.19,8,0.475,10,3.041,11,0.721,12,0.483,13,0.019,14,1.067,15,0.53,20,0.136,21,0.011,22,0.011,23,1.031,44,1.017,45,1.017,51,2.344,59,1.228,61,1.393,62,1.482,81,1.471,129,0.679,131,0.717,135,0.884,136,0.884,140,0.869,142,0.691,144,0.353,156,0.742,166,0.582,167,0.259,168,0.611,169,1.118,170,0.815,171,0.815,172,0.815,173,0.815,177,1.017,178,1.372,179,0.815,180,1.956,181,1.78,182,0.742,184,1.172,186,1.172,188,3.703,190,3.703,193,1.572,198,1.182,202,1.572,203,3.703,206,3.703,207,1.884,208,3.163,213,2.2,214,2.027,216,2.027,223,2.2,227,2.2,228,2.2,229,3.474,235,4.049,236,2.027,237,0.895,238,1.031,239,2.782,240,1.884,241,2.027,242,1.557,243,2.2,244,1.471,245,2.2,246,1.884,261,0.815,262,1.172,263,1.172,264,0.815,265,1.5,266,0.815,267,0.815,268,0.674,269,0.815,270,0.674,271,0.815,272,0.611,273,1.248,274,1.172,275,0.611,276,1.372,277,0.611,278,0.815,279,0.611,280,0.815,281,0.674,282,0.815,283,0.611,284,0.778,285,1.172,286,0.611,287,0.815,288,0.611,289,0.815,290,0.642,291,0.707,292,0.815,293,0.611,294,0.815,295,0.611,296,0.674,297,1.125,298,0.815,299,0.674,300,0.815,301,0.611,302,0.611,303,1.578,304,0.611,305,0.611,306,0.815,307,0.611,308,0.815,309,0.611,310,0.778,311,0.742,312,0.815,313,0.815,346,1.704,347,1.551,354,2.344,375,0.642,382,1.19,501,1.136,611,2.008,630,1.557,638,0.983,639,1.471,750,2.706,751,3.355,757,1.136,758,2.027,759,1.255,766,3.222,772,2.915,1050,2.706,1085,1.911,1128,2.706,1317,2.416,1455,3.89,1458,3.474,1462,3.89,1474,3.89,1499,2.706,1500,5.294,1501,4.522,1502,4.067,1503,4.447,1504,4.522,1505,3.145,1506,3.145,1507,3.145,1508,3.145,1509,3.145,1510,4.447,1511,3.145,1512,3.145,1513,2.416,1514,3.145,1515,3.145,1516,3.145,1517,3.145,1518,3.145,1519,3.474,1520,3.145,1521,2.706,1522,2.706,1523,3.145,1524,2.706,1525,2.2,1526,2.416,1527,3.474,1528,3.474]],["title/guards/RolguardGuard.html",[492,2.389,1529,2.847]],["body/guards/RolguardGuard.html",[0,0.052,3,0.178,4,0.178,5,0.153,7,0.284,11,0.683,12,0.511,13,0.019,15,0.511,20,0.203,21,0.014,22,0.014,50,3.023,61,2.077,62,1.943,65,2.322,77,1.686,96,2.809,103,1.779,109,2.038,125,1.852,129,0.89,131,0.743,135,1.085,136,1.085,140,0.89,142,0.683,144,0.526,148,2.465,149,2.322,150,2.077,151,1.767,177,1.055,346,1.89,347,1.694,375,0.958,382,1.534,387,4.035,478,2.077,492,3.819,500,5.241,502,3.604,541,4.186,590,2.465,609,2.809,613,4.035,615,2.625,652,2.809,766,2.465,772,3.023,970,4.035,1530,4.691,1531,4.035,1532,5.925,1533,4.691,1534,5.925,1535,7.297,1536,4.691,1537,4.144,1538,5.925,1539,4.691,1540,4.691,1541,4.691,1542,4.691,1543,4.691,1544,4.691,1545,4.035,1546,4.691,1547,4.691,1548,4.691,1549,4.691,1550,4.691]],["title/modules/SharedModule.html",[429,2.389,439,2.219]],["body/modules/SharedModule.html",[0,0.047,3,0.162,4,0.162,5,0.182,13,0.019,20,0.186,21,0.013,22,0.013,111,2.118,142,0.815,143,1.894,144,0.48,214,2.758,215,3.681,216,2.758,431,2.248,439,3.345,445,3.287,446,3.287,447,2.758,452,3.6,458,4.291,459,4.291,460,1.472,469,4.777,470,3.6,471,3.724,472,2.993,473,2.395,509,3.287,578,2.118,678,3.287,680,2.993,681,2.758,913,4.805,1112,3.287,1113,3.287,1551,4.279,1552,6.219,1553,6.219,1554,4.279,1555,4.279,1556,6.219,1557,4.279,1558,6.219,1559,4.279,1560,6.219,1561,6.219,1562,4.279,1563,6.219,1564,4.279,1565,6.219,1566,4.279,1567,6.219,1568,6.219,1569,4.279,1570,6.219,1571,4.279,1572,4.279,1573,6.219,1574,4.279,1575,6.219,1576,6.219,1577,6.219,1578,3.681,1579,6.219,1580,4.279,1581,6.219,1582,4.279,1583,6.219,1584,4.279,1585,4.279,1586,6.219,1587,6.219]],["title/components/SidenavComponent.html",[167,0.181,299,0.794]],["body/components/SidenavComponent.html",[0,0.033,3,0.114,4,0.114,5,0.098,7,0.264,8,0.46,11,0.596,12,0.446,13,0.019,15,0.523,20,0.13,21,0.01,22,0.01,44,0.983,45,0.983,108,2.71,115,2.308,121,2.666,129,0.657,131,0.693,135,0.502,136,0.502,140,0.657,142,0.633,144,0.337,156,0.708,166,0.556,167,0.252,168,0.584,169,1.081,170,0.778,171,0.778,172,0.778,173,0.778,177,0.983,178,0.778,179,0.778,180,1.947,181,1.785,182,0.708,183,1.745,184,1.133,186,1.133,198,1.157,237,1.245,240,3.606,242,1.487,244,1.405,245,2.101,246,1.799,247,4.051,248,1.578,252,1.681,261,0.778,262,1.133,263,1.468,264,0.778,265,1.468,266,0.778,267,0.778,268,0.644,269,0.778,270,0.644,271,0.778,272,0.584,273,1.216,274,1.133,275,0.584,276,1.336,277,0.584,278,0.778,279,0.584,280,0.778,281,0.644,282,0.778,283,0.584,284,0.743,285,1.133,286,0.584,287,0.778,288,0.584,289,0.778,290,0.613,291,0.675,292,0.778,293,0.584,294,0.778,295,0.584,296,0.644,297,0.584,298,0.778,299,1.214,300,0.778,301,0.584,302,0.584,303,1.081,304,0.584,305,0.584,306,0.778,307,0.584,308,0.778,309,0.584,310,0.743,311,0.708,312,0.778,313,0.778,346,1.784,347,1.53,374,3.608,375,0.613,382,1.274,478,1.936,523,5.406,681,1.936,724,2.308,727,1.33,733,3.059,734,1.578,735,2.977,736,2.584,737,2.584,757,1.085,766,2.298,779,1.659,840,4.874,868,2.308,880,3.059,943,3.059,976,2.308,1053,2.298,1054,2.584,1055,1.578,1056,1.578,1062,2.584,1065,3.36,1184,4.874,1254,3.763,1263,3.059,1383,2.584,1468,3.059,1578,2.584,1588,2.584,1589,6.778,1590,5.158,1591,4.374,1592,5.158,1593,5.158,1594,5.158,1595,5.158,1596,3.004,1597,6.285,1598,5.158,1599,5.666,1600,4.374,1601,3.004,1602,3.004,1603,3.004,1604,3.004,1605,4.374,1606,4.374,1607,4.374,1608,3.004,1609,4.374,1610,3.004,1611,3.004,1612,3.004,1613,3.004,1614,3.004,1615,3.004,1616,3.004,1617,3.004,1618,3.004,1619,3.004,1620,3.004,1621,4.374,1622,4.374,1623,4.374,1624,4.374,1625,4.374,1626,4.374,1627,4.374,1628,4.374,1629,4.374,1630,5.158,1631,4.374,1632,5.158,1633,3.004,1634,3.004,1635,3.004,1636,3.004,1637,3.004,1638,3.004,1639,3.004,1640,3.004,1641,2.584,1642,3.004,1643,3.004,1644,4.374,1645,3.004,1646,4.374,1647,3.004,1648,3.004,1649,3.004,1650,3.004,1651,3.004,1652,3.004,1653,3.004,1654,3.004]],["title/classes/Status.html",[0,0.041,779,1.406]],["body/classes/Status.html",[0,0.062,2,2.363,3,0.213,4,0.213,5,0.183,7,0.34,8,0.696,11,0.739,12,0.554,13,0.018,14,1.151,15,0.554,17,3.278,20,0.244,21,0.016,22,0.016,779,2.511,1085,2.54,1655,4.842,1656,7.036,1657,5.628,1658,5.628,1659,5.628]],["title/components/StatusComponent.html",[167,0.181,301,0.721]],["body/components/StatusComponent.html",[0,0.031,1,2.871,3,0.155,4,0.104,5,0.09,7,0.166,8,0.431,10,2.855,11,0.697,12,0.531,13,0.019,14,1.028,15,0.557,20,0.119,21,0.01,22,0.01,23,0.903,44,1.458,45,1.458,77,1.167,81,1.288,126,3.253,129,0.616,131,0.65,135,0.819,136,0.819,140,0.816,142,0.736,144,0.309,153,2.871,154,1.447,156,0.649,157,3.629,166,1.226,167,0.24,168,0.535,169,1.014,170,0.713,171,0.713,172,0.713,173,0.713,177,0.922,178,1.27,179,0.713,180,1.929,181,1.755,182,0.649,183,1.098,184,1.063,186,1.063,188,3.429,190,3.429,193,1.475,195,3.532,198,1.186,202,1.92,203,3.429,206,3.429,207,1.649,208,2.869,213,1.926,214,1.775,216,1.775,217,1.649,218,1.447,219,1.775,220,1.926,223,1.926,227,1.926,228,1.926,229,3.151,235,3.8,236,1.775,237,0.784,238,0.903,239,2.576,240,1.649,241,1.775,242,1.363,243,1.926,244,1.288,245,1.926,246,1.649,261,0.713,262,1.063,263,1.063,264,0.713,265,1.408,266,0.713,267,0.713,268,0.59,269,0.713,270,0.59,271,0.713,272,0.535,273,1.156,274,1.063,275,0.535,276,1.27,277,0.535,278,0.713,279,0.535,280,0.713,281,0.59,282,0.713,283,0.535,284,0.681,285,1.063,286,0.535,287,0.713,288,0.535,289,0.713,290,0.562,291,0.619,292,0.713,293,0.535,294,0.713,295,0.535,296,0.59,297,0.535,298,0.713,299,0.59,300,0.713,301,1.056,302,0.535,303,1.506,304,0.535,305,0.535,306,0.713,307,0.535,308,0.713,309,0.535,310,0.681,311,0.649,312,0.713,313,0.713,329,2.427,346,1.635,347,1.488,375,0.562,382,1.306,501,0.994,516,3.16,517,3.16,529,3.766,562,2.644,565,2.936,577,1.649,578,1.363,630,1.363,638,0.861,639,1.288,757,0.994,759,1.098,779,2.46,780,3.766,781,3.151,782,2.369,783,3.409,789,1.926,1085,1.77,1115,2.369,1315,2.369,1502,3.766,1503,4.174,1510,4.174,1513,2.115,1519,3.151,1524,2.369,1526,2.115,1527,3.151,1528,3.151,1660,2.369,1661,3.529,1662,3.151,1663,4.102,1664,3.529,1665,2.754,1666,2.754,1667,2.754,1668,3.529,1669,2.754,1670,2.754,1671,2.754,1672,2.754,1673,2.754,1674,2.754,1675,2.754,1676,2.754,1677,2.754,1678,2.754,1679,2.754,1680,2.754,1681,2.754,1682,2.754,1683,4.102,1684,4.102]],["title/injectables/StatusService.html",[125,1.159,783,2.074]],["body/injectables/StatusService.html",[0,0.04,3,0.138,4,0.138,5,0.119,7,0.22,8,0.527,11,0.721,12,0.57,13,0.019,14,1.173,15,0.558,20,0.158,21,0.012,22,0.012,44,1.128,45,1.505,125,1.568,127,1.915,129,0.753,131,0.795,132,2.349,133,4.009,135,1.167,136,1.146,140,1.03,141,3.866,142,0.721,143,1.613,144,0.409,145,1.613,146,1.804,147,2.039,148,1.915,149,1.804,151,2.045,183,2,198,0.744,202,1.557,321,2.182,323,2.039,327,2.549,329,1.804,382,1.571,537,2.549,572,4.011,638,1.568,727,2.22,730,1.453,779,2.689,783,2.807,1085,2.07,1150,2.549,1267,4.107,1269,2.549,1453,4.405,1457,3.853,1467,3.853,1468,4.011,1469,4.976,1471,4.405,1472,3.853,1476,2.549,1477,3.508,1478,3.508,1480,2.799,1482,2.799,1486,2.799,1488,2.799,1490,2.799,1493,2.799,1494,2.799,1495,2.799,1496,2.799,1497,2.799,1498,2.799,1661,4.314,1662,3.853,1664,4.314,1668,4.314,1685,3.135,1686,5.015,1687,6.178,1688,5.015,1689,3.644,1690,5.015,1691,3.644,1692,3.644,1693,3.644,1694,5.015,1695,3.644,1696,3.644,1697,3.644,1698,3.644,1699,3.644,1700,3.644,1701,3.644,1702,3.644,1703,3.644,1704,3.135,1705,3.644,1706,3.644,1707,3.644]],["title/interceptors/TokenInterceptor.html",[441,2.219,952,2.847]],["body/interceptors/TokenInterceptor.html",[0,0.039,3,0.134,4,0.134,5,0.115,7,0.213,8,0.515,11,0.592,12,0.546,13,0.019,14,0.965,15,0.535,17,1.746,20,0.153,21,0.012,22,0.012,44,1.267,45,1.267,109,1.687,121,2.496,125,1.533,129,0.736,131,0.559,135,0.942,136,0.942,140,0.847,141,3.364,142,0.715,143,1.562,144,0.396,145,1.562,150,1.562,151,1.977,177,0.793,202,1.332,320,2.71,321,2.112,322,3.035,323,1.974,345,2.467,346,1.717,347,1.603,375,0.72,378,3.035,382,1.674,399,4.33,410,2.112,417,5.508,441,2.937,541,3.161,602,3.035,868,3.767,880,2.467,953,3.035,955,4.849,957,3.035,958,5.241,959,4.849,960,5.241,962,5.508,963,3.035,964,4.219,974,3.035,979,3.035,1237,4.219,1477,3.943,1478,3.43,1708,3.035,1709,5.637,1710,5.637,1711,5.637,1712,6.092,1713,6.403,1714,3.528,1715,3.528,1716,3.528,1717,4.904,1718,3.528,1719,3.528,1720,4.904,1721,3.528,1722,3.528,1723,5.637,1724,4.904,1725,3.528,1726,4.904,1727,4.904,1728,4.904,1729,4.904,1730,4.904,1731,3.767,1732,6.092,1733,3.528,1734,6.092,1735,4.904,1736,4.904,1737,3.528,1738,3.528,1739,3.528,1740,5.637,1741,3.528,1742,3.528,1743,3.528,1744,3.528,1745,3.528,1746,6.092,1747,3.528,1748,3.528,1749,3.528,1750,3.528,1751,3.528,1752,3.528]],["title/components/UpdateRoleComponent.html",[167,0.181,302,0.721]],["body/components/UpdateRoleComponent.html",[0,0.037,3,0.125,4,0.125,5,0.107,7,0.2,8,0.492,11,0.682,12,0.466,13,0.019,14,0.742,15,0.511,20,0.143,21,0.011,22,0.011,23,1.083,59,0.897,81,1.545,129,0.703,131,0.742,135,0.552,136,0.552,140,0.703,142,0.717,144,0.371,156,0.779,166,0.611,167,0.266,168,0.642,169,1.158,170,0.856,171,0.856,172,0.856,173,0.856,177,1.053,178,1.41,179,0.856,180,1.966,181,1.789,182,0.779,184,1.214,186,1.214,193,1.607,198,1.111,202,1.272,237,0.94,238,1.083,261,0.856,262,1.214,263,1.214,264,0.856,265,1.534,266,0.856,267,0.856,268,0.708,269,0.856,270,0.708,271,0.856,272,0.642,273,1.283,274,1.214,275,0.642,276,1.41,277,0.642,278,0.856,279,0.642,280,0.856,281,0.708,282,0.856,283,0.642,284,0.817,285,1.214,286,0.642,287,0.856,288,0.642,289,0.856,290,0.675,291,0.743,292,0.856,293,0.642,294,0.856,295,0.642,296,0.708,297,0.642,298,0.856,299,0.708,300,0.856,301,0.642,302,1.151,303,1.79,304,0.642,305,0.642,306,0.856,307,0.642,308,0.856,309,0.642,310,0.817,311,0.779,312,0.856,313,0.856,346,1.729,347,1.574,375,0.675,382,1.405,460,1.137,501,1.965,611,2.724,638,1.464,639,1.545,654,2.803,663,2.285,676,1.388,685,1.388,689,1.463,690,1.388,707,1.318,745,2.539,746,4.681,747,4.03,748,2.693,751,3.507,752,2.843,754,2.843,755,2.843,756,2.311,757,1.193,758,2.13,759,1.318,762,1.636,764,4.681,766,1.736,767,4.03,772,2.13,773,3.598,774,2.461,775,1.463,931,5.127,1085,1.965,1138,2.311,1458,4.548,1525,2.311,1537,3.276,1753,5.742,1754,2.539,1755,4.548,1756,4.684,1757,3.305,1758,3.019,1759,2.13,1760,2.539,1761,3.305,1762,3.305,1763,3.305,1764,2.843,1765,2.843,1766,2.539]],["title/components/UpdateStatusComponent.html",[167,0.181,304,0.721]],["body/components/UpdateStatusComponent.html",[0,0.037,3,0.125,4,0.125,5,0.107,7,0.2,8,0.492,11,0.682,12,0.466,13,0.019,14,0.742,15,0.511,20,0.143,21,0.011,22,0.011,23,1.083,59,0.897,81,1.545,129,0.703,131,0.742,135,0.552,136,0.552,140,0.703,142,0.717,144,0.371,156,0.779,166,0.611,167,0.266,168,0.642,169,1.158,170,0.856,171,0.856,172,0.856,173,0.856,177,1.053,178,1.41,179,0.856,180,1.966,181,1.789,182,0.779,184,1.214,186,1.214,193,1.607,198,1.111,202,1.272,237,0.94,238,1.083,261,0.856,262,1.214,263,1.214,264,0.856,265,1.534,266,0.856,267,0.856,268,0.708,269,0.856,270,0.708,271,0.856,272,0.642,273,1.283,274,1.214,275,0.642,276,1.41,277,0.642,278,0.856,279,0.642,280,0.856,281,0.708,282,0.856,283,0.642,284,0.817,285,1.214,286,0.642,287,0.856,288,0.642,289,0.856,290,0.675,291,0.743,292,0.856,293,0.642,294,0.856,295,0.642,296,0.708,297,0.642,298,0.856,299,0.708,300,0.856,301,0.642,302,0.642,303,1.79,304,1.151,305,0.642,306,0.856,307,0.642,308,0.856,309,0.642,310,0.817,311,0.779,312,0.856,313,0.856,346,1.729,347,1.574,375,0.675,382,1.405,460,1.137,501,1.965,638,1.464,639,1.545,654,2.803,663,2.285,676,1.388,685,1.388,689,1.463,690,1.388,707,1.318,748,2.693,757,1.193,759,1.318,762,1.636,773,3.598,774,2.461,775,1.463,778,2.539,779,2.767,780,4.18,781,3.598,783,3.735,788,2.843,789,2.311,791,4.681,793,4.03,934,5.127,1085,1.965,1138,2.311,1525,2.311,1537,3.276,1662,4.548,1754,2.539,1755,4.548,1758,3.019,1759,2.13,1760,2.539,1764,2.843,1765,2.843,1766,2.539,1767,5.742,1768,4.684,1769,3.305,1770,3.305,1771,3.305,1772,3.305,1773,3.305,1774,3.305,1775,3.305]],["title/classes/User.html",[0,0.041,166,0.686]],["body/classes/User.html",[0,0.054,2,2.05,3,0.185,4,0.185,5,0.159,7,0.295,8,0.639,11,0.695,12,0.594,13,0.018,14,1.23,15,0.598,20,0.212,21,0.014,22,0.014,131,1.048,142,0.639,159,2.388,166,1.124,499,2.638,533,3.274,611,2.792,651,5.69,779,2.7,815,4.263,817,4.626,1085,2.388,1776,4.2,1777,4.882,1778,4.882,1779,4.882,1780,4.882,1781,4.882,1782,4.882,1783,4.882,1784,4.882,1785,4.882,1786,4.882,1787,4.882]],["title/injectables/UserService.html",[125,1.159,653,1.641]],["body/injectables/UserService.html",[0,0.032,3,0.11,4,0.11,5,0.181,7,0.175,8,0.448,10,1.524,11,0.744,12,0.573,13,0.019,14,1.224,15,0.566,20,0.126,21,0.01,22,0.01,44,0.959,45,1.536,109,0.998,125,1.333,127,1.524,129,0.64,131,0.676,133,3.842,135,1.192,136,1.182,140,1.063,141,3.934,142,0.692,143,1.284,144,0.325,145,1.284,146,1.436,147,1.624,148,1.524,149,1.436,151,2.11,159,1.047,166,1.33,183,1.701,198,0.592,202,1.513,321,1.737,323,1.624,327,2.029,329,1.436,347,1.464,375,0.592,382,1.511,499,2.016,537,2.029,572,3.536,574,2.496,638,1.333,652,1.737,653,1.888,662,4.794,727,1.888,730,1.701,779,2.355,1085,2.426,1150,2.029,1207,3.668,1267,3.842,1269,2.029,1302,3.668,1378,4.349,1403,3.668,1453,3.883,1457,3.275,1467,3.275,1468,3.536,1469,4.561,1471,3.883,1472,3.275,1476,2.029,1477,2.982,1478,2.982,1480,2.228,1482,2.228,1486,2.228,1488,2.228,1490,2.228,1493,3.275,1494,2.228,1495,2.228,1496,2.228,1497,2.228,1498,2.228,1704,2.496,1788,2.496,1789,4.264,1790,4.264,1791,4.264,1792,3.668,1793,5.573,1794,4.264,1795,4.264,1796,3.275,1797,2.901,1798,4.264,1799,2.901,1800,4.264,1801,2.901,1802,4.264,1803,2.901,1804,3.668,1805,2.901,1806,2.901,1807,4.264,1808,2.901,1809,4.264,1810,2.901,1811,2.901,1812,2.901,1813,4.264,1814,5.055,1815,2.901,1816,4.264,1817,2.901,1818,4.264,1819,2.901,1820,3.668,1821,5.055,1822,2.901,1823,2.901,1824,2.901,1825,2.901,1826,2.901,1827,2.901,1828,2.901,1829,2.901,1830,2.901,1831,2.901,1832,2.901,1833,2.901,1834,2.901,1835,2.901,1836,2.901,1837,2.901,1838,2.901,1839,2.901]],["title/components/UserUpdateComponent.html",[167,0.181,307,0.721]],["body/components/UserUpdateComponent.html",[0,0.029,1,2.815,3,0.098,4,0.098,5,0.084,7,0.156,8,0.411,11,0.668,12,0.522,13,0.019,14,0.619,15,0.555,20,0.112,21,0.009,22,0.009,23,0.846,44,1.388,45,1.388,51,1.142,59,1.061,61,1.142,63,1.545,103,0.979,129,0.587,131,0.619,135,0.431,136,0.431,140,0.708,142,0.727,144,0.289,151,1.165,153,2.815,154,1.356,156,0.608,157,2.943,159,1.702,166,1.367,167,0.231,168,0.502,169,0.966,170,0.669,171,0.669,172,0.669,173,0.669,177,0.878,178,1.222,179,0.669,180,1.914,181,1.742,182,0.608,183,1.029,184,1.012,186,1.012,193,1.428,198,0.963,202,1.928,217,1.545,218,1.356,237,0.734,238,0.846,261,0.669,262,1.012,263,1.012,264,0.669,265,1.362,266,0.669,267,0.669,268,0.553,269,0.669,270,0.553,271,0.669,272,0.502,273,1.112,274,1.012,275,0.502,276,1.222,277,0.502,278,0.669,279,0.502,280,0.669,281,0.553,282,0.669,283,0.502,284,0.638,285,1.012,286,0.502,287,0.669,288,0.502,289,0.669,290,0.527,291,0.58,292,0.669,293,0.502,294,0.669,295,0.502,296,0.553,297,0.502,298,0.669,299,0.553,300,0.669,301,0.502,302,0.502,303,1.572,304,0.502,305,0.502,306,0.669,307,1.022,308,0.669,309,0.502,310,0.638,311,0.608,312,0.669,313,0.669,329,2.334,346,1.6,347,1.456,354,1.142,375,0.527,382,1.337,460,0.888,501,1.702,516,3.039,517,3.039,528,2.053,533,2.334,562,2.518,565,2.824,577,1.545,578,1.277,581,1.805,595,3.39,611,2.255,629,1.356,638,1.222,639,1.207,653,2.734,654,2.593,663,1.98,676,1.084,682,1.356,685,1.084,689,1.142,690,2.496,707,1.029,748,2.334,751,3.244,756,1.805,757,0.932,758,1.663,759,1.029,762,1.277,766,2.763,774,2.053,775,1.142,779,0.979,800,4.524,802,4.524,813,2.22,815,1.663,817,3.298,820,2.22,821,2.22,822,2.22,823,1.982,824,2.22,825,3.361,827,2.22,828,1.663,829,3.361,830,3.001,831,3.361,853,1.982,939,5.455,943,3.298,1085,1.702,1138,1.805,1537,2.733,1754,1.982,1755,4.04,1758,2.518,1759,1.663,1760,1.982,1766,1.982,1796,4.04,1840,6.109,1841,2.22,1842,4.715,1843,3.907,1844,3.907,1845,2.581,1846,2.581,1847,2.581,1848,2.581,1849,2.581,1850,2.581,1851,2.581,1852,2.581,1853,2.581,1854,2.581,1855,2.581,1856,2.581,1857,2.581,1858,2.581,1859,2.581,1860,2.581,1861,2.581,1862,2.581,1863,2.581,1864,2.581,1865,2.581]],["title/components/UsersComponent.html",[167,0.181,305,0.721]],["body/components/UsersComponent.html",[0,0.031,3,0.157,4,0.106,5,0.091,7,0.169,8,0.436,11,0.712,12,0.499,13,0.019,14,1.114,15,0.533,20,0.121,21,0.01,22,0.01,23,0.917,26,1.956,36,2.902,44,0.933,45,0.933,51,1.238,59,1.127,62,1.622,77,1.181,81,1.308,103,1.061,129,0.623,131,0.658,135,0.914,136,0.914,140,0.878,142,0.667,144,0.314,156,0.659,159,1.976,166,1.013,167,0.242,168,0.544,169,1.026,170,0.725,171,0.725,172,0.725,173,0.725,177,0.933,178,1.282,179,0.725,180,1.932,181,1.758,182,0.659,184,1.075,186,1.075,188,3.461,190,3.461,193,1.486,198,1.194,202,1.486,203,3.461,206,3.461,207,1.675,208,2.902,213,1.956,214,1.802,216,1.802,223,1.956,227,1.956,228,1.956,230,3.57,235,3.829,236,1.802,237,1.181,238,1.36,239,2.6,240,2.485,241,1.802,242,1.384,243,1.956,244,1.308,246,1.675,247,1.802,248,1.469,249,2.406,250,1.469,251,2.406,252,1.565,261,0.725,262,1.075,263,1.075,264,0.725,265,1.418,266,0.725,267,0.725,268,0.599,269,0.725,270,0.599,271,0.725,272,0.544,273,1.167,274,1.075,275,0.544,276,1.282,277,0.544,278,0.725,279,0.544,280,0.725,281,0.599,282,0.725,283,0.544,284,0.691,285,1.075,286,0.544,287,0.725,288,0.544,289,0.725,290,0.571,291,0.629,292,0.725,293,0.544,294,0.725,295,0.544,296,0.599,297,0.544,298,0.725,299,0.599,300,0.725,301,0.544,302,0.544,303,1.514,304,0.544,305,1.064,306,0.725,307,0.544,308,0.725,309,0.544,310,0.691,311,0.659,312,0.725,313,0.725,346,1.643,347,1.495,354,1.238,367,1.675,375,0.571,382,1.112,501,1.01,533,2.71,590,1.469,609,1.675,610,2.148,611,2.076,622,1.956,623,2.148,630,2.054,638,0.874,639,1.308,653,2.712,682,1.469,714,2.148,757,1.01,759,1.115,772,2.675,779,2.076,803,2.406,815,3.528,828,1.802,943,3.829,1065,2.148,1085,1.976,1243,2.406,1244,3.188,1317,2.148,1502,3.801,1503,4.205,1510,4.205,1513,2.148,1519,4.205,1521,2.406,1522,2.406,1525,1.956,1526,2.148,1527,3.188,1528,3.188,1792,3.57,1796,3.188,1804,3.57,1820,3.57,1866,2.406,1867,4.948,1868,4.15,1869,4.948,1870,4.15,1871,4.15,1872,4.15,1873,2.797,1874,2.797,1875,2.797,1876,2.797,1877,2.797,1878,2.797,1879,2.797,1880,2.797,1881,2.797,1882,2.797,1883,2.797,1884,2.797,1885,2.797,1886,2.797,1887,5.474,1888,4.15,1889,4.15,1890,2.797,1891,2.797,1892,2.797,1893,2.797,1894,2.797,1895,4.15,1896,4.15,1897,4.15,1898,4.15,1899,4.15,1900,4.15]],["title/classes/Util.html",[0,0.041,1901,2.847]],["body/classes/Util.html",[0,0.062,2,2.354,3,0.212,4,0.212,5,0.182,7,0.339,11,0.589,12,0.441,13,0.018,14,1.172,15,0.441,20,0.243,21,0.016,22,0.016,59,1.522,108,3.691,129,0.992,135,0.936,136,0.936,140,0.842,151,1.672,626,5.075,848,3.613,1255,4.823,1901,5.075,1902,4.823,1903,6.606,1904,6.606,1905,5.606]],["title/components/ValidateCodeComponent.html",[167,0.181,309,0.721]],["body/components/ValidateCodeComponent.html",[0,0.038,3,0.131,4,0.131,5,0.112,7,0.209,8,0.508,11,0.586,12,0.38,13,0.018,15,0.475,20,0.15,21,0.011,22,0.011,111,1.71,121,1.53,129,0.726,131,0.548,135,0.577,136,0.577,140,0.726,142,0.635,144,0.387,150,1.53,151,1.031,156,0.815,159,2.013,166,0.639,167,0.273,168,0.672,169,1.195,170,0.895,171,0.895,172,0.895,173,0.895,177,1.087,178,1.444,179,0.895,180,1.974,181,1.797,182,0.815,184,1.252,186,1.252,193,1.639,198,0.987,237,1.586,238,1.585,239,1.816,244,1.616,248,2.54,250,1.816,252,1.934,255,2.069,260,2.227,261,0.895,262,1.252,263,1.252,264,0.895,265,1.564,266,0.895,267,0.895,268,0.741,269,0.895,270,0.741,271,0.895,272,0.672,273,1.314,274,1.252,275,0.672,276,1.444,277,0.672,278,0.895,279,0.672,280,0.895,281,0.741,282,0.895,283,0.672,284,0.854,285,1.252,286,0.672,287,0.895,288,0.672,289,0.895,290,0.706,291,0.777,292,0.895,293,0.672,294,0.895,295,0.672,296,0.741,297,0.672,298,0.895,299,0.741,300,0.895,301,0.672,302,0.672,303,1.195,304,0.672,305,0.672,306,0.895,307,0.672,308,0.895,309,1.174,310,1.755,311,1.652,312,0.895,313,0.895,346,1.751,347,1.553,375,0.706,382,1.087,460,1.189,490,4.881,499,1.378,652,2.069,654,2.838,663,2.341,676,1.451,689,1.53,690,2.03,727,1.53,728,2.069,730,1.378,731,2.705,732,3.556,734,1.816,735,1.816,757,1.248,774,2.54,775,1.53,1053,1.816,1055,3.339,1056,1.816,1061,2.069,1068,2.069,1079,2.227,1148,2.973,1170,2.227,1171,2.227,1172,2.227,1173,2.417,1174,2.417,1175,2.227,1176,2.227,1177,2.655,1178,2.227,1179,2.227,1180,2.227,1181,2.227,1182,2.417,1224,2.973,1225,2.973,1226,2.973,1227,2.973,1228,2.973,1229,2.973,1259,2.973,1906,5.466,1907,2.973,1908,5.575,1909,4.834,1910,5.575,1911,6.038,1912,4.834,1913,3.456,1914,3.456,1915,3.456,1916,3.456,1917,4.834]],["title/coverage.html",[1918,4.365]],["body/coverage.html",[0,0.077,1,1.292,5,0.095,6,2.511,12,0.23,13,0.019,21,0.01,22,0.01,23,0.957,24,3.548,110,2.041,112,1.748,121,3.476,122,2.242,125,2.01,126,1.748,128,2.511,146,2.12,153,1.292,154,1.534,155,2.511,166,0.54,167,0.364,168,0.567,174,2.511,175,2.242,176,2.511,195,1.633,202,0.792,219,1.881,236,1.881,268,0.626,270,0.626,272,0.567,275,0.567,277,0.567,279,0.567,281,0.626,283,0.567,286,0.567,288,0.567,290,0.596,291,0.963,293,0.567,295,0.567,297,0.567,299,0.626,301,0.567,302,0.567,304,0.567,305,0.567,307,0.567,309,0.567,314,2.511,338,2.511,346,0.756,379,2.242,380,2.242,440,1.748,441,1.748,453,2.041,467,2.041,479,3.29,480,3.548,484,2.242,488,2.242,490,2.242,492,1.881,494,1.633,510,2.041,511,2.511,514,2.511,548,2.041,611,1.107,640,2.511,641,2.041,642,2.511,653,1.292,683,2.242,684,2.242,743,2.511,744,2.242,745,3.29,751,1.534,760,1.881,761,1.881,776,2.511,777,2.242,778,3.29,779,1.107,783,1.633,794,2.511,795,2.242,796,2.511,833,2.511,862,2.242,914,2.041,922,2.242,931,2.242,934,2.242,939,2.242,949,1.881,950,2.511,952,3.29,954,3.897,971,2.242,972,2.242,973,2.242,975,2.242,977,2.242,1028,2.511,1081,2.511,1082,3.29,1116,2.242,1183,2.511,1190,2.511,1212,2.242,1213,2.242,1214,2.242,1215,2.242,1239,4.293,1258,2.511,1262,2.041,1263,2.041,1265,2.511,1267,1.748,1268,2.511,1278,2.511,1279,2.511,1290,2.511,1341,2.242,1342,2.242,1399,2.511,1420,2.242,1421,2.242,1449,2.511,1452,2.511,1499,2.511,1529,2.242,1531,2.511,1545,6.587,1588,2.511,1655,2.511,1660,2.511,1685,2.511,1708,2.511,1731,2.242,1753,2.511,1758,1.881,1759,1.881,1767,2.511,1776,2.511,1788,2.511,1840,2.511,1841,2.511,1866,2.511,1901,2.242,1902,2.511,1906,2.511,1907,2.511,1918,2.511,1919,2.919,1920,2.919,1921,2.919,1922,7.657,1923,2.919,1924,2.919,1925,2.919,1926,5.073,1927,2.919,1928,4.283,1929,4.283,1930,6.729,1931,2.919,1932,4.283,1933,5.073,1934,4.283,1935,5.589,1936,4.283,1937,5.952,1938,2.919,1939,4.283,1940,2.919,1941,2.919,1942,2.919,1943,6.463,1944,2.511,1945,2.511,1946,2.511,1947,2.511,1948,2.511,1949,3.684,1950,2.511,1951,2.511,1952,2.919]],["title/dependencies.html",[432,2.876,1953,2.656]],["body/dependencies.html",[5,0.171,13,0.019,21,0.015,22,0.015,111,2.602,144,0.589,145,2.328,375,1.073,432,3.389,450,5.469,451,4.884,460,1.808,470,3.389,471,3.807,472,3.677,473,2.942,578,2.602,680,4.447,681,3.389,864,4.039,1954,5.257,1955,5.257,1956,6.488,1957,5.257,1958,6.358,1959,5.257,1960,5.257,1961,5.257,1962,5.257,1963,6.358,1964,5.257,1965,5.257,1966,5.257,1967,5.257,1968,5.257,1969,5.257,1970,5.257,1971,5.257,1972,5.257,1973,5.257,1974,5.257,1975,5.257,1976,5.257,1977,5.257,1978,5.257]],["title/index.html",[7,0.187,1979,3.088,1980,3.088]],["body/index.html",[4,0.192,11,0.534,13,0.015,21,0.015,22,0.015,156,1.198,167,0.33,181,1.468,202,1.38,311,1.198,443,3.554,470,4.34,723,4.371,1120,5.392,1280,4.371,1956,4.371,1981,6.227,1982,5.081,1983,6.733,1984,4.371,1985,5.081,1986,6.227,1987,7.202,1988,7.423,1989,5.081,1990,5.081,1991,5.081,1992,5.081,1993,5.081,1994,5.081,1995,5.081,1996,5.081,1997,6.733,1998,6.733,1999,5.081,2000,7.202,2001,5.081,2002,5.081,2003,5.081,2004,5.081,2005,5.081,2006,5.081,2007,4.371,2008,6.227,2009,6.227,2010,7.019,2011,5.081,2012,6.227,2013,6.227,2014,5.081,2015,5.081,2016,5.081,2017,5.081,2018,6.733,2019,5.081,2020,5.081,2021,3.903,2022,5.081,2023,5.081]],["title/modules.html",[431,2.666]],["body/modules.html",[13,0.016,21,0.016,22,0.016,430,4.072,431,3.059,438,3.752,439,3.486,451,5.188,494,3.258,911,3.752,1641,6.137,2024,6.754,2025,6.754,2026,7.471,2027,7.135]],["title/overview.html",[2021,3.898]],["body/overview.html",[2,1.776,13,0.019,21,0.013,22,0.013,127,2.222,168,1.202,169,1.045,268,1.527,270,1.325,272,1.202,275,1.202,277,1.202,279,1.202,281,1.325,283,1.202,286,1.202,288,1.202,290,1.262,293,1.202,295,1.202,296,0.906,297,1.202,299,1.325,301,1.202,302,1.202,304,1.202,305,1.202,307,1.202,309,1.202,430,5.412,431,2.222,432,3.572,433,3.638,434,3.638,435,3.638,436,3.638,437,3.638,438,3.985,439,3.929,440,3.702,441,3.929,442,4.258,443,2.958,481,2.725,494,4.401,880,3.877,907,3.638,908,3.638,910,3.638,911,3.985,1239,3.248,1262,2.958,1529,3.248,2021,3.248,2028,4.229,2029,5.542,2030,4.229]],["title/properties.html",[8,0.469,1953,2.656]],["body/properties.html",[8,0.636,13,0.017,21,0.016,22,0.016,1984,5.209,2031,6.055]],["title/routes.html",[481,3.27]],["body/routes.html",[13,0.016,21,0.016,22,0.016,481,3.927]],["title/miscellaneous/variables.html",[2032,2.656,2033,3.838]],["body/miscellaneous/variables.html",[3,0.168,7,0.141,12,0.498,13,0.019,14,1.024,17,1.793,21,0.009,22,0.009,24,1.635,44,1.687,45,1.687,50,1.506,59,1.356,62,1.187,65,2.195,70,1.635,74,2.858,77,1.626,86,2.533,91,1.795,93,1.635,96,1.399,103,0.886,109,0.804,110,2.533,111,1.157,146,2.472,151,1.993,159,0.844,168,0.454,237,0.665,272,0.454,275,0.454,277,0.454,279,0.454,283,0.454,286,0.454,288,0.454,293,0.454,295,0.454,297,0.454,301,0.454,302,0.454,304,0.454,305,0.454,307,0.454,309,0.454,342,4.953,364,1.795,367,3.236,379,2.782,380,2.782,413,2.01,453,2.533,478,2.211,479,1.795,480,3.779,494,2.027,495,2.01,496,2.01,497,2.01,499,1.768,588,1.308,590,1.903,600,2.01,608,1.795,609,1.399,615,3.54,629,1.228,638,2.141,670,5.084,683,2.782,684,2.782,687,2.782,707,0.932,730,2.842,733,4.17,760,2.334,761,2.334,862,2.782,870,2.01,872,3.814,896,3.115,901,5.56,902,5.313,903,5.313,914,2.533,922,1.795,954,1.795,971,2.782,972,2.782,973,2.782,975,2.782,976,1.795,977,2.782,978,3.814,1006,2.01,1053,3.133,1116,2.782,1120,4.58,1149,4.391,1161,2.01,1212,2.782,1213,2.782,1214,2.782,1215,2.782,1249,4.58,1252,2.01,1253,2.01,1294,2.01,1341,2.782,1342,2.782,1395,2.01,1410,4.648,1411,2.01,1420,2.782,1421,2.782,1434,2.01,1441,2.01,1442,4.648,1476,2.533,1731,2.782,1758,2.334,1759,2.334,1943,2.01,1944,3.115,1945,3.115,1946,3.115,1947,2.01,1948,2.01,1949,2.01,1950,3.115,1951,3.115,2007,3.115,2032,2.01,2033,2.01,2034,7.326,2035,3.622,2036,3.622,2037,2.337,2038,3.622,2039,2.337,2040,2.337,2041,2.337,2042,6.161,2043,6.161,2044,6.464,2045,4.994,2046,2.337,2047,2.337,2048,3.622,2049,3.622,2050,2.337,2051,2.337,2052,2.337,2053,2.337,2054,2.337,2055,2.337,2056,2.337,2057,2.337,2058,2.337,2059,2.337,2060,2.337,2061,2.337,2062,2.337,2063,2.337,2064,2.337,2065,2.337,2066,2.337,2067,2.337,2068,2.337,2069,2.337,2070,2.337,2071,3.622,2072,2.337,2073,3.622,2074,2.337,2075,2.337,2076,2.337,2077,2.337,2078,2.337,2079,2.337,2080,2.337,2081,2.337,2082,2.337,2083,2.337,2084,2.337,2085,2.337,2086,2.337,2087,2.337,2088,2.337,2089,2.337,2090,2.337,2091,2.337]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":121,"title":{},"body":{"classes/ActionConstants.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2031,"title":{},"body":{"properties.html":{}}}],["0.10.2",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["0.20.0",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1939,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1938,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":726,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{}}}],["1",{"_index":880,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{},"interceptors/TokenInterceptor.html":{},"overview.html":{}}}],["1/11",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1650,"title":{},"body":{"components/SidenavComponent.html":{}}}],["10.2.0",{"_index":1956,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.7",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":238,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["10px",{"_index":728,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["11",{"_index":2030,"title":{},"body":{"overview.html":{}}}],["11.4.10",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["13.1.1",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":883,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["1500",{"_index":1149,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["15000",{"_index":1286,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["15px",{"_index":1064,"title":{},"body":{"components/FooterComponent.html":{}}}],["16px",{"_index":243,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["1px",{"_index":256,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["2",{"_index":976,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":978,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":254,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["219",{"_index":1059,"title":{},"body":{"components/FooterComponent.html":{}}}],["22",{"_index":2028,"title":{},"body":{"overview.html":{}}}],["235px",{"_index":1066,"title":{},"body":{"components/FooterComponent.html":{}}}],["3.1.2",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1289,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["3000",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300px",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["330px",{"_index":1178,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["3f51b5",{"_index":903,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":334,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["400px",{"_index":249,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/UsersComponent.html":{}}}],["401",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["406",{"_index":983,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["5",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["5.0.2",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1607,"title":{},"body":{"components/SidenavComponent.html":{}}}],["500",{"_index":982,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["5000",{"_index":1165,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["500px",{"_index":1381,"title":{},"body":{"components/ProfileComponent.html":{}}}],["50px",{"_index":260,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["6.6.0",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":879,"title":{},"body":{"components/DashboardComponent.html":{}}}],["600px",{"_index":1383,"title":{},"body":{"components/ProfileComponent.html":{},"components/SidenavComponent.html":{}}}],["624c90f9b9b30b3181e3b94b",{"_index":88,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["64",{"_index":1058,"title":{},"body":{"components/FooterComponent.html":{}}}],["7",{"_index":2029,"title":{},"body":{"overview.html":{}}}],["76",{"_index":1653,"title":{},"body":{"components/SidenavComponent.html":{}}}],["8.0.0",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1182,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["800px",{"_index":1398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["82",{"_index":1654,"title":{},"body":{"components/SidenavComponent.html":{}}}],["8px",{"_index":246,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["9",{"_index":122,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"coverage.html":{}}}],["90",{"_index":1080,"title":{},"body":{"components/FooterComponent.html":{},"components/ProfileComponent.html":{}}}],["900000",{"_index":882,"title":{},"body":{"components/DashboardComponent.html":{}}}],["9z",{"_index":117,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["_",{"_index":118,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["_id",{"_index":1085,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["_id:string",{"_index":1829,"title":{},"body":{"injectables/UserService.html":{}}}],["_mobilequerylistener",{"_index":1592,"title":{},"body":{"components/SidenavComponent.html":{}}}],["_token",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["abiertas",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":1054,"title":{},"body":{"components/FooterComponent.html":{},"components/SidenavComponent.html":{}}}],["accent",{"_index":1326,"title":{},"body":{"components/ProfileComponent.html":{}}}],["accescode",{"_index":1259,"title":{},"body":{"classes/MailReq.html":{},"components/ValidateCodeComponent.html":{}}}],["acceso",{"_index":96,"title":{},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"guards/RolguardGuard.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserUpdateComponent.html":{}}}],["accion",{"_index":1521,"title":{},"body":{"components/RolesComponent.html":{},"components/UsersComponent.html":{}}}],["account_balance",{"_index":1623,"title":{},"body":{"components/SidenavComponent.html":{}}}],["account_circle",{"_index":1621,"title":{},"body":{"components/SidenavComponent.html":{}}}],["aceptan",{"_index":715,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["act",{"_index":1643,"title":{},"body":{"components/SidenavComponent.html":{}}}],["action",{"_index":1,"title":{"classes/Action.html":{}},"body":{"classes/Action.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/AuthService.html":{},"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["action.description.tostring",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["actionconstants",{"_index":23,"title":{"classes/ActionConstants.html":{}},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["actionconstants.borro_registro",{"_index":1894,"title":{},"body":{"components/UsersComponent.html":{}}}],["actionname",{"_index":139,"title":{},"body":{"injectables/ActionsService.html":{}}}],["actions",{"_index":729,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["actions.service",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["actionsdate",{"_index":1656,"title":{},"body":{"classes/Status.html":{}}}],["actionservice",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{}}}],["actionsservice",{"_index":126,"title":{"injectables/ActionsService.html":{}},"body":{"injectables/ActionsService.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{},"coverage.html":{}}}],["activate",{"_index":1899,"title":{},"body":{"components/UsersComponent.html":{}}}],["activatedroute",{"_index":1755,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["activatedroutesnapshot",{"_index":1535,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["active",{"_index":1869,"title":{},"body":{"components/UsersComponent.html":{}}}],["activedeactivateuser",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["activedeactivateuser(_id",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["activedeactivateuser(data.id",{"_index":1888,"title":{},"body":{"components/UsersComponent.html":{}}}],["actividad",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["activity",{"_index":182,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["activitylog",{"_index":153,"title":{"classes/ActivityLog.html":{}},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["activitylogcomponent",{"_index":168,"title":{"components/ActivityLogComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["activitylogservice",{"_index":195,"title":{"injectables/ActivityLogService.html":{}},"body":{"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{},"coverage.html":{}}}],["activo",{"_index":26,"title":{},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/UsersComponent.html":{}}}],["actual_component",{"_index":313,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["actualizacion",{"_index":1373,"title":{},"body":{"components/ProfileComponent.html":{}}}],["actualizado",{"_index":1442,"title":{},"body":{"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["actualizar",{"_index":853,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"components/UserUpdateComponent.html":{}}}],["actualizarse",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":1527,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["add_a_photo",{"_index":1391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["addmessage",{"_index":1270,"title":{},"body":{"injectables/MessageService.html":{}}}],["addmessage(message",{"_index":1272,"title":{},"body":{"injectables/MessageService.html":{}}}],["address",{"_index":1168,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["administrador",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agarra",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["agregar",{"_index":887,"title":{},"body":{"components/DashboardComponent.html":{}}}],["al",{"_index":707,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"miscellaneous/variables.html":{}}}],["alerta",{"_index":898,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["align",{"_index":731,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["allows",{"_index":1649,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ancho",{"_index":775,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["angular",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":1612,"title":{},"body":{"components/SidenavComponent.html":{}}}],["angular/common",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateStatusComponent.html":{},"modules/DashboardModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":143,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/RoleService.html":{},"modules/SharedModule.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":144,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"modules/DashboardModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1559,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1569,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/core",{"_index":1340,"title":{},"body":{"components/ProfileComponent.html":{}}}],["angular/material/dialog",{"_index":678,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1554,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/grid",{"_index":1571,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1566,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1557,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1580,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":214,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"modules/SharedModule.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/progress",{"_index":1562,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1574,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":1578,"title":{},"body":{"modules/SharedModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/slide",{"_index":1584,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1112,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/sort",{"_index":215,"title":{},"body":{"components/ActivityLogComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":216,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"modules/SharedModule.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["angular/material/tabs",{"_index":1582,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":1564,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":1008,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["any):observable",{"_index":1835,"title":{},"body":{"injectables/UserService.html":{}}}],["aparezca",{"_index":1512,"title":{},"body":{"components/RolesComponent.html":{}}}],["apiurl",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":181,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"index.html":{}}}],["app.component",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":268,"title":{"components/AppComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":1478,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["appmodule",{"_index":430,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":438,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apunto",{"_index":1374,"title":{},"body":{"components/ProfileComponent.html":{}}}],["aqu",{"_index":1048,"title":{},"body":{"components/FooterComponent.html":{}}}],["aqui",{"_index":1128,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RolesComponent.html":{}}}],["archivo",{"_index":662,"title":{},"body":{"components/ChangePhotoComponent.html":{},"injectables/UserService.html":{}}}],["archivo1",{"_index":697,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["archivo1.seterrors",{"_index":702,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["archivo1.seterrors(null",{"_index":701,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["archivo1.value",{"_index":699,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["arial",{"_index":1073,"title":{},"body":{"components/FooterComponent.html":{}}}],["around",{"_index":1063,"title":{},"body":{"components/FooterComponent.html":{}}}],["array.from",{"_index":1605,"title":{},"body":{"components/SidenavComponent.html":{}}}],["artifacts",{"_index":2001,"title":{},"body":{"index.html":{}}}],["auditado",{"_index":1043,"title":{},"body":{"components/FooterComponent.html":{}}}],["auth",{"_index":510,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["auth0/angular",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["authorizacion",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":346,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["auto",{"_index":252,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["autofocus",{"_index":1384,"title":{},"body":{"components/ProfileComponent.html":{}}}],["automatically",{"_index":1993,"title":{},"body":{"index.html":{}}}],["automaticamente",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["autorizados",{"_index":1037,"title":{},"body":{"components/FooterComponent.html":{}}}],["available",{"_index":1641,"title":{},"body":{"components/SidenavComponent.html":{},"modules.html":{}}}],["ayudan",{"_index":53,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["back",{"_index":708,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["background",{"_index":1055,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["bar",{"_index":1113,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/SharedModule.html":{}}}],["base",{"_index":1163,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["bearer",{"_index":1742,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["bienvenido",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bitacora",{"_index":63,"title":{},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserUpdateComponent.html":{}}}],["black",{"_index":258,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["blockuser",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["blockuser(_id",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["bloqueada",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bloqueado",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bloqueo",{"_index":64,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["bloqueo_por_expiración",{"_index":27,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["bloqueo_por_inactividad",{"_index":28,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["bloqueo_por_intentos_fallidos",{"_index":29,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["body",{"_index":1170,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["bold",{"_index":1078,"title":{},"body":{"components/FooterComponent.html":{}}}],["boolean",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{},"guards/RolguardGuard.html":{},"interceptors/TokenInterceptor.html":{}}}],["bootstrap",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":255,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["borro",{"_index":73,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["borro_registro",{"_index":30,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["bottom",{"_index":242,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["browse",{"_index":2026,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":2000,"title":{},"body":{"index.html":{}}}],["buscando",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["buscandola",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["button",{"_index":239,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["c.v",{"_index":1041,"title":{},"body":{"components/FooterComponent.html":{}}}],["cachamos",{"_index":1131,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["cada",{"_index":55,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["caduca",{"_index":101,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["caducado",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cambiamos",{"_index":1883,"title":{},"body":{"components/UsersComponent.html":{}}}],["cambiar",{"_index":711,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{}}}],["cambies",{"_index":897,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cambio",{"_index":76,"title":{},"body":{"classes/ActionConstants.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/ProfileComponent.html":{}}}],["cambio_de_contraseña",{"_index":31,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["camgiar",{"_index":899,"title":{},"body":{"components/DashboardComponent.html":{}}}],["campo",{"_index":1516,"title":{},"body":{"components/RolesComponent.html":{}}}],["campos",{"_index":1349,"title":{},"body":{"components/ProfileComponent.html":{}}}],["canactivate",{"_index":500,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"guards/RolguardGuard.html":{}}}],["canactivate(route",{"_index":1534,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["cancel",{"_index":774,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["cancelar",{"_index":722,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["cancelbuttoncolor",{"_index":1375,"title":{},"body":{"components/ProfileComponent.html":{}}}],["capturado",{"_index":1140,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["capturamos",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{}}}],["caracter",{"_index":1051,"title":{},"body":{"components/FooterComponent.html":{}}}],["card",{"_index":725,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["carga",{"_index":1316,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cargamos",{"_index":1862,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["catcherror",{"_index":321,"title":{},"body":{"injectables/ActivityLogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["catcherror((e",{"_index":332,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["catcherror((error",{"_index":1748,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["catcherror(err",{"_index":980,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(this.handleerror('add",{"_index":1490,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["causando",{"_index":1016,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["causes",{"_index":1642,"title":{},"body":{"components/SidenavComponent.html":{}}}],["center",{"_index":732,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["cerrada",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["cerrado",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["cerro",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":156,"title":{},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"index.html":{}}}],["changeconfirmation",{"_index":1758,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changedetectorref",{"_index":1597,"title":{},"body":{"components/SidenavComponent.html":{}}}],["changedetectorref.detectchanges",{"_index":1617,"title":{},"body":{"components/SidenavComponent.html":{}}}],["changephotocomponent",{"_index":270,"title":{"components/ChangePhotoComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changeprodfilephotoconfirmation",{"_index":683,"title":{},"body":{"components/ChangePhotoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["changestatus",{"_index":1870,"title":{},"body":{"components/UsersComponent.html":{}}}],["changestatus(_id",{"_index":1872,"title":{},"body":{"components/UsersComponent.html":{}}}],["changeyourpassword",{"_index":836,"title":{},"body":{"components/DashboardComponent.html":{}}}],["check",{"_index":723,"title":{},"body":{"components/ChangePhotoComponent.html":{},"index.html":{}}}],["checked",{"_index":1293,"title":{},"body":{"components/ProfileComponent.html":{}}}],["checkinemailtopass",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkinemailtopass(email",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["children",{"_index":942,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["cierra",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["clases",{"_index":1680,"title":{},"body":{"components/StatusComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Action.html":{},"classes/ActionConstants.html":{},"classes/ActivityLog.html":{},"classes/Auth.html":{},"classes/Constants.html":{},"classes/DataMail.html":{},"classes/MailReq.html":{},"classes/Role.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Util.html":{}},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"classes/ActivityLog.html":{},"classes/Auth.html":{},"classes/Constants.html":{},"classes/DataMail.html":{},"classes/MailReq.html":{},"classes/Role.html":{},"classes/Status.html":{},"classes/User.html":{},"classes/Util.html":{},"overview.html":{}}}],["clear",{"_index":713,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["clearmessages",{"_index":1271,"title":{},"body":{"injectables/MessageService.html":{}}}],["cleartimeout(this.useractivity",{"_index":890,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cli",{"_index":1983,"title":{},"body":{"index.html":{}}}],["clic",{"_index":1884,"title":{},"body":{"components/UsersComponent.html":{}}}],["close",{"_index":649,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["closesession",{"_index":862,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":907,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":908,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":910,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_providers",{"_index":909,"title":{},"body":{"modules/DashboardModule.html":{}}}],["code",{"_index":311,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"index.html":{}}}],["code.component",{"_index":491,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["code.component.css",{"_index":1908,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["code.component.html",{"_index":1909,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["code.component.ts",{"_index":1907,"title":{},"body":{"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:13",{"_index":1912,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["code.component.ts:22",{"_index":1913,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["code.component.ts:25",{"_index":1914,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["code/validate",{"_index":490,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["coinciden",{"_index":1395,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":1056,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["column",{"_index":737,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/SidenavComponent.html":{}}}],["comenta",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":2022,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":913,"title":{},"body":{"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["como",{"_index":888,"title":{},"body":{"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ResetPasswordComponent.html":{}}}],["comparamos",{"_index":1544,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["component",{"_index":167,"title":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":266,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["componente",{"_index":1315,"title":{},"body":{"components/ProfileComponent.html":{},"components/StatusComponent.html":{}}}],["componentes",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["components",{"_index":169,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"overview.html":{}}}],["components/auth/forgot",{"_index":483,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/auth/login/login.component",{"_index":486,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/auth/reset",{"_index":487,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/auth/validate",{"_index":489,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/footer/footer.component",{"_index":916,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/not",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/shared/shared.module",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sidenav/sidenav.component",{"_index":917,"title":{},"body":{"modules/DashboardModule.html":{}}}],["comunicarse",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["con",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"interceptors/ErrorInterceptor.html":{},"guards/RolguardGuard.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["condiciones",{"_index":998,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["conexión",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confidencial",{"_index":1052,"title":{},"body":{"components/FooterComponent.html":{}}}],["confirm",{"_index":1393,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmacion",{"_index":1435,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["confirmbuttoncolor",{"_index":902,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmpass",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["confirmpassword",{"_index":1305,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cons",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(e.error.message",{"_index":337,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["console.error(error",{"_index":1150,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["console.log",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"no",{"_index":1126,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["console.log('el",{"_index":1440,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log('esta",{"_index":1427,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log('este",{"_index":1430,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log('has",{"_index":1145,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["console.log('password",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('se",{"_index":873,"title":{},"body":{"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.log('ventana",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(data",{"_index":1764,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["console.log(error",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["const",{"_index":109,"title":{},"body":{"classes/ActionConstants.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/RolguardGuard.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constantes",{"_index":48,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["constants",{"_index":112,"title":{"classes/Constants.html":{}},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["constrain",{"_index":1648,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor",{"_index":131,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["constructor(activitylogservice",{"_index":194,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["constructor(authservice",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(changedetectorref",{"_index":1596,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(fb",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(formbuilder",{"_index":1092,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(httpclient",{"_index":132,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/NotFoundPageComponent.html":{},"guards/RolguardGuard.html":{},"interceptors/TokenInterceptor.html":{},"components/ValidateCodeComponent.html":{}}}],["constructor(roleservice",{"_index":750,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/RolesComponent.html":{}}}],["constructor(route",{"_index":1754,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["constructor(router",{"_index":652,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"guards/RolguardGuard.html":{},"injectables/UserService.html":{},"components/ValidateCodeComponent.html":{}}}],["constructor(statusservice",{"_index":782,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/StatusComponent.html":{}}}],["constructor(userservice",{"_index":803,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UsersComponent.html":{}}}],["consulta",{"_index":1141,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["consultamos",{"_index":1119,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["consulto",{"_index":80,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["consulto_modulo",{"_index":32,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["container",{"_index":240,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["content",{"_index":727,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/SidenavComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ValidateCodeComponent.html":{}}}],["context",{"_index":1950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continua",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["contraseña",{"_index":78,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["contraseñas",{"_index":1394,"title":{},"body":{"components/ProfileComponent.html":{}}}],["control",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["controles",{"_index":695,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["convertimos",{"_index":1134,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["correctamente",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["correo",{"_index":1434,"title":{},"body":{"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":1174,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["coverage",{"_index":1918,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":771,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{}}}],["create",{"_index":273,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["create(activitylog",{"_index":317,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["create(this.activitylog",{"_index":1157,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["createactivitylog",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["createactivitylog(action",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["createrole",{"_index":1454,"title":{},"body":{"injectables/RoleService.html":{}}}],["createrole(role",{"_index":1460,"title":{},"body":{"injectables/RoleService.html":{}}}],["createrolecomponent",{"_index":272,"title":{"components/CreateRoleComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["createstatus",{"_index":1686,"title":{},"body":{"injectables/StatusService.html":{}}}],["createstatus(status",{"_index":1690,"title":{},"body":{"injectables/StatusService.html":{}}}],["createstatuscomponent",{"_index":275,"title":{"components/CreateStatusComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["createusercomponent",{"_index":277,"title":{"components/CreateUserComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["creation",{"_index":1683,"title":{},"body":{"components/StatusComponent.html":{}}}],["criterios",{"_index":994,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["crole",{"_index":802,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["cual",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cualquier",{"_index":1044,"title":{},"body":{"components/FooterComponent.html":{}}}],["cuenta",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["damos",{"_index":1013,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["dashboard",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{}}}],["dashboard'},{'name",{"_index":280,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["dashboard.component",{"_index":925,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["dashboard.component.html",{"_index":835,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":834,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":279,"title":{"components/DashboardComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodule",{"_index":494,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"coverage.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["dashboardroutes",{"_index":914,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardroutingmodule",{"_index":911,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["dashoard",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["data.id",{"_index":1439,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["data.status",{"_index":1886,"title":{},"body":{"components/UsersComponent.html":{}}}],["datamail",{"_index":949,"title":{"classes/DataMail.html":{}},"body":{"classes/DataMail.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["datasource",{"_index":188,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["date",{"_index":157,"title":{},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["datepipe",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["datepipe('en",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["datos",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserUpdateComponent.html":{}}}],["dd",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["de",{"_index":77,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/RolguardGuard.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["deactivate",{"_index":1900,"title":{},"body":{"components/UsersComponent.html":{}}}],["deben",{"_index":889,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debera",{"_index":852,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debouncetime",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["debouncetime(100)).subscribe((event",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["debugger",{"_index":1732,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["declarations",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["decode",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["decorators",{"_index":207,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/DashboardComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["default",{"_index":44,"title":{},"body":{"classes/ActionConstants.html":{},"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{}}}],["definida",{"_index":1546,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["del",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["delay",{"_index":967,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["delayms",{"_index":977,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1510,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["deleterole",{"_index":1455,"title":{},"body":{"injectables/RoleService.html":{},"components/RolesComponent.html":{}}}],["deleterole(_id",{"_index":1462,"title":{},"body":{"injectables/RoleService.html":{},"components/RolesComponent.html":{}}}],["deletestatus",{"_index":1661,"title":{},"body":{"components/StatusComponent.html":{},"injectables/StatusService.html":{}}}],["deletestatus(_id",{"_index":1664,"title":{},"body":{"components/StatusComponent.html":{},"injectables/StatusService.html":{}}}],["deleteuser",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["deleteuser(_id",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["demo",{"_index":235,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["dependencies",{"_index":432,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependiendo",{"_index":1881,"title":{},"body":{"components/UsersComponent.html":{}}}],["derecha",{"_index":740,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["desactivado",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{}}}],["descomentala",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["desconectado",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/Action.html":{}}}],["desktop",{"_index":1645,"title":{},"body":{"components/SidenavComponent.html":{}}}],["despues",{"_index":1122,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["deteción",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["detecta",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dev",{"_index":1990,"title":{},"body":{"index.html":{}}}],["development",{"_index":1985,"title":{},"body":{"index.html":{}}}],["devolver",{"_index":1347,"title":{},"body":{"components/ProfileComponent.html":{}}}],["dialog",{"_index":1294,"title":{},"body":{"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["dialog.classlist.add('dialog",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialogref",{"_index":646,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1385,"title":{},"body":{"components/ProfileComponent.html":{}}}],["didopen",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dipsa",{"_index":1039,"title":{},"body":{"components/FooterComponent.html":{}}}],["directamente",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":736,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/SidenavComponent.html":{}}}],["directive",{"_index":264,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["directives",{"_index":312,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1999,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2004,"title":{},"body":{"index.html":{}}}],["display",{"_index":734,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["displayedcolumns",{"_index":1502,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["displayedcolums",{"_index":189,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["dist",{"_index":2003,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(elemento",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":172,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["don't",{"_index":1647,"title":{},"body":{"components/SidenavComponent.html":{}}}],["dos",{"_index":1002,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["droplist",{"_index":1865,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["duration",{"_index":1164,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["dynamic",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["e.error.message",{"_index":336,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["e.status",{"_index":333,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["e.test(url",{"_index":1738,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["e2e",{"_index":2015,"title":{},"body":{"index.html":{}}}],["edicion",{"_index":1143,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["editamos",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["editar",{"_index":1525,"title":{},"body":{"components/RolesComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UsersComponent.html":{}}}],["edito",{"_index":83,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["edito_registro",{"_index":33,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["el",{"_index":59,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":263,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["element.action.name",{"_index":233,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["element.actionsdate",{"_index":1684,"title":{},"body":{"components/StatusComponent.html":{}}}],["element.change",{"_index":234,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["element.date",{"_index":232,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["element.email",{"_index":1896,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.id",{"_index":229,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{}}}],["element.ip",{"_index":231,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["element.lastname",{"_index":1895,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.name",{"_index":1528,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["element.role.name",{"_index":1897,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.status",{"_index":1898,"title":{},"body":{"components/UsersComponent.html":{}}}],["element.username",{"_index":230,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/UsersComponent.html":{}}}],["elemento",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elimina",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminar",{"_index":1522,"title":{},"body":{"components/RolesComponent.html":{},"components/UsersComponent.html":{}}}],["email",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateUserComponent.html":{},"classes/DataMail.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/User.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["en",{"_index":61,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/UserUpdateComponent.html":{}}}],["encuentra",{"_index":1318,"title":{},"body":{"components/ProfileComponent.html":{}}}],["end",{"_index":1120,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entonces",{"_index":851,"title":{},"body":{"components/DashboardComponent.html":{}}}],["enviado",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviarlo",{"_index":1142,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["environment",{"_index":146,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1333,"title":{},"body":{"components/ProfileComponent.html":{}}}],["environment.apiurl}/activitylog",{"_index":326,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["err?.error",{"_index":984,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err?.status",{"_index":981,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":1496,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["error.pipe",{"_index":1026,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.status",{"_index":1749,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["erroralert",{"_index":971,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroralert('error",{"_index":985,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorcreate",{"_index":760,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorcreate('error",{"_index":770,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{}}}],["errorcreatepassword",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroremail",{"_index":1089,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["errores",{"_index":992,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":440,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["errornetworkalert",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorserveralert",{"_index":972,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorupdate",{"_index":1759,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorupdate('error",{"_index":1766,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["errorupdatepassword",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroruser",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["erroruserauthorization",{"_index":1944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":848,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Util.html":{}}}],["escuchar",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["espere",{"_index":1007,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["est",{"_index":1015,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["esta",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["estaba",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["estar",{"_index":1514,"title":{},"body":{"components/RolesComponent.html":{}}}],["estarlo",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["estas",{"_index":47,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"interceptors/ErrorInterceptor.html":{}}}],["estatus",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["este",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["esto",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"guards/RolguardGuard.html":{}}}],["event",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["event.type",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["evento",{"_index":56,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"classes/Constants.html":{}}}],["eventos",{"_index":886,"title":{},"body":{"components/DashboardComponent.html":{}}}],["example",{"_index":247,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{},"components/SidenavComponent.html":{},"components/UsersComponent.html":{}}}],["excepción",{"_index":1017,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["exclusivo",{"_index":1035,"title":{},"body":{"components/FooterComponent.html":{}}}],["execute",{"_index":2012,"title":{},"body":{"index.html":{}}}],["existe",{"_index":1162,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["expectedrole",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"guards/RolguardGuard.html":{}}}],["expectedrole.includes(roles",{"_index":1550,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["expiración",{"_index":66,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["expiredsession",{"_index":1731,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{}}}],["exports",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SharedModule.html":{}}}],["extensiones",{"_index":717,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["extensions",{"_index":647,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["extensions/password",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["extiosamente",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f",{"_index":1091,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["f5f5f5b2",{"_index":1179,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["failed",{"_index":1495,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["fallidos",{"_index":71,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["false",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"guards/RolguardGuard.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1072,"title":{},"body":{"components/FooterComponent.html":{}}}],["favor",{"_index":896,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["field",{"_index":1555,"title":{},"body":{"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["file_copyactivity",{"_index":1625,"title":{},"body":{"components/SidenavComponent.html":{}}}],["fileinvalid",{"_index":703,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["files",{"_index":1995,"title":{},"body":{"index.html":{}}}],["filevalidator",{"_index":679,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{}}}],["filevalidator.maxcontentsize(10485760",{"_index":691,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["fill",{"_index":1640,"title":{},"body":{"components/SidenavComponent.html":{}}}],["fillercontent",{"_index":1593,"title":{},"body":{"components/SidenavComponent.html":{}}}],["filteredurlpatterns",{"_index":1709,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["fin",{"_index":85,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["fin_de_sesión",{"_index":34,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["finalizada",{"_index":869,"title":{},"body":{"components/DashboardComponent.html":{}}}],["finalize",{"_index":1726,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["fines",{"_index":1036,"title":{},"body":{"components/FooterComponent.html":{}}}],["fixed",{"_index":1632,"title":{},"body":{"components/SidenavComponent.html":{}}}],["flag",{"_index":2006,"title":{},"body":{"index.html":{}}}],["flex",{"_index":735,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["float",{"_index":1067,"title":{},"body":{"components/FooterComponent.html":{}}}],["fomulario",{"_index":1350,"title":{},"body":{"components/ProfileComponent.html":{}}}],["fondo",{"_index":1651,"title":{},"body":{"components/SidenavComponent.html":{}}}],["font",{"_index":1071,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer",{"_index":1029,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":282,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["footer.component.css",{"_index":1030,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1031,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":281,"title":{"components/FooterComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgot",{"_index":284,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["forgotpasswordcomponent",{"_index":283,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":748,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["formbuilder",{"_index":654,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["formcode",{"_index":1910,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["formdata",{"_index":1378,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["formdata.append('archivo",{"_index":1838,"title":{},"body":{"injectables/UserService.html":{}}}],["formgroup",{"_index":663,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["formgroup.get(archivo",{"_index":698,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["formgroup.get(pconfirmpassword",{"_index":1356,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formgroup.get(pnewpassword",{"_index":1354,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formpass",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formpassword",{"_index":1295,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formsmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["formulario",{"_index":1343,"title":{},"body":{"components/ProfileComponent.html":{}}}],["foto",{"_index":686,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{}}}],["found",{"_index":291,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["fromevent",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["fromevent(window",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["full",{"_index":738,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["funcion",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["funcionalidad",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["funcionalidades",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["funciones",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["función",{"_index":993,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["function",{"_index":1603,"title":{},"body":{"components/SidenavComponent.html":{}}}],["further",{"_index":2017,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1997,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1982,"title":{},"body":{"index.html":{}}}],["getactionbyname",{"_index":130,"title":{},"body":{"injectables/ActionsService.html":{}}}],["getactionbyname(actionconstants.recuperar_contraseña.tostring",{"_index":1153,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["getactionbyname(actionname",{"_index":137,"title":{},"body":{"injectables/ActionsService.html":{}}}],["getactivitylog",{"_index":315,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["getallroles",{"_index":823,"title":{},"body":{"components/CreateUserComponent.html":{},"injectables/RoleService.html":{},"components/UserUpdateComponent.html":{}}}],["getallstatus",{"_index":1687,"title":{},"body":{"injectables/StatusService.html":{}}}],["getallusers",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["getconfirm",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["getconfirmpassword",{"_index":1338,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getcrole",{"_index":813,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["getf",{"_index":1110,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["getnewpassword",{"_index":1336,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getpassword",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["getprofilepicture",{"_index":673,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["getrole",{"_index":1456,"title":{},"body":{"injectables/RoleService.html":{}}}],["getrole(_id",{"_index":1465,"title":{},"body":{"injectables/RoleService.html":{}}}],["gets",{"_index":1346,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getstatusbyid",{"_index":1688,"title":{},"body":{"injectables/StatusService.html":{}}}],["getstatusbyid(_id",{"_index":1694,"title":{},"body":{"injectables/StatusService.html":{}}}],["getters",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["getting",{"_index":1979,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserbyid",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyid(_id",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbystatus",{"_index":839,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getuserinfo",{"_index":1299,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getusername",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["getusername(this.username.value",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{}}}],["getusername(username",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["getusuario",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":2020,"title":{},"body":{"index.html":{}}}],["gotolist",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["graph",{"_index":2027,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1529,"title":{"guards/RolguardGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guardado",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guardamos",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["guardar",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{}}}],["guardo",{"_index":1159,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["guards",{"_index":1530,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["h1.example",{"_index":1638,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ha",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["hagan",{"_index":1517,"title":{},"body":{"components/RolesComponent.html":{}}}],["han",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handleerror",{"_index":1457,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["handleerror(operation",{"_index":1467,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["handler401error",{"_index":1712,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["hasroles",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasroles(roleinc",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["hasta",{"_index":1147,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["hay",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["headers",{"_index":1477,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["height",{"_index":248,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["help",{"_index":2018,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":1074,"title":{},"body":{"components/FooterComponent.html":{}}}],["hemos",{"_index":871,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hh:mm:ss",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["hola",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{},"components/SidenavComponent.html":{}}}],["home'},{'name",{"_index":287,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["home.component.css",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":926,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["homecomponent",{"_index":286,"title":{"components/HomeComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["horizontalposition",{"_index":1166,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["hostlistener",{"_index":861,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlistener('window:mousemove",{"_index":856,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hostlisteners",{"_index":843,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":262,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["http://localhost:4200",{"_index":1992,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["httpclient",{"_index":133,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":1552,"title":{},"body":{"modules/SharedModule.html":{}}}],["httperrorresponse",{"_index":966,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":963,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httphandler",{"_index":960,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpheaders",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":964,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpoptions",{"_index":1453,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["httprequest",{"_index":958,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpresponse",{"_index":965,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ico",{"_index":718,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["icon",{"_index":670,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":10,"title":{},"body":{"classes/Action.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"injectables/UserService.html":{}}}],["id=${role._id",{"_index":1489,"title":{},"body":{"injectables/RoleService.html":{}}}],["id=${status._id",{"_index":1705,"title":{},"body":{"injectables/StatusService.html":{}}}],["id=${user._id",{"_index":1831,"title":{},"body":{"injectables/UserService.html":{}}}],["identifier",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["idrole",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["if(error.status",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(rolename",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["image",{"_index":1172,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["image/jpeg",{"_index":671,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["image/jpg",{"_index":668,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["image/png",{"_index":667,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["image/x",{"_index":669,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["imagenes",{"_index":716,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["implements",{"_index":177,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["import",{"_index":142,"title":{},"body":{"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["import('./components/dashboard/dashboard.module').then",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["important",{"_index":1069,"title":{},"body":{"components/FooterComponent.html":{}}}],["imports",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SharedModule.html":{}}}],["inactivestatus",{"_index":35,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["inactividad",{"_index":68,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["inactivo",{"_index":36,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/LoginComponent.html":{},"components/UsersComponent.html":{}}}],["incorrecto",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["indefinido",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["info.email",{"_index":1429,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["informaci[on",{"_index":1890,"title":{},"body":{"components/UsersComponent.html":{}}}],["informacion",{"_index":1317,"title":{},"body":{"components/ProfileComponent.html":{},"components/RolesComponent.html":{},"components/UsersComponent.html":{}}}],["información",{"_index":1047,"title":{},"body":{"components/FooterComponent.html":{}}}],["informationalert",{"_index":973,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["informes",{"_index":1372,"title":{},"body":{"components/ProfileComponent.html":{}}}],["infotomailsending",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["infotomailsending(email",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["ingresa",{"_index":850,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ingresado",{"_index":1161,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["ingresas",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["ingreso",{"_index":893,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ingrespo",{"_index":900,"title":{},"body":{"components/DashboardComponent.html":{}}}],["inicia",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iniciar",{"_index":1314,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inicio",{"_index":91,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"miscellaneous/variables.html":{}}}],["inicio_de_sesion",{"_index":37,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["inject",{"_index":675,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["inject(mat_dialog_data",{"_index":664,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["injectable",{"_index":125,"title":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"injectables/MessageService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/MessageService.html":{},"injectables/RoleService.html":{},"guards/RolguardGuard.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":127,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"injectables/MessageService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":681,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["insert",{"_index":1917,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["instanceof",{"_index":1734,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["instancias",{"_index":1679,"title":{},"body":{"components/StatusComponent.html":{}}}],["instrucciones",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inteligente",{"_index":1001,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intentar",{"_index":1021,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intentarlo",{"_index":1010,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intentos",{"_index":70,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["intercept",{"_index":955,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(request",{"_index":957,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":952,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":953,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":1262,"title":{"interfaces/Menu.html":{}},"body":{"interfaces/Menu.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1264,"title":{},"body":{"interfaces/Menu.html":{}}}],["internet",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internetsuccess",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["internos",{"_index":1005,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["investigar",{"_index":884,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ip",{"_index":158,"title":{},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["ipaddress",{"_index":1086,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isauthorized",{"_index":1532,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["isauthorized(route",{"_index":1538,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["isequals",{"_index":1300,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isequals(pnewpassword",{"_index":1309,"title":{},"body":{"components/ProfileComponent.html":{}}}],["item",{"_index":259,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["items",{"_index":1171,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["izquierda",{"_index":739,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["jpeg",{"_index":720,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["jpg",{"_index":719,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["json.parse(localstorage.getitem('username",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(this.user._id",{"_index":1139,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["json.stringify(mailbool['id",{"_index":1137,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["justify",{"_index":1061,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["jwt",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":2014,"title":{},"body":{"index.html":{}}}],["la",{"_index":62,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":50,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/ProfileComponent.html":{},"guards/RolguardGuard.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":830,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{},"components/UserUpdateComponent.html":{}}}],["lastname",{"_index":815,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{},"classes/User.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["layouts",{"_index":1646,"title":{},"body":{"components/SidenavComponent.html":{}}}],["le",{"_index":1012,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{}}}],["left",{"_index":1065,"title":{},"body":{"components/FooterComponent.html":{},"components/SidenavComponent.html":{},"components/UsersComponent.html":{}}}],["legend",{"_index":261,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["length",{"_index":1606,"title":{},"body":{"components/SidenavComponent.html":{}}}],["limite",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limittologin",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":1572,"title":{},"body":{"modules/SharedModule.html":{}}}],["lista",{"_index":769,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{}}}],["literal",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["llamar",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/UsersComponent.html":{}}}],["llegado",{"_index":1146,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["llego",{"_index":1127,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["llenamos",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["lo",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/RolguardGuard.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["loadactivitylog",{"_index":192,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["loadchildren",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddata",{"_index":1503,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["loaddatafromroles",{"_index":800,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["loading",{"_index":1087,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["local",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.clear",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem(\"username",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('role",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolguardGuard.html":{}}}],["localstorage.getitem('status",{"_index":891,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('token",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{}}}],["localstorage.getitem('username",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["localstorage.removeitem('role",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["localstorage.removeitem('status",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["localstorage.removeitem('token",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["localstorage.removeitem('username",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('role",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["localstorage.setitem('status",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('token",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["localstorage.setitem('username",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["log",{"_index":183,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/CreateStatusComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{}}}],["log'},{'name",{"_index":267,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["log(message",{"_index":1472,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["log.component",{"_index":924,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["log.component.css",{"_index":185,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.html",{"_index":187,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts",{"_index":176,"title":{},"body":{"components/ActivityLogComponent.html":{},"coverage.html":{}}}],["log.component.ts:16",{"_index":205,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:17",{"_index":204,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:18",{"_index":201,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:19",{"_index":200,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:20",{"_index":212,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:22",{"_index":211,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:23",{"_index":196,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:28",{"_index":199,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.component.ts:32",{"_index":197,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["log.service",{"_index":220,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{}}}],["log.service.ts",{"_index":314,"title":{},"body":{"injectables/ActivityLogService.html":{},"coverage.html":{}}}],["log.service.ts:11",{"_index":316,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["log.service.ts:14",{"_index":319,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["log.service.ts:20",{"_index":318,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["log.ts",{"_index":155,"title":{},"body":{"classes/ActivityLog.html":{},"coverage.html":{}}}],["log.ts:10",{"_index":164,"title":{},"body":{"classes/ActivityLog.html":{}}}],["log.ts:5",{"_index":163,"title":{},"body":{"classes/ActivityLog.html":{}}}],["log.ts:6",{"_index":162,"title":{},"body":{"classes/ActivityLog.html":{}}}],["log.ts:7",{"_index":165,"title":{},"body":{"classes/ActivityLog.html":{}}}],["log.ts:8",{"_index":160,"title":{},"body":{"classes/ActivityLog.html":{}}}],["log.ts:9",{"_index":161,"title":{},"body":{"classes/ActivityLog.html":{}}}],["log/activity",{"_index":175,"title":{},"body":{"components/ActivityLogComponent.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["logeado",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["login",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["login'},{'name",{"_index":289,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["login(auth",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component.css",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":288,"title":{"components/LoginComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"components/SidenavComponent.html":{}}}],["los",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UserUpdateComponent.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":1431,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["mailreq",{"_index":548,"title":{"classes/MailReq.html":{}},"body":{"injectables/AuthService.html":{},"classes/MailReq.html":{},"coverage.html":{}}}],["make",{"_index":1633,"title":{},"body":{"components/SidenavComponent.html":{}}}],["manda",{"_index":1124,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["mandamos",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UsersComponent.html":{}}}],["mando",{"_index":1433,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["manejada",{"_index":1049,"title":{},"body":{"components/FooterComponent.html":{}}}],["map",{"_index":322,"title":{},"body":{"injectables/ActivityLogService.html":{},"interceptors/TokenInterceptor.html":{}}}],["map((event",{"_index":1747,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["map((response",{"_index":330,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["margin",{"_index":244,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["mas",{"_index":885,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mat",{"_index":724,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/NotFoundPageComponent.html":{},"components/SidenavComponent.html":{}}}],["mat_dialog_data",{"_index":677,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["mata",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["matbuttonmodule",{"_index":1558,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":1568,"title":{},"body":{"modules/SharedModule.html":{}}}],["match",{"_index":1518,"title":{},"body":{"components/RolesComponent.html":{}}}],["matching",{"_index":22,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1306,"title":{},"body":{"components/ProfileComponent.html":{}}}],["matdialogmodule",{"_index":1586,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogref",{"_index":655,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["material",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"components/ChangePhotoComponent.html":{},"modules/DashboardModule.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["materialfileinputmodule",{"_index":1587,"title":{},"body":{"modules/SharedModule.html":{}}}],["matformfieldmodule",{"_index":1553,"title":{},"body":{"modules/SharedModule.html":{}}}],["matgridlistmodule",{"_index":1570,"title":{},"body":{"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":1565,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":1556,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":1579,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpaginator",{"_index":206,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["matpaginatormodule",{"_index":1576,"title":{},"body":{"modules/SharedModule.html":{}}}],["matpasswordstrengthmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["matpasswordstrengthmodule.forroot",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":1561,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectmodule",{"_index":1573,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsidenav",{"_index":1613,"title":{},"body":{"components/SidenavComponent.html":{}}}],["matsidenavmodule",{"_index":1577,"title":{},"body":{"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":1583,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsnackbar",{"_index":1094,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["matsnackbarmodule",{"_index":1560,"title":{},"body":{"modules/SharedModule.html":{}}}],["matsort",{"_index":209,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["matsortmodule",{"_index":1575,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabledatasource",{"_index":203,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["mattablemodule",{"_index":1567,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":1581,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":1563,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":250,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["maxheight",{"_index":1382,"title":{},"body":{"components/ProfileComponent.html":{}}}],["maxretries",{"_index":975,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxwidth",{"_index":1380,"title":{},"body":{"components/ProfileComponent.html":{}}}],["mecanismo",{"_index":990,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["media",{"_index":1598,"title":{},"body":{"components/SidenavComponent.html":{}}}],["media.matchmedia('(max",{"_index":1615,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mediamatcher",{"_index":1599,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mediaquerylist",{"_index":1609,"title":{},"body":{"components/SidenavComponent.html":{}}}],["menu",{"_index":1263,"title":{"interfaces/Menu.html":{}},"body":{"interfaces/Menu.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["mergemap",{"_index":968,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["mergemap((error",{"_index":1027,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["message",{"_index":1269,"title":{},"body":{"injectables/MessageService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["message.service",{"_index":1482,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["messageservice",{"_index":1267,"title":{"injectables/MessageService.html":{}},"body":{"injectables/MessageService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["metadata",{"_index":179,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["methods",{"_index":129,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{}}}],["metodo",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["min",{"_index":881,"title":{},"body":{"components/DashboardComponent.html":{}}}],["miscellaneous",{"_index":2032,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["mobile",{"_index":1630,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mobilequery",{"_index":1594,"title":{},"body":{"components/SidenavComponent.html":{}}}],["models/action",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/activity",{"_index":324,"title":{},"body":{"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{}}}],["models/auth",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/mailreq",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/role",{"_index":1481,"title":{},"body":{"injectables/RoleService.html":{}}}],["models/status",{"_index":1700,"title":{},"body":{"injectables/StatusService.html":{}}}],["models/user",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":429,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{}}],["modules",{"_index":431,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modulo",{"_index":81,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UsersComponent.html":{}}}],["momento",{"_index":1045,"title":{},"body":{"components/FooterComponent.html":{}}}],["more",{"_index":2019,"title":{},"body":{"index.html":{}}}],["msg",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["murio",{"_index":875,"title":{},"body":{"components/DashboardComponent.html":{}}}],["máximo",{"_index":1004,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["n",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["name",{"_index":11,"title":{},"body":{"classes/Action.html":{},"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"index.html":{}}}],["navegador",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1991,"title":{},"body":{"index.html":{}}}],["navigationcancel",{"_index":1727,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["navigationend",{"_index":1728,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["navigationerror",{"_index":1729,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["navigationstart",{"_index":1730,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["necesite",{"_index":1882,"title":{},"body":{"components/UsersComponent.html":{}}}],["netstatus",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":202,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/AuthService.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1304,"title":{},"body":{"components/ProfileComponent.html":{}}}],["newpassword.value.length}}/15",{"_index":1392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["next",{"_index":959,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":979,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":1988,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":840,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{}}}],["ngoninit",{"_index":193,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["ngrx/store",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":680,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["noesigual",{"_index":1361,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["nombre",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"classes/Util.html":{}}}],["nombrespinner",{"_index":110,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1068,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["nos",{"_index":52,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/ProfileComponent.html":{}}}],["notfoundpagecomponent",{"_index":290,"title":{"components/NotFoundPageComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nuestro",{"_index":999,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nuevo",{"_index":93,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["nuevo_registro",{"_index":38,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["null",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["number",{"_index":17,"title":{},"body":{"classes/Action.html":{},"classes/ActivityLog.html":{},"components/CreateUserComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"classes/Role.html":{},"classes/Status.html":{},"interceptors/TokenInterceptor.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1476,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["objecto",{"_index":1132,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["objetos",{"_index":1678,"title":{},"body":{"components/StatusComponent.html":{}}}],["observable",{"_index":141,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["obtener",{"_index":1135,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["ocurre",{"_index":57,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["of(result",{"_index":1497,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["offline').pipe",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["ondestroy",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["oninit",{"_index":178,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["online').pipe",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["onstrengthchanged",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{}}}],["onstrengthchanged(strength",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{}}}],["onstrengthchangeds",{"_index":801,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{}}}],["onstrengthchangeds(strength",{"_index":807,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{}}}],["open",{"_index":1627,"title":{},"body":{"components/SidenavComponent.html":{}}}],["opendialogperfil",{"_index":1301,"title":{},"body":{"components/ProfileComponent.html":{}}}],["operación",{"_index":987,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["operation",{"_index":1471,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["oportunidad",{"_index":1018,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["optional",{"_index":136,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{}}}],["otra",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":1180,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["overflow",{"_index":251,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/UsersComponent.html":{}}}],["overview",{"_index":2021,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1953,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":241,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["page",{"_index":1280,"title":{},"body":{"components/NotFoundPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":292,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["page.component",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":1281,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["page.component.html",{"_index":1282,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["page.component.ts",{"_index":1279,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":1283,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["page.component.ts:14",{"_index":1284,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["page.component.ts:19",{"_index":1285,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["page/not",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["paginator",{"_index":190,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["panddingrequest",{"_index":1710,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["para",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{}}}],["pasando",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["pass1control",{"_index":1353,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pass1control.value",{"_index":1357,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pass2control",{"_index":1355,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pass2control.seterrors",{"_index":1360,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pass2control.seterrors(null",{"_index":1359,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pass2control.value",{"_index":1358,"title":{},"body":{"components/ProfileComponent.html":{}}}],["password",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":285,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["password.component",{"_index":485,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":1083,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":1084,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1082,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:109",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:113",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:118",{"_index":1096,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":1103,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1099,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1105,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1109,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1102,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:29",{"_index":1108,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1104,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1100,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":1101,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":1107,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1106,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1095,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1111,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:58",{"_index":1097,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:60",{"_index":1098,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:62",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:79",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.value.length}}/15",{"_index":832,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["password.value.length}}/{{passwordcomponent.max",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["password/${_id}/${password}/${confirmpass",{"_index":1837,"title":{},"body":{"injectables/UserService.html":{}}}],["password/forgot",{"_index":484,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":488,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["past",{"_index":1637,"title":{},"body":{"components/SidenavComponent.html":{}}}],["path",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["patterntext",{"_index":113,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["pattertpassword",{"_index":120,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["pconfirmpassword",{"_index":1310,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pedimos",{"_index":895,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pendingrequeststatus",{"_index":1711,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["pensamos",{"_index":1011,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["perfil",{"_index":687,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["pero",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["personalizados",{"_index":995,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["phone",{"_index":817,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{},"classes/User.html":{},"components/UserUpdateComponent.html":{}}}],["photo",{"_index":643,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo'},{'name",{"_index":271,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["photo.component",{"_index":921,"title":{},"body":{"modules/DashboardModule.html":{},"components/ProfileComponent.html":{}}}],["photo.component.html",{"_index":645,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.scss",{"_index":644,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts",{"_index":642,"title":{},"body":{"components/ChangePhotoComponent.html":{},"coverage.html":{}}}],["photo.component.ts:16",{"_index":672,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:17",{"_index":656,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:23",{"_index":666,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:24",{"_index":665,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:34",{"_index":659,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:40",{"_index":674,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:42",{"_index":661,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:53",{"_index":657,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo.component.ts:58",{"_index":658,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["photo/change",{"_index":641,"title":{},"body":{"components/ChangePhotoComponent.html":{},"modules/DashboardModule.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["photoprofile",{"_index":648,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["pipe",{"_index":329,"title":{},"body":{"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{}}}],["please",{"_index":1626,"title":{},"body":{"components/SidenavComponent.html":{}}}],["pnewpassword",{"_index":1312,"title":{},"body":{"components/ProfileComponent.html":{}}}],["png",{"_index":721,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["podemos",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["podido",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["por",{"_index":65,"title":{},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/RolguardGuard.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":1053,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["post(`${environment.apiurl}/activitylog",{"_index":328,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["post(`${environment.apiurl}/roles",{"_index":1485,"title":{},"body":{"injectables/RoleService.html":{}}}],["post(`${environment.apiurl}/status",{"_index":1703,"title":{},"body":{"injectables/StatusService.html":{}}}],["post(`${environment.apiurl}/users/role/${_id",{"_index":1830,"title":{},"body":{"injectables/UserService.html":{}}}],["previa",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["previamente",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{}}}],["primer",{"_index":95,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{}}}],["primer_acceso",{"_index":39,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["primera",{"_index":849,"title":{},"body":{"components/DashboardComponent.html":{}}}],["primero",{"_index":1515,"title":{},"body":{"components/RolesComponent.html":{}}}],["private",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["prod",{"_index":2005,"title":{},"body":{"index.html":{}}}],["production",{"_index":2007,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":944,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":294,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["profile.component.css",{"_index":1291,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":1292,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":293,"title":{"components/ProfileComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["profilepicture",{"_index":651,"title":{},"body":{"components/ChangePhotoComponent.html":{},"classes/User.html":{}}}],["project",{"_index":1981,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"classes/DataMail.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"properties.html":{}}}],["proporciona",{"_index":989,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["protractor",{"_index":2016,"title":{},"body":{"index.html":{}}}],["provide",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["providedin",{"_index":148,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"injectables/MessageService.html":{},"injectables/RoleService.html":{},"guards/RolguardGuard.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["public",{"_index":108,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/ProfileComponent.html":{},"components/SidenavComponent.html":{},"classes/Util.html":{}}}],["pueden",{"_index":1022,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["quarkus",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["que",{"_index":51,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["quitarbackground",{"_index":684,"title":{},"body":{"components/ChangePhotoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quitarbackground('dialog",{"_index":694,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["radiomovil",{"_index":1038,"title":{},"body":{"components/FooterComponent.html":{}}}],["radius",{"_index":1181,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["reactiveformsmodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{}}}],["realizar",{"_index":986,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["recupera",{"_index":98,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["recuperar",{"_index":106,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["recuperar_contraseña",{"_index":40,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["recuperarse",{"_index":1019,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["red",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["redirecciona",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["redirect",{"_index":1266,"title":{},"body":{"interfaces/Menu.html":{}}}],["redirigimos",{"_index":768,"title":{},"body":{"components/CreateRoleComponent.html":{}}}],["reference",{"_index":2023,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":706,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["refreshuserstate",{"_index":841,"title":{},"body":{"components/DashboardComponent.html":{}}}],["regexp",{"_index":1720,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["regexp(constants.pattertpassword",{"_index":819,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{}}}],["registra",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrar",{"_index":54,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["registro",{"_index":74,"title":{},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["reintentar",{"_index":991,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["reintento",{"_index":1000,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["rele",{"_index":773,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["reload",{"_index":1994,"title":{},"body":{"index.html":{}}}],["remove_red_eye",{"_index":1624,"title":{},"body":{"components/SidenavComponent.html":{}}}],["repeat",{"_index":1176,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["repeat:no",{"_index":1175,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["replaysubject",{"_index":1723,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["replaysubject(1",{"_index":1724,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["requerida",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["requerido",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{},"classes/Util.html":{}}}],["request",{"_index":962,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["request.clone",{"_index":1740,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.has('content",{"_index":1743,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.set('accept",{"_index":1745,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.set('authorization",{"_index":1741,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request.headers.set('content",{"_index":1744,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["require",{"_index":1951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.role.name",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["res.status",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["res.token",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["res.username",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["reset",{"_index":296,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"overview.html":{}}}],["resetpass",{"_index":1177,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["resetpasswordcomponent",{"_index":295,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resp).subscribe(data",{"_index":1367,"title":{},"body":{"components/ProfileComponent.html":{}}}],["response",{"_index":224,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["response.activitylog",{"_index":331,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["responsetype",{"_index":1493,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["respuesta",{"_index":1133,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["restablecida",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restaura",{"_index":100,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["restaura_contraseña_caduca",{"_index":41,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["result",{"_index":1468,"title":{},"body":{"injectables/RoleService.html":{},"components/SidenavComponent.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["result.foto",{"_index":1387,"title":{},"body":{"components/ProfileComponent.html":{}}}],["result.isconfirmed",{"_index":905,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["results",{"_index":21,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrywhen",{"_index":969,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["retrywhen((error",{"_index":1025,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["return",{"_index":151,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateUserComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"guards/RolguardGuard.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":140,"title":{},"body":{"injectables/ActionsService.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{}}}],["revisar",{"_index":705,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["rgb(64",{"_index":1057,"title":{},"body":{"components/FooterComponent.html":{}}}],["rgb(71",{"_index":1652,"title":{},"body":{"components/SidenavComponent.html":{}}}],["right",{"_index":245,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{}}}],["rol",{"_index":772,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/UpdateRoleComponent.html":{},"components/UsersComponent.html":{}}}],["role",{"_index":611,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"modules/DashboardRoutingModule.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/UpdateRoleComponent.html":{},"classes/User.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["role'},{'name",{"_index":274,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["role.component",{"_index":928,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["role.component.css",{"_index":746,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["role.component.html",{"_index":747,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["role.component.ts",{"_index":745,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{},"coverage.html":{}}}],["role.component.ts:16",{"_index":755,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["role.component.ts:17",{"_index":752,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["role.component.ts:18",{"_index":1756,"title":{},"body":{"components/UpdateRoleComponent.html":{}}}],["role.component.ts:30",{"_index":753,"title":{},"body":{"components/CreateRoleComponent.html":{}}}],["role.component.ts:32",{"_index":754,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["role.component.ts:44",{"_index":1757,"title":{},"body":{"components/UpdateRoleComponent.html":{}}}],["role.name",{"_index":831,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["role/:_id",{"_index":945,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["role/create",{"_index":744,"title":{},"body":{"components/CreateRoleComponent.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["role/update",{"_index":931,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/UpdateRoleComponent.html":{},"coverage.html":{}}}],["role_admin",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["role_cnoc",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["role_corp",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["role_prove",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["roleinc",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolename",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["roles",{"_index":766,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateUserComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UserUpdateComponent.html":{}}}],["roles'},{'name",{"_index":298,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["roles.component.css",{"_index":1500,"title":{},"body":{"components/RolesComponent.html":{}}}],["roles.component.html",{"_index":1501,"title":{},"body":{"components/RolesComponent.html":{}}}],["roles/create",{"_index":927,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["roles/roles.component",{"_index":929,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["roles/update",{"_index":930,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["rolescomponent",{"_index":297,"title":{"components/RolesComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":751,"title":{"injectables/RoleService.html":{}},"body":{"components/CreateRoleComponent.html":{},"components/CreateUserComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["rolguardguard",{"_index":492,"title":{"guards/RolguardGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"guards/RolguardGuard.html":{},"coverage.html":{}}}],["root",{"_index":149,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/MessageService.html":{},"injectables/RoleService.html":{},"guards/RolguardGuard.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":269,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["route",{"_index":1537,"title":{},"body":{"guards/RolguardGuard.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["route.data.expectedrole",{"_index":1549,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["router",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["router.events.subscribe((event",{"_index":1733,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["routermodule",{"_index":482,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":948,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1540,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["routes",{"_index":481,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["routing.module.ts",{"_index":480,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routingcomponents",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1987,"title":{},"body":{"index.html":{}}}],["running",{"_index":2008,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":1547,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["rutas",{"_index":1543,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":323,"title":{},"body":{"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{}}}],["s",{"_index":119,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["s+$).{8,15",{"_index":124,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["s.a",{"_index":1040,"title":{},"body":{"components/FooterComponent.html":{}}}],["sans",{"_index":1075,"title":{},"body":{"components/FooterComponent.html":{}}}],["save",{"_index":749,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{}}}],["savedconfirmation",{"_index":761,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":1996,"title":{},"body":{"index.html":{}}}],["scrolling",{"_index":1644,"title":{},"body":{"components/SidenavComponent.html":{}}}],["scrolls",{"_index":1636,"title":{},"body":{"components/SidenavComponent.html":{}}}],["se",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["sea",{"_index":1014,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["see",{"_index":1629,"title":{},"body":{"components/SidenavComponent.html":{}}}],["segundos",{"_index":1287,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["seguridad",{"_index":870,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["seleccionar",{"_index":712,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["selector",{"_index":180,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["send",{"_index":1169,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["sendcodetoresetpassword",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendcodetoresetpassword(mailreq",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendcredentials",{"_index":1911,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["sendingemail",{"_index":1090,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["sendingemailalerts",{"_index":1116,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendmailconfirmation",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sentimos",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ser",{"_index":894,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{}}}],["serif",{"_index":1076,"title":{},"body":{"components/FooterComponent.html":{}}}],["serve",{"_index":1989,"title":{},"body":{"index.html":{}}}],["server",{"_index":1986,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":970,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"guards/RolguardGuard.html":{}}}],["servidor",{"_index":1006,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sesion",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["sesiones",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["sesión",{"_index":86,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["sesión_edito_usuario",{"_index":42,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["sessionkilled",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":842,"title":{},"body":{"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["shared/guards/rolguard.guard",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/interceptors/error.interceptor",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/interceptors/token.interceptor",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/auth.service",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["shared/shared.module",{"_index":915,"title":{},"body":{"modules/DashboardModule.html":{}}}],["shared/utils/alerts",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["sharedmodule",{"_index":439,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["shouldbypass",{"_index":1713,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["shouldbypass(url",{"_index":1717,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["shouldrun",{"_index":1595,"title":{},"body":{"components/SidenavComponent.html":{}}}],["showconfirmbutton",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showdetails",{"_index":799,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{}}}],["si",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["sidenav",{"_index":1589,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":300,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["sidenav.component.css",{"_index":1590,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.html",{"_index":1591,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":299,"title":{"components/SidenavComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sido",{"_index":1441,"title":{},"body":{"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["sin",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["sirve",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["sistema",{"_index":60,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{}}}],["size",{"_index":1079,"title":{},"body":{"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["snackbar",{"_index":1093,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["sobre",{"_index":58,"title":{},"body":{"classes/ActionConstants.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{}}}],["solicita",{"_index":105,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["solicita_recuperar_contraseña",{"_index":43,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["solid",{"_index":257,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["solo",{"_index":714,"title":{},"body":{"components/ChangePhotoComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/UsersComponent.html":{}}}],["son",{"_index":49,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["sort",{"_index":191,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"modules/SharedModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"index.html":{}}}],["space",{"_index":1062,"title":{},"body":{"components/FooterComponent.html":{},"components/SidenavComponent.html":{}}}],["span",{"_index":1060,"title":{},"body":{"components/FooterComponent.html":{}}}],["spec\\.ts",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":111,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/ValidateCodeComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["src/.../actionconstants.ts",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../alerts.ts",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dashboard",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.interceptor.ts",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":479,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:74",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/auth/forgot",{"_index":1081,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/login/login.component.ts",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/login/login.component.ts:102",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:106",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:16",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:17",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:19",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:21",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:23",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:40",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:44",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:48",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/login/login.component.ts:52",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/auth/reset",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/validate",{"_index":1906,"title":{},"body":{"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/activity",{"_index":174,"title":{},"body":{"components/ActivityLogComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/components/footer/footer.component.ts",{"_index":1028,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/components/footer/footer.component.ts:12",{"_index":1033,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/dashboard/components/footer/footer.component.ts:8",{"_index":1032,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts",{"_index":1588,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:19",{"_index":1610,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:21",{"_index":1608,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:23",{"_index":1600,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:29",{"_index":1604,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:36",{"_index":1602,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:40",{"_index":1611,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/components/sidenav/sidenav.component.ts:42",{"_index":1601,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/components/dashboard/dashboard",{"_index":922,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":833,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:14",{"_index":859,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:15",{"_index":845,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:19",{"_index":855,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:34",{"_index":854,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:39",{"_index":857,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:49",{"_index":846,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:59",{"_index":847,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:72",{"_index":858,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.module.ts",{"_index":912,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/components/dashboard/home/home.component.ts",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/home/home.component.ts:12",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/dashboard/home/home.component.ts:8",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/dashboard/roles/create",{"_index":743,"title":{},"body":{"components/CreateRoleComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts",{"_index":1499,"title":{},"body":{"components/RolesComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:16",{"_index":1511,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:17",{"_index":1509,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:19",{"_index":1504,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:27",{"_index":1507,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:31",{"_index":1506,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:39",{"_index":1505,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/roles.component.ts:50",{"_index":1508,"title":{},"body":{"components/RolesComponent.html":{}}}],["src/app/components/dashboard/roles/update",{"_index":1753,"title":{},"body":{"components/UpdateRoleComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/status/create",{"_index":776,"title":{},"body":{"components/CreateStatusComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/status/status.component.ts",{"_index":1660,"title":{},"body":{"components/StatusComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/status/status.component.ts:22",{"_index":1673,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:23",{"_index":1672,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:26",{"_index":1670,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:27",{"_index":1671,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:28",{"_index":1677,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:30",{"_index":1675,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:31",{"_index":1674,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:32",{"_index":1676,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:34",{"_index":1663,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:45",{"_index":1667,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:49",{"_index":1665,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:58",{"_index":1666,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/status.component.ts:65",{"_index":1669,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/components/dashboard/status/update",{"_index":1767,"title":{},"body":{"components/UpdateStatusComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/users/create",{"_index":794,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/users/profile/change",{"_index":640,"title":{},"body":{"components/ChangePhotoComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts",{"_index":1290,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:104",{"_index":1321,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:114",{"_index":1332,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:131",{"_index":1308,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:141",{"_index":1320,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:22",{"_index":1334,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:23",{"_index":1329,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:24",{"_index":1330,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:25",{"_index":1335,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:26",{"_index":1323,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:28",{"_index":1327,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:29",{"_index":1324,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:30",{"_index":1331,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:31",{"_index":1307,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:37",{"_index":1328,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:59",{"_index":1319,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:63",{"_index":1337,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:66",{"_index":1339,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:70",{"_index":1311,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:87",{"_index":1313,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/profile/profile.component.ts:91",{"_index":1322,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/components/dashboard/users/user",{"_index":1840,"title":{},"body":{"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/users/users.component.ts",{"_index":1866,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/users/users.component.ts:15",{"_index":1879,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:25",{"_index":1878,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:26",{"_index":1880,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:27",{"_index":1871,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:37",{"_index":1873,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:57",{"_index":1876,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:62",{"_index":1875,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:70",{"_index":1874,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/dashboard/users/users.component.ts:84",{"_index":1877,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/app/components/not",{"_index":1278,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/shared.module.ts",{"_index":1551,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/guards/rolguard.guard",{"_index":923,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/shared/guards/rolguard.guard.ts",{"_index":1531,"title":{},"body":{"guards/RolguardGuard.html":{},"coverage.html":{}}}],["src/app/shared/guards/rolguard.guard.ts:13",{"_index":1536,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["src/app/shared/guards/rolguard.guard.ts:23",{"_index":1539,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["src/app/shared/guards/rolguard.guard.ts:9",{"_index":1533,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["src/app/shared/interceptors/error.interceptor",{"_index":919,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/shared/interceptors/error.interceptor.ts",{"_index":954,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/interceptors/error.interceptor.ts:22",{"_index":956,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/interceptors/error.interceptor.ts:28",{"_index":961,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor",{"_index":918,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts",{"_index":1708,"title":{},"body":{"interceptors/TokenInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:111",{"_index":1715,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:22",{"_index":1722,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:23",{"_index":1721,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:24",{"_index":1725,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:25",{"_index":1714,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:44",{"_index":1718,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/interceptors/token.interceptor.ts:50",{"_index":1716,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/shared/models/action",{"_index":217,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["src/app/shared/models/action.ts",{"_index":6,"title":{},"body":{"classes/Action.html":{},"coverage.html":{}}}],["src/app/shared/models/action.ts:3",{"_index":18,"title":{},"body":{"classes/Action.html":{}}}],["src/app/shared/models/action.ts:4",{"_index":19,"title":{},"body":{"classes/Action.html":{}}}],["src/app/shared/models/action.ts:5",{"_index":16,"title":{},"body":{"classes/Action.html":{}}}],["src/app/shared/models/activity",{"_index":154,"title":{},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/auth.ts",{"_index":511,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/app/shared/models/auth.ts:2",{"_index":513,"title":{},"body":{"classes/Auth.html":{}}}],["src/app/shared/models/auth.ts:3",{"_index":512,"title":{},"body":{"classes/Auth.html":{}}}],["src/app/shared/models/datamail",{"_index":1114,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["src/app/shared/models/datamail.ts",{"_index":950,"title":{},"body":{"classes/DataMail.html":{},"coverage.html":{}}}],["src/app/shared/models/datamail.ts:2",{"_index":951,"title":{},"body":{"classes/DataMail.html":{}}}],["src/app/shared/models/mailreq.ts",{"_index":1258,"title":{},"body":{"classes/MailReq.html":{},"coverage.html":{}}}],["src/app/shared/models/mailreq.ts:3",{"_index":1261,"title":{},"body":{"classes/MailReq.html":{}}}],["src/app/shared/models/mailreq.ts:4",{"_index":1260,"title":{},"body":{"classes/MailReq.html":{}}}],["src/app/shared/models/menu.ts",{"_index":1265,"title":{},"body":{"interfaces/Menu.html":{},"coverage.html":{}}}],["src/app/shared/models/role",{"_index":756,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateUserComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UserUpdateComponent.html":{}}}],["src/app/shared/models/role.ts",{"_index":1449,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/app/shared/models/role.ts:2",{"_index":1450,"title":{},"body":{"classes/Role.html":{}}}],["src/app/shared/models/role.ts:3",{"_index":1451,"title":{},"body":{"classes/Role.html":{}}}],["src/app/shared/models/status",{"_index":788,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["src/app/shared/models/status.ts",{"_index":1655,"title":{},"body":{"classes/Status.html":{},"coverage.html":{}}}],["src/app/shared/models/status.ts:3",{"_index":1657,"title":{},"body":{"classes/Status.html":{}}}],["src/app/shared/models/status.ts:4",{"_index":1659,"title":{},"body":{"classes/Status.html":{}}}],["src/app/shared/models/status.ts:5",{"_index":1658,"title":{},"body":{"classes/Status.html":{}}}],["src/app/shared/models/user",{"_index":218,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["src/app/shared/models/user.ts",{"_index":1776,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/models/user.ts:10",{"_index":1780,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:11",{"_index":1787,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:12",{"_index":1779,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:13",{"_index":1783,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:14",{"_index":1785,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:15",{"_index":1782,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:16",{"_index":1786,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:17",{"_index":1784,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:4",{"_index":1777,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:8",{"_index":1778,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/user.ts:9",{"_index":1781,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/services/actions.service",{"_index":1115,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{}}}],["src/app/shared/services/actions.service.ts",{"_index":128,"title":{},"body":{"injectables/ActionsService.html":{},"coverage.html":{}}}],["src/app/shared/services/actions.service.ts:13",{"_index":138,"title":{},"body":{"injectables/ActionsService.html":{}}}],["src/app/shared/services/actions.service.ts:9",{"_index":134,"title":{},"body":{"injectables/ActionsService.html":{}}}],["src/app/shared/services/activity",{"_index":219,"title":{},"body":{"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service",{"_index":757,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["src/app/shared/services/auth.service.ts",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.ts:104",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:116",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:125",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:23",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:24",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:27",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:28",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:29",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:30",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:31",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:32",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:38",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:42",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:46",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:50",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:54",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:61",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:74",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:87",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:93",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/message.service.ts",{"_index":1268,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/shared/services/message.service.ts:10",{"_index":1273,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message.service.ts:14",{"_index":1274,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/message.service.ts:8",{"_index":1275,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/shared/services/role.service",{"_index":758,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateUserComponent.html":{},"components/RolesComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UserUpdateComponent.html":{}}}],["src/app/shared/services/role.service.ts",{"_index":1452,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/app/shared/services/role.service.ts:12",{"_index":1459,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:20",{"_index":1464,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:24",{"_index":1466,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:29",{"_index":1461,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:38",{"_index":1475,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:43",{"_index":1463,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:47",{"_index":1470,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:55",{"_index":1479,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/role.service.ts:59",{"_index":1473,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/shared/services/status.service",{"_index":789,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["src/app/shared/services/status.service.ts",{"_index":1685,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/app/shared/services/status.service.ts:12",{"_index":1689,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:19",{"_index":1693,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:23",{"_index":1695,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:28",{"_index":1691,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:39",{"_index":1698,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:43",{"_index":1692,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:49",{"_index":1696,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:57",{"_index":1699,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/status.service.ts:61",{"_index":1697,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/app/shared/services/user.service",{"_index":682,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/shared/services/user.service.ts",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user.service.ts:13",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:21",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:25",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:29",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:32",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:35",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:39",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:51",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:55",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:59",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:65",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:69",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:76",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:80",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:84",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/utils/actionconstants",{"_index":759,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["src/app/shared/utils/actionconstants.ts",{"_index":24,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/utils/actionconstants.ts:10",{"_index":69,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:11",{"_index":72,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:12",{"_index":75,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:13",{"_index":79,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:14",{"_index":82,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:15",{"_index":84,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:16",{"_index":87,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:17",{"_index":92,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:18",{"_index":94,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:19",{"_index":97,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:20",{"_index":99,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:21",{"_index":102,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:22",{"_index":104,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:23",{"_index":107,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:25",{"_index":89,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:32",{"_index":741,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/shared/utils/actionconstants.ts:33",{"_index":742,"title":{},"body":{"classes/Constants.html":{}}}],["src/app/shared/utils/actionconstants.ts:7",{"_index":46,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:8",{"_index":90,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/actionconstants.ts:9",{"_index":67,"title":{},"body":{"classes/ActionConstants.html":{}}}],["src/app/shared/utils/alerts",{"_index":685,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["src/app/shared/utils/alerts.ts",{"_index":1943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/utils/utils.ts",{"_index":1902,"title":{},"body":{"classes/Util.html":{},"coverage.html":{}}}],["src/app/shared/utils/utils.ts:4",{"_index":1905,"title":{},"body":{"classes/Util.html":{}}}],["src/environments/environment",{"_index":147,"title":{},"body":{"injectables/ActionsService.html":{},"injectables/ActivityLogService.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stackblitz",{"_index":1628,"title":{},"body":{"components/SidenavComponent.html":{}}}],["started",{"_index":1980,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":25,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["status",{"_index":779,"title":{"classes/Status.html":{}},"body":{"components/CreateStatusComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["status'},{'name",{"_index":276,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["status.component",{"_index":932,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["status.component.css",{"_index":780,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/StatusComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["status.component.html",{"_index":781,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/StatusComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["status.component.ts",{"_index":778,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/UpdateStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:16",{"_index":1771,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["status.component.ts:17",{"_index":1772,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["status.component.ts:18",{"_index":1768,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["status.component.ts:20",{"_index":787,"title":{},"body":{"components/CreateStatusComponent.html":{}}}],["status.component.ts:21",{"_index":784,"title":{},"body":{"components/CreateStatusComponent.html":{}}}],["status.component.ts:33",{"_index":1769,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["status.component.ts:35",{"_index":785,"title":{},"body":{"components/CreateStatusComponent.html":{}}}],["status.component.ts:37",{"_index":786,"title":{},"body":{"components/CreateStatusComponent.html":{}}}],["status.component.ts:45",{"_index":1770,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["status/:_id",{"_index":946,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["status/create",{"_index":777,"title":{},"body":{"components/CreateStatusComponent.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["status/status.component",{"_index":933,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["status/update",{"_index":934,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/UpdateStatusComponent.html":{},"coverage.html":{}}}],["statuscomponent",{"_index":301,"title":{"components/StatusComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["statusservice",{"_index":783,"title":{"injectables/StatusService.html":{}},"body":{"components/CreateStatusComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"components/UpdateStatusComponent.html":{},"coverage.html":{}}}],["stay",{"_index":1635,"title":{},"body":{"components/SidenavComponent.html":{}}}],["storage",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["stored",{"_index":2002,"title":{},"body":{"index.html":{}}}],["strength",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"components/CreateUserComponent.html":{},"modules/DashboardModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["stretch",{"_index":1639,"title":{},"body":{"components/SidenavComponent.html":{}}}],["stretched",{"_index":1396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/DashboardComponent.html":{},"classes/DataMail.html":{},"components/ForgotPasswordComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":171,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["styleurls",{"_index":184,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["su",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":860,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subscribe",{"_index":1154,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((data",{"_index":1158,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscribe((info",{"_index":1889,"title":{},"body":{"components/UsersComponent.html":{}}}],["subscribe((role",{"_index":824,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["subscribe((user",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sujeto",{"_index":1042,"title":{},"body":{"components/FooterComponent.html":{}}}],["superado",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["supervisor_account",{"_index":1622,"title":{},"body":{"components/SidenavComponent.html":{}}}],["supone",{"_index":874,"title":{},"body":{"components/DashboardComponent.html":{}}}],["support",{"_index":2024,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1634,"title":{},"body":{"components/SidenavComponent.html":{}}}],["svg",{"_index":2025,"title":{},"body":{"modules.html":{}}}],["swal",{"_index":863,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["swal.fire",{"_index":901,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["swal.mixin",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swal.resumetimer",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swal.stoptimer",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sweetalert2",{"_index":864,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"dependencies.html":{}}}],["t",{"_index":1469,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["tabla",{"_index":1513,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["table",{"_index":236,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["tap",{"_index":1480,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["tap((newrole",{"_index":1487,"title":{},"body":{"injectables/RoleService.html":{}}}],["tap((newstatus",{"_index":1704,"title":{},"body":{"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["te",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["template",{"_index":170,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["tenemos",{"_index":996,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tener",{"_index":1023,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["tengan",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["tenia",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":2011,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2010,"title":{},"body":{"index.html":{}}}],["text",{"_index":730,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["textrequeridom",{"_index":1903,"title":{},"body":{"classes/Util.html":{}}}],["textrequeridom(nombre",{"_index":1904,"title":{},"body":{"classes/Util.html":{}}}],["themepalette",{"_index":1325,"title":{},"body":{"components/ProfileComponent.html":{}}}],["then((result",{"_index":904,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["this,this.activitylog.date",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._id",{"_index":1138,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this._mobilequerylistener",{"_index":1616,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this._token",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.actionservice",{"_index":1152,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.actionservice.getactionbyname(action).subscribe(action",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.active",{"_index":1887,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.activitylog.action",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.activitylog.change",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.activitylog.date",{"_index":1155,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.activitylog.username",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.activitylogservice",{"_index":1156,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.activitylogservice.create(this.activitylog).subscribe(data",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activitylogservice.getactivitylog().subscribe(response",{"_index":222,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.authservice.checkinemailtopass(mailbool).subscribe((user",{"_index":1125,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.createactivitylog",{"_index":1893,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.borro_registro",{"_index":1524,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.cambio_de_contraseña,'modulo",{"_index":1444,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.edito_registro",{"_index":1765,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.edito_registro,'modulo",{"_index":1861,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.inicio_de_sesion",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.nuevo_registro",{"_index":765,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateUserComponent.html":{}}}],["this.authservice.createactivitylog(actionconstants.nuevo_registro,'modulo",{"_index":792,"title":{},"body":{"components/CreateStatusComponent.html":{}}}],["this.authservice.infotomailsending(this.email).subscribe((check",{"_index":1432,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.login(this.form.value).subscribe",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":868,"title":{},"body":{"components/DashboardComponent.html":{},"components/SidenavComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.authservice.sendcodetoresetpassword(this.formcode.value).subscribe(res",{"_index":1916,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["this.authservice.sessionkilled",{"_index":1448,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.usuario.id",{"_index":1389,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.authservice.validateemail(data.email).subscribe((info",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.validateemail(this.f.email.value).subscribe((mailbool",{"_index":1121,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.verifylogged",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cancel",{"_index":1446,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.changeyourpassword",{"_index":892,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.confirm.value",{"_index":1437,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.confirmpassword.value",{"_index":1366,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.createactivitylog(actionconstants.fin_de_sesión",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.crole.value.id).subscribe",{"_index":827,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.datasource.data",{"_index":223,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.paginator",{"_index":227,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["this.datasource.sort",{"_index":225,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.dialog.open(changephotocomponent",{"_index":1379,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.dialogref.close(this.data",{"_index":704,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.dialogref.disableclose",{"_index":693,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.email",{"_index":1428,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.erroremail",{"_index":1151,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.extensions.includes(archivo1.value.files[0].type",{"_index":700,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.fb.group",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredurlpatterns.some((e",{"_index":1737,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.form",{"_index":762,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.form.controls",{"_index":1118,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.form.get('crole",{"_index":820,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.form.get('password",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.form.get('username",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.form.reset",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.group",{"_index":689,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["this.formcode",{"_index":1915,"title":{},"body":{"components/ValidateCodeComponent.html":{}}}],["this.formpass",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formpass.get('confirm",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formpass.get('password",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.formpassword",{"_index":1344,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formpassword.get('confirmpassword",{"_index":1352,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formpassword.get('newpassword",{"_index":1351,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formpassword.reset",{"_index":1368,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getuserbystatus",{"_index":865,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getuserinfo",{"_index":1362,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.gotolist",{"_index":1445,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.handler401error",{"_index":1750,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.httpclient",{"_index":327,"title":{},"body":{"injectables/ActivityLogService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.delete(`${environment.apiurl}/roles/${_id",{"_index":1492,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.httpclient.delete(`${environment.apiurl}/status/${_id",{"_index":1707,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.httpclient.delete(`${environment.apiurl}/users/${_id",{"_index":1834,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get",{"_index":325,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/actions/nameaction/${actionname",{"_index":152,"title":{},"body":{"injectables/ActionsService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/auth/validatemail/${email",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/roles",{"_index":1483,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/roles/${_id",{"_index":1484,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/status",{"_index":1701,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/status/${_id",{"_index":1702,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/users",{"_index":1824,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/users/${_id",{"_index":1825,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${environment.apiurl}/users/username/${username",{"_index":1826,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(`${environment.apiurl}/auth/confirm",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.apiurl}/auth/login",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.apiurl}/auth/reset",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.apiurl}/auth/restore`,mailreq",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.apiurl}/users/upload/${id",{"_index":1839,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/roles/${_id",{"_index":1491,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/status/${_id",{"_index":1706,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/users/${_id}/newrole/${idrole",{"_index":1832,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/users/blocked/${_id",{"_index":1827,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/users/changestat/${_id",{"_index":1828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/users/profile/${_id",{"_index":1833,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.put(`${environment.apiurl}/users/update",{"_index":1836,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpoptions",{"_index":1486,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["this.isauthorized(route",{"_index":1548,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["this.isequals('newpassword",{"_index":1345,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loadactivitylog",{"_index":221,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.loaddata",{"_index":1519,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["this.loaddatafromroles",{"_index":821,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.loading",{"_index":1130,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.log(`${operation",{"_index":1494,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["this.log(`added",{"_index":1488,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["this.message",{"_index":1277,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.message.push(message",{"_index":1276,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messageservice.addmessage(message",{"_index":1498,"title":{},"body":{"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["this.mobilequery",{"_index":1614,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.mobilequery.addlistener(this._mobilequerylistener",{"_index":1618,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.mobilequery.removelistener(this._mobilequerylistener",{"_index":1619,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.netstatus",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["this.newpassword.value",{"_index":1365,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.paginator",{"_index":228,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["this.panddingrequest",{"_index":1746,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.password.seterrors",{"_index":1447,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.password.value",{"_index":1436,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.pendingrequeststatus.next(false",{"_index":1736,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.pendingrequeststatus.next(true",{"_index":1735,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.photoprofile",{"_index":688,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.photoprofile.get('profilepicture",{"_index":696,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.pipe.transform(date.now",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.profilepicture.value.files[0]).subscribe(data",{"_index":710,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.role",{"_index":764,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["this.role).subscribe",{"_index":1763,"title":{},"body":{"components/UpdateRoleComponent.html":{}}}],["this.roles",{"_index":825,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.roleservice",{"_index":822,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.roleservice.createrole(this.role).subscribe",{"_index":763,"title":{},"body":{"components/CreateRoleComponent.html":{}}}],["this.roleservice.deleterole(_id).subscribe",{"_index":1523,"title":{},"body":{"components/RolesComponent.html":{}}}],["this.roleservice.getallroles().subscribe((info",{"_index":1520,"title":{},"body":{"components/RolesComponent.html":{}}}],["this.roleservice.getrole(this._id).subscribe",{"_index":1761,"title":{},"body":{"components/UpdateRoleComponent.html":{}}}],["this.roleservice.updaterole(this._id",{"_index":1762,"title":{},"body":{"components/UpdateRoleComponent.html":{}}}],["this.route.snapshot.params['_id",{"_index":1760,"title":{},"body":{"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.router.navigate(['/dashboard/profile",{"_index":906,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.router.navigate(['/dashboard/roles",{"_index":767,"title":{},"body":{"components/CreateRoleComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["this.router.navigate(['/dashboard/status",{"_index":793,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["this.router.navigate(['/dashboard/update",{"_index":1526,"title":{},"body":{"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["this.router.navigate(['/dashboard/users",{"_index":829,"title":{},"body":{"components/CreateUserComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1620,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.router.navigate(['dashboard",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.router.navigate(['login",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ResetPasswordComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["this.router.navigate(['reset",{"_index":1148,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["this.router.navigate(['validate",{"_index":1129,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.sendmailconfirmation",{"_index":1443,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.settimeout",{"_index":866,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["this.shouldbypass(request.url",{"_index":1739,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.snackbar.open('el",{"_index":1160,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.snackbar.open('usuario",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sort",{"_index":226,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["this.status",{"_index":791,"title":{},"body":{"components/CreateStatusComponent.html":{},"components/UpdateStatusComponent.html":{}}}],["this.status).subscribe",{"_index":1775,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["this.statusservice.createstatus(this.status).subscribe",{"_index":790,"title":{},"body":{"components/CreateStatusComponent.html":{}}}],["this.statusservice.deletestatus(_id).subscribe",{"_index":1681,"title":{},"body":{"components/StatusComponent.html":{}}}],["this.statusservice.getallstatus().subscribe((info",{"_index":1682,"title":{},"body":{"components/StatusComponent.html":{}}}],["this.statusservice.getstatusbyid(this._id).subscribe",{"_index":1773,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["this.statusservice.updatestatus(this._id",{"_index":1774,"title":{},"body":{"components/UpdateStatusComponent.html":{}}}],["this.todaywithpipe",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.topnavservice.notificarfoto.emit(result.foto",{"_index":1390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.traytologingcount",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.updateprofile",{"_index":1376,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserUpdateComponent.html":{}}}],["this.user).subscribe((data",{"_index":1371,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user._id",{"_index":1136,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.user.profilepicture",{"_index":1386,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.role",{"_index":1859,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["this.useractivity",{"_index":877,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["this.userinactive.next(undefined",{"_index":878,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.userinactive.subscribe",{"_index":867,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.userservice",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UsersComponent.html":{}}}],["this.userservice.blockuser(user.id",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.createuser(this.form.value",{"_index":826,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["this.userservice.deleteuser(_id).subscribe",{"_index":1892,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.getallusers().subscribe((info",{"_index":1891,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.getuserbyid(_id).subscribe((data",{"_index":1885,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.userservice.getuserbyid(this._id).subscribe",{"_index":1858,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["this.userservice.getuserbyid(this._id).subscribe((data",{"_index":1144,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.userservice.getusername(this.userprofile).subscribe((formdata",{"_index":1377,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getusername(user).subscribe",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.userservice.getusername(user).subscribe((data",{"_index":1438,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.userservice.getusername(username).subscribe(resp",{"_index":1363,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getusername(username).subscribe(user",{"_index":1369,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.updatepassword(resp.id",{"_index":1364,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.updatephoto(this.data.id",{"_index":709,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.userservice.updateprofile(user.id",{"_index":1370,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.updateuser(this._id",{"_index":1860,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["this.usuario.id",{"_index":1388,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.validatephoto('profilepicture",{"_index":692,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["this.windowclosing",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["throwerror",{"_index":320,"title":{},"body":{"injectables/ActivityLogService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["throwerror('error",{"_index":1752,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["throwerror(e",{"_index":335,"title":{},"body":{"injectables/ActivityLogService.html":{}}}],["throwerror(err",{"_index":988,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":1751,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["tiempo",{"_index":876,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["tiene",{"_index":1050,"title":{},"body":{"components/FooterComponent.html":{},"components/RolesComponent.html":{}}}],["timer",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timerprogressbar",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toast.addeventlistener('mouseenter",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toast.addeventlistener('mouseleave",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toastwelcome",{"_index":1945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastwelcome.fire",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toda",{"_index":1046,"title":{},"body":{"components/FooterComponent.html":{}}}],["today",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["todaywithpipe",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StatusComponent.html":{},"components/UserUpdateComponent.html":{}}}],["todos",{"_index":1863,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["toggle",{"_index":1585,"title":{},"body":{"modules/SharedModule.html":{}}}],["token",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interceptors/TokenInterceptor.html":{}}}],["tokeninterceptor",{"_index":441,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"interceptors/TokenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["toolbar",{"_index":1631,"title":{},"body":{"components/SidenavComponent.html":{}}}],["top",{"_index":733,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/FooterComponent.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["traytologingcount",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{}}}],["tree",{"_index":173,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["tres",{"_index":997,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["true",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"modules/DashboardModule.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["tsd",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":872,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/Action.html":{},"classes/ActionConstants.html":{},"injectables/ActionsService.html":{},"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"injectables/ActivityLogService.html":{},"components/AppComponent.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"classes/DataMail.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"interfaces/Menu.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"guards/RolguardGuard.html":{},"components/SidenavComponent.html":{},"classes/Status.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"classes/Util.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ubication",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["un",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/UsersComponent.html":{}}}],["una",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/ForgotPasswordComponent.html":{}}}],["unit",{"_index":2009,"title":{},"body":{"index.html":{}}}],["update",{"_index":303,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["update'},{'name",{"_index":308,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["update.component",{"_index":940,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["update.component.css",{"_index":1842,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.html",{"_index":1843,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts",{"_index":1841,"title":{},"body":{"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["update.component.ts:22",{"_index":1848,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:23",{"_index":1855,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:24",{"_index":1851,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:25",{"_index":1853,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:28",{"_index":1849,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:29",{"_index":1856,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:30",{"_index":1850,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:31",{"_index":1854,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:32",{"_index":1852,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:33",{"_index":1844,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:53",{"_index":1857,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:57",{"_index":1846,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:69",{"_index":1847,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update.component.ts:86",{"_index":1845,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["update/user",{"_index":939,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/UserUpdateComponent.html":{},"coverage.html":{}}}],["updatedconfirmation",{"_index":1341,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatedprofile",{"_index":1342,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatepassword",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserService.html":{}}}],["updatepassword(_id",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["updatephoto",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["updatephoto(id",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile",{"_index":1302,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["updateprofile(_id",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofilemessageconfirmation",{"_index":1296,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updaterole",{"_index":1458,"title":{},"body":{"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/UpdateRoleComponent.html":{}}}],["updaterole(_id",{"_index":1474,"title":{},"body":{"injectables/RoleService.html":{},"components/RolesComponent.html":{}}}],["updaterolecomponent",{"_index":302,"title":{"components/UpdateRoleComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["updatestatus",{"_index":1662,"title":{},"body":{"components/StatusComponent.html":{},"injectables/StatusService.html":{},"components/UpdateStatusComponent.html":{}}}],["updatestatus(_id",{"_index":1668,"title":{},"body":{"components/StatusComponent.html":{},"injectables/StatusService.html":{}}}],["updatestatuscomponent",{"_index":304,"title":{"components/UpdateStatusComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["updateuser",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["updateuser(_id",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["updateuserpassword",{"_index":1303,"title":{},"body":{"components/ProfileComponent.html":{}}}],["url",{"_index":1719,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["url(\"../../../../assets/img/fondo.png",{"_index":1173,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["url(\"../../../assets/img/404notfound.png",{"_index":1288,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["urlendpoint",{"_index":1297,"title":{},"body":{"components/ProfileComponent.html":{}}}],["urltree",{"_index":1541,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["usar",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["usaremos",{"_index":1864,"title":{},"body":{"components/UserUpdateComponent.html":{}}}],["use",{"_index":1998,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{}}}],["user",{"_index":166,"title":{"classes/User.html":{}},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{}}}],["user'},{'name",{"_index":278,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["user).subscribe((data",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.component",{"_index":936,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["user.component.css",{"_index":797,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.html",{"_index":798,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts",{"_index":796,"title":{},"body":{"components/CreateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:18",{"_index":812,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:19",{"_index":811,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:20",{"_index":810,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:21",{"_index":804,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:42",{"_index":814,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:46",{"_index":806,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:51",{"_index":805,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:57",{"_index":809,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user.component.ts:72",{"_index":808,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["user/:_id",{"_index":947,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["user/create",{"_index":795,"title":{},"body":{"components/CreateUserComponent.html":{},"modules/DashboardRoutingModule.html":{},"coverage.html":{}}}],["useractivity",{"_index":837,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["useravailable",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{}}}],["userb",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["userblocked",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinactive",{"_index":838,"title":{},"body":{"components/DashboardComponent.html":{}}}],["username",{"_index":159,"title":{},"body":{"classes/ActivityLog.html":{},"components/ActivityLogComponent.html":{},"classes/Auth.html":{},"injectables/AuthService.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"classes/MailReq.html":{},"components/ProfileComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["userprofile",{"_index":1298,"title":{},"body":{"components/ProfileComponent.html":{}}}],["users",{"_index":943,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"components/SidenavComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["users'},{'name",{"_index":306,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["users.component.css",{"_index":1867,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1868,"title":{},"body":{"components/UsersComponent.html":{}}}],["users/create",{"_index":935,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["users/profile/change",{"_index":920,"title":{},"body":{"modules/DashboardModule.html":{}}}],["users/profile/profile.component",{"_index":937,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["users/user",{"_index":938,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["users/users.component",{"_index":941,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["userscomponent",{"_index":305,"title":{"components/UsersComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":653,"title":{"injectables/UserService.html":{}},"body":{"components/ChangePhotoComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userupdatecomponent",{"_index":307,"title":{"components/UserUpdateComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["uso",{"_index":1034,"title":{},"body":{"components/FooterComponent.html":{}}}],["usuario",{"_index":103,"title":{},"body":{"classes/ActionConstants.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Constants.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/RolguardGuard.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":828,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{}}}],["util",{"_index":1901,"title":{"classes/Util.html":{}},"body":{"classes/Util.html":{},"coverage.html":{}}}],["utils/actionconstants",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/alerts",{"_index":974,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["va",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["validacion",{"_index":1542,"title":{},"body":{"guards/RolguardGuard.html":{}}}],["validado",{"_index":1123,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["validamos",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["validar",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validate",{"_index":310,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["validatecodecomponent",{"_index":309,"title":{"components/ValidateCodeComponent.html":{}},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["validateemail",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemail(email",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatephoto",{"_index":650,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["validatephoto(archivo",{"_index":660,"title":{},"body":{"components/ChangePhotoComponent.html":{}}}],["validators",{"_index":676,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["validators.email",{"_index":1117,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["validators.pattern(constants.patterntext",{"_index":816,"title":{},"body":{"components/CreateUserComponent.html":{}}}],["validators.pattern(new",{"_index":818,"title":{},"body":{"components/CreateUserComponent.html":{},"components/ProfileComponent.html":{}}}],["validators.required",{"_index":690,"title":{},"body":{"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["valores",{"_index":1348,"title":{},"body":{"components/ProfileComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"classes/ActionConstants.html":{},"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"classes/Constants.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":265,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["variable",{"_index":1545,"title":{},"body":{"guards/RolguardGuard.html":{},"coverage.html":{}}}],["variables",{"_index":2033,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1088,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["veces",{"_index":1003,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ventana",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["ventanas",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["verifique",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifylogged",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":1984,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verticalposition",{"_index":1167,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["vez",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["via",{"_index":2013,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":213,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild(matpaginator",{"_index":208,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/RolesComponent.html":{},"components/StatusComponent.html":{},"components/UsersComponent.html":{}}}],["viewchild(matsort",{"_index":210,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["viewport",{"_index":253,"title":{},"body":{"components/ActivityLogComponent.html":{}}}],["void",{"_index":198,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"injectables/StatusService.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"injectables/UserService.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{}}}],["volvemos",{"_index":1020,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["volver",{"_index":1009,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["w+([a",{"_index":114,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["weight",{"_index":1077,"title":{},"body":{"components/FooterComponent.html":{}}}],["welcome",{"_index":1946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["welcomealert",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["welcomealert(username",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":1070,"title":{},"body":{"components/FooterComponent.html":{},"components/ProfileComponent.html":{}}}],["width",{"_index":237,"title":{},"body":{"components/ActivityLogComponent.html":{},"components/ChangePhotoComponent.html":{},"components/CreateRoleComponent.html":{},"components/CreateStatusComponent.html":{},"components/CreateUserComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RolesComponent.html":{},"components/SidenavComponent.html":{},"components/StatusComponent.html":{},"components/UpdateRoleComponent.html":{},"components/UpdateStatusComponent.html":{},"components/UserUpdateComponent.html":{},"components/UsersComponent.html":{},"components/ValidateCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["window.addeventlistener('beforeunload",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.reload",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["window:mousemove",{"_index":844,"title":{},"body":{"components/DashboardComponent.html":{}}}],["windowclosing",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["x",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["x.dashboardmodule",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["xito",{"_index":1024,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["y",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePhotoComponent.html":{},"components/DashboardComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ya",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["yes",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleService.html":{},"injectables/StatusService.html":{},"injectables/UserService.html":{}}}],["yyyy",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["z",{"_index":115,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{},"components/SidenavComponent.html":{}}}],["z])(?=.*[a",{"_index":123,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}],["zone.js",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"overview.html":{}}}],["zñ0",{"_index":116,"title":{},"body":{"classes/ActionConstants.html":{},"classes/Constants.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/action.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/action.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/action.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/action.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Action{\n    id: number;\n    name: string;\n    description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionConstants.html":{"url":"classes/ActionConstants.html","title":"class - ActionConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/actionconstants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ACTIVO\n                            \n                            \n                                    Static\n                                BLOQUEO_POR_EXPIRACIÓN\n                            \n                            \n                                    Static\n                                BLOQUEO_POR_INACTIVIDAD\n                            \n                            \n                                    Static\n                                BLOQUEO_POR_INTENTOS_FALLIDOS\n                            \n                            \n                                    Static\n                                BORRO_REGISTRO\n                            \n                            \n                                    Static\n                                CAMBIO_DE_CONTRASEÑA\n                            \n                            \n                                    Static\n                                CONSULTO_MODULO\n                            \n                            \n                                    Static\n                                EDITO_REGISTRO\n                            \n                            \n                                    Static\n                                FIN_DE_SESIÓN\n                            \n                            \n                                    Static\n                                inactiveStatus\n                            \n                            \n                                    Static\n                                INACTIVO\n                            \n                            \n                                    Static\n                                INICIO_DE_SESION\n                            \n                            \n                                    Static\n                                NUEVO_REGISTRO\n                            \n                            \n                                    Static\n                                PRIMER_ACCESO\n                            \n                            \n                                    Static\n                                RECUPERAR_CONTRASEÑA\n                            \n                            \n                                    Static\n                                RESTAURA_CONTRASEÑA_CADUCA\n                            \n                            \n                                    Static\n                                SESIÓN_EDITO_USUARIO\n                            \n                            \n                                    Static\n                                SOLICITA_RECUPERAR_CONTRASEÑA\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ACTIVO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ACTIVO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:7\n                        \n                    \n\n            \n                \n                    Estas constantes son las que nos ayudan a registrar cada evento que ocurre\nsobre el sistema en la bitacora\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BLOQUEO_POR_EXPIRACIÓN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"BLOQUEO POR EXPIRACIÓN\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BLOQUEO_POR_INACTIVIDAD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"BLOQUEO POR INACTIVIDAD\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BLOQUEO_POR_INTENTOS_FALLIDOS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"BLOQUEO POR INTENTOS FALLIDOS\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        BORRO_REGISTRO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"BORRO REGISTRO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        CAMBIO_DE_CONTRASEÑA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"CAMBIO DE CONTRASEÑA\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        CONSULTO_MODULO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"CONSULTO MODULO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        EDITO_REGISTRO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"EDITO REGISTRO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        FIN_DE_SESIÓN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"FIN DE SESIÓN\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        inactiveStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"624c90f9b9b30b3181e3b94b\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        INACTIVO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"INACTIVO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        INICIO_DE_SESION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"INICIO DE SESIÓN\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        NUEVO_REGISTRO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NUEVO REGISTRO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        PRIMER_ACCESO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"PRIMER ACCESO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        RECUPERAR_CONTRASEÑA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"RECUPERA CONTRASEÑA\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        RESTAURA_CONTRASEÑA_CADUCA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"RESTAURA CONTRASEÑA CADUCA\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        SESIÓN_EDITO_USUARIO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SESIÓN EDITO USUARIO\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        SOLICITA_RECUPERAR_CONTRASEÑA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SOLICITA RECUPERAR CONTRASEÑA\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ActionConstants{\n \n  /**\n   * Estas constantes son las que nos ayudan a registrar cada evento que ocurre\n   * sobre el sistema en la bitacora\n   */\n    public static ACTIVO: string = \"ACTIVO\";\n    public static INACTIVO: string = \"INACTIVO\";\n    public static BLOQUEO_POR_EXPIRACIÓN: string = \"BLOQUEO POR EXPIRACIÓN\";\n    public static BLOQUEO_POR_INACTIVIDAD: string = \"BLOQUEO POR INACTIVIDAD\";\n    public static BLOQUEO_POR_INTENTOS_FALLIDOS: string = \"BLOQUEO POR INTENTOS FALLIDOS\";\n    public static BORRO_REGISTRO: string = \"BORRO REGISTRO\";\n    public static CAMBIO_DE_CONTRASEÑA: string = \"CAMBIO DE CONTRASEÑA\";\n    public static CONSULTO_MODULO: string = \"CONSULTO MODULO\";\n    public static EDITO_REGISTRO: string = \"EDITO REGISTRO\";\n    public static FIN_DE_SESIÓN: string = \"FIN DE SESIÓN\";\n    public static INICIO_DE_SESION: string = \"INICIO DE SESIÓN\";\n    public static NUEVO_REGISTRO: string = \"NUEVO REGISTRO\";\n    public static PRIMER_ACCESO: string = \"PRIMER ACCESO\";\n    public static RECUPERAR_CONTRASEÑA: string = \"RECUPERA CONTRASEÑA\";\n    public static RESTAURA_CONTRASEÑA_CADUCA: string = \"RESTAURA CONTRASEÑA CADUCA\";\n    public static SESIÓN_EDITO_USUARIO: string = \"SESIÓN EDITO USUARIO\";\n    public static SOLICITA_RECUPERAR_CONTRASEÑA: string = \"SOLICITA RECUPERAR CONTRASEÑA\";\n\n    public static inactiveStatus = \"624c90f9b9b30b3181e3b94b\";\n\n}\n\nexport const nombreSpinner = 'spinner';\n\nexport class Constants {\n  public static patternTEXT = /^\\w+([a-zñ A-ZÑ0-9zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙ.-_\\\"\\´\\-\\s\\,]+)?$/;\n  public static pattertPassword = \"^(?=.*[0-9])\"\n  + \"(?=.*[a-z])(?=.*[A-Z])\"\n  + \"(?=.*[@#$%^&+=])\"\n  + \"(?=\\\\S+$).{8,15}$\";\n}\n\n\n\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionsService.html":{"url":"injectables/ActionsService.html","title":"injectable - ActionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/actions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActionByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/actions.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActionByName\n                        \n                    \n                \n            \n            \n                \ngetActionByName(actionName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/actions.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getActionByName(actionName: string): Observable{\n    return this.httpClient.get(`${environment.apiUrl}/actions/nameAction/${actionName}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityLog.html":{"url":"classes/ActivityLog.html","title":"class - ActivityLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/activity-log.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                change\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                ip\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/activity-log.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        change\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/activity-log.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/activity-log.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/activity-log.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/activity-log.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/activity-log.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from \"./action\";\nimport { User } from \"./user\";\n\nexport class ActivityLog {\n    id: Number;\n    date: Date;\n    username: string;\n    action: Action;\n    change: String;\n    ip: String;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActivityLogComponent.html":{"url":"components/ActivityLogComponent.html","title":"component - ActivityLogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActivityLogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/activity-log/activity-log.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-activity-log\n            \n\n            \n                styleUrls\n                ./activity-log.component.css\n            \n\n\n\n            \n                templateUrl\n                ./activity-log.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                activityLog\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColums\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadActivityLog\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activityLogService: ActivityLogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activityLogService\n                                                  \n                                                        \n                                                                        ActivityLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadActivityLog\n                        \n                    \n                \n            \n            \n                \nloadActivityLog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityLog[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColums\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'username', 'ip', 'date', 'action', 'change']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/activity-log/activity-log.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Action } from 'src/app/shared/models/action';\nimport { ActivityLog } from 'src/app/shared/models/activity-log';\nimport { User } from 'src/app/shared/models/user';\nimport { ActivityLogService } from 'src/app/shared/services/activity-log.service';\n\n@Component({\n  selector: 'app-activity-log',\n  templateUrl: './activity-log.component.html',\n  styleUrls: ['./activity-log.component.css'],\n})\nexport class ActivityLogComponent implements OnInit {\n  displayedColums: string[] = ['id', 'username', 'ip', 'date', 'action', 'change'];\n  dataSource = new MatTableDataSource();\n  activityLog: ActivityLog[];\n  action: Action[] = [];\n  user: User[] = [];\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n  constructor(private activityLogService: ActivityLogService) {}\n\n  ngOnInit(): void {\n    this.loadActivityLog();\n  }\n\n  loadActivityLog() {\n    this.activityLogService.getActivityLog().subscribe(response => {\n      this.dataSource.data = response;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n      );\n  }\n}\n\n    \n\n    \n        \n    \n        Activity-log\n    \n\n    \n\n    \n  \n        \n        \n            Id\n            {{element.id}}\n        \n        \n        \n            Username\n            {{ element.username }}\n        \n  \n        \n            Ip\n            {{element.ip}}\n        \n  \n        \n            Date\n            {{element.date}}\n        \n  \n        \n            Action\n            {{ element.action.name }}\n        \n\n        \n            Change\n            {{element.change}}\n        \n    \n  \n        \n        \n    \n  \n    \n  \n    \n\n    \n                \n                    ./activity-log.component.css\n                \n                .demo-table {\n    width: 100%;\n  }\n  \n  .demo-button-container {\n    padding-bottom: 16px;\n  }\n  \n  .demo-button + .demo-button {\n    margin-right: 8px;\n  }\n\n  .example-container {\n    height: 400px;\n    max-width: 100%;\n    overflow: auto;\n  }\n\n  .example-viewport {\n    height: 200px;\n    width: 200px;\n    border: 1px solid black;\n  }\n  \n  .example-item {\n    height: 50px;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Activity-log                                          Id            {{element.id}}                                    Username            {{ element.username }}                              Ip            {{element.ip}}                              Date            {{element.date}}                              Action            {{ element.action.name }}                            Change            {{element.change}}                                          '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActivityLogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivityLogService.html":{"url":"injectables/ActivityLogService.html","title":"injectable - ActivityLogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivityLogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/activity-log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getActivityLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/activity-log.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(activityLog: ActivityLog)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/activity-log.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activityLog\n                                    \n                                                ActivityLog\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActivityLog\n                        \n                    \n                \n            \n            \n                \ngetActivityLog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/activity-log.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ActivityLog } from '../models/activity-log';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActivityLogService {\n  constructor(private httpClient: HttpClient) {}\n\n  getActivityLog(): Observable {\n    return this.httpClient.get(\n      `${environment.apiUrl}/activityLog`\n    );\n  }\n\n  create(activityLog: ActivityLog): Observable {\n    return this.httpClient\n      .post(`${environment.apiUrl}/activityLog`, activityLog)\n      .pipe(\n        map((response: any) => response.activityLog as ActivityLog),\n        catchError((e) => {\n          if (e.status === 400) {\n            return throwError(e);\n          }\n          if (e.error.message) {\n            console.error(e.error.message);\n          }\n          return throwError(e);\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                netStatus\n                            \n                            \n                                title\n                            \n                            \n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                windowClosing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowClosing\n                        \n                    \n                \n            \n            \n                \nwindowClosing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:74\n                \n            \n\n\n            \n                \n                    Esta funcion sirve para escuchar el evento de cerrado de ventana\nsi el usuario cierra una ventana en el navegador, automaticamente mata\nla sesion y sesiones que se tengan abiertas en otra ventanas\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        netStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { AuthService } from './shared/services/auth.service';\nimport { ErrorNetworkAlert, InternetSuccess } from './shared/utils/alerts';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  window: any;\n  public netStatus: string;\n\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    console.log(\n      \"                                                                                      \\n\"+ \n      \" ██████╗ ██╗   ██╗ █████╗ ██████╗ ██╗  ██╗██╗   ██╗███████╗     █████╗ ██████╗ ██████╗ \\n\" +\n      \"██╔═══██╗██║   ██║██╔══██╗██╔══██╗██║ ██╔╝██║   ██║██╔════╝    ██╔══██╗██╔══██╗██╔══██╗\\n\" +\n      \"██║   ██║██║   ██║███████║██████╔╝█████╔╝ ██║   ██║███████╗    ███████║██████╔╝██████╔╝\\n\" +\n      \"██║▄▄ ██║██║   ██║██╔══██║██╔══██╗██╔═██╗ ██║   ██║╚════██║    ██╔══██║██╔═══╝ ██╔═══╝ \\n\" +\n      \"╚██████╔╝╚██████╔╝██║  ██║██║  ██║██║  ██╗╚██████╔╝███████║    ██║  ██║██║     ██║     \\n\" +\n      \" ╚══▀▀═╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝    ╚═╝  ╚═╝╚═╝     ╚═╝     \\n\" +\n      \"                                                                                       \"\n    )\n   // this.windowClosing();\n\n    /**\n     * Cons esto podemos validar si ya se tenia una sesion previa,\n     * si el usuario estaba logeado, ingresas directamente a dashboard ya que detecta el token\n     * si no, te redirecciona a login. \n     * si se va a usar esta funcionalidad, descomentala y comenta la funcion windowClosing\n    */\n     if (this.authService.verifyLogged()) {\n       this.router.navigate(['dashboard']);\n     } else {\n       this.router.navigate(['login']);\n     }\n\n\n                    //Funciones para la deteción de la red\n//==========================================================>\nfromEvent(window, 'offline').pipe(\n  debounceTime(100)).subscribe((event: Event) =>{\n  ErrorNetworkAlert();\n    this.netStatus = event.type;\n\n  });\n\nfromEvent(window, 'online').pipe(\n  debounceTime(100)).subscribe((event: Event) =>{\n  InternetSuccess();\n  this.netStatus = event.type;\n  window.location.reload();\n  });\n//==========================================================>\n\n  }\n\n\n\n  /**\n   * Esta funcion sirve para escuchar el evento de cerrado de ventana\n   * si el usuario cierra una ventana en el navegador, automaticamente mata \n   * la sesion y sesiones que se tengan abiertas en otra ventanas \n   */\n  windowClosing() {\n    window.addEventListener('beforeunload', () => {\n      console.log('Ventana cerrada');\n      localStorage.clear();\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n    });\n\n  }\n\n\n\n}\n\n    \n\n    \n        \n     \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotFoundPageComponent\n\nNotFoundPageComponent\n\nAppModule -->\n\nNotFoundPageComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nValidateCodeComponent\n\nValidateCodeComponent\n\nAppModule -->\n\nValidateCodeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NotFoundPageComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            ValidateCodeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n//Componentes\nimport { SharedModule } from './components/shared/shared.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './shared/interceptors/token.interceptor';\nimport { ErrorInterceptor } from './shared/interceptors/error.interceptor';\nimport { NotFoundPageComponent } from './components/not-found-page/not-found-page.component';\nimport  {  MatPasswordStrengthModule  }  from  '@angular-material-extensions/password-strength' ;\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    NotFoundPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n    MatPasswordStrengthModule.forRoot()\n  ],\n  providers: [\n   { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n   { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotPasswordComponent } from './components/auth/forgot-password/forgot-password.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { ResetPasswordComponent } from './components/auth/reset-password/reset-password.component';\nimport { ValidateCodeComponent } from './components/auth/validate-code/validate-code.component';\nimport { NotFoundPageComponent } from './components/not-found-page/not-found-page.component';\nimport { RolguardGuard } from './shared/guards/rolguard.guard';\n\nconst dashboardModule = () =>\n  import('./components/dashboard/dashboard.module').then(\n    (x) => x.DashboardModule\n  );\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'validate-code', component: ValidateCodeComponent },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  {\n    path: 'reset-password',\n    component: ResetPasswordComponent,\n    canActivate: [RolguardGuard],\n    data: {\n      expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n    },\n  },\n  { path: 'dashboard', loadChildren: dashboardModule },\n  { path: '**', component: NotFoundPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\nexport const routingComponents = [\n  LoginComponent,\n  ValidateCodeComponent,\n  ForgotPasswordComponent,\n  ResetPasswordComponent,\n];\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/auth.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/auth.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth{\n    username: string;\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                action\n                            \n                            \n                                activityLog\n                            \n                            \n                                pipe\n                            \n                            \n                                today\n                            \n                            \n                                todayWithPipe\n                            \n                            \n                                user\n                            \n                            \n                                userb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkinEmailToPass\n                            \n                            \n                                createActivityLog\n                            \n                            \n                                hasRoles\n                            \n                            \n                                infoToMailSending\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                sendCodeToResetPassword\n                            \n                            \n                                sessionKilled\n                            \n                            \n                                validateEmail\n                            \n                            \n                                verifyLogged\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    usuario\n                                \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, router: Router, activityLogService: ActivityLogService, actionService: ActionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/auth.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityLogService\n                                                  \n                                                        \n                                                                        ActivityLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ActionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkinEmailToPass\n                        \n                    \n                \n            \n            \n                \ncheckinEmailToPass(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createActivityLog\n                        \n                    \n                \n            \n            \n                \ncreateActivityLog(action: string, ubication?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ubication\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasRoles\n                        \n                    \n                \n            \n            \n                \nhasRoles(roleInc: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleInc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoToMailSending\n                        \n                    \n                \n            \n            \n                \ninfoToMailSending(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(auth: Auth)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    auth\n                                    \n                                                Auth\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCodeToResetPassword\n                        \n                    \n                \n            \n            \n                \nsendCodeToResetPassword(mailReq: MailReq)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailReq\n                                    \n                                                MailReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionKilled\n                        \n                    \n                \n            \n            \n                \nsessionKilled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyLogged\n                        \n                    \n                \n            \n            \n                \nverifyLogged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:87\n                \n            \n\n\n            \n                \n                    Metodo para validar si el usuario estaba logeado\npreviamente, de estarlo agarra el token activo y continua\nla sesion\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action\n\n                    \n                \n                \n                    \n                        Default value : new Action()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityLog\n\n                    \n                \n                \n                    \n                        Default value : new ActivityLog()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DatePipe('en-US')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todayWithPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        usuario\n                    \n                \n\n                \n                    \n                        getusuario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/auth.service.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/auth.service.ts:104\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Auth } from '../models/auth';\nimport { User } from '../models/user';\nimport { ActivityLogService } from './activity-log.service';\nimport { ActionsService } from './actions.service';\nimport { Action } from '../models/action';\nimport { ActivityLog } from '../models/activity-log';\nimport { DatePipe } from '@angular/common';\nimport { ActionConstants } from '../utils/actionconstants';\nimport { MailReq } from '../models/mailReq';\n\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  user: User\n  private _token : string;\n\n  //Datos para bitacora\n  action: Action = new Action();\n  userb: User = new User();\n  activityLog: ActivityLog = new ActivityLog();\n  today: Date = new Date();\n  pipe = new DatePipe('en-US');\n  todayWithPipe = null;\n\n  constructor(private httpClient: HttpClient, private router: Router,\n    private activityLogService: ActivityLogService,\n    private actionService: ActionsService,) {}\n\n  login(auth: Auth): Observable{\n    return this.httpClient.post(`${environment.apiUrl}/auth/login`, auth);\n  }\n\n  sendCodeToResetPassword(mailReq: MailReq): Observable{\n    return this.httpClient.post(`${environment.apiUrl}/auth/restore`,mailReq);\n  }\n\n  checkinEmailToPass(email: string){\n    return this.httpClient.post(`${environment.apiUrl}/auth/reset-password`, email);\n  }\n\n  validateEmail(email: string): Observable{\n    return this.httpClient.get(`${environment.apiUrl}/auth/validateMail/${email}`)\n  }\n\n  infoToMailSending(email: string): Observable{\n    return this.httpClient.post(`${environment.apiUrl}/auth/confirm`, email);\n  }\n\n\n  \n  //Este metodo mata la sesion y a su vez lo registra en la bitacora\n  logout(): void {\n    this.createActivityLog(ActionConstants.FIN_DE_SESIÓN, 'Cerro la sesion')\n      this._token = null;\n      this.user = null;\n      localStorage.clear();\n      localStorage.removeItem('token');\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n      localStorage.removeItem('status');\n  }\n\n\n  //Elimina local storage sin guardar en bitacora\n  sessionKilled(){\n    localStorage.clear();\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('role');\n    localStorage.removeItem('status');\n  }\n\n  /**\n   * Metodo para validar si el usuario estaba logeado \n   * previamente, de estarlo agarra el token activo y continua\n   * la sesion\n   */\n  verifyLogged(): boolean{\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n\n\n  public get usuario(): User {\n    if (this.user != null) {\n      return this.user;\n    } else if (this.user == null && localStorage.getItem('username') != null) {\n      this.user = JSON.parse(localStorage.getItem('username')) as User;\n      return this.user;\n    }\n    return new User();\n  }\n\n  //Funcionalidades de control sobre el Token de acceso\n  public get token(): string {\n    if (this._token != null) {\n      return this._token;\n    } else if (this._token == null && localStorage.getItem('token') != null) {\n      this._token = localStorage.getItem('token');\n      return this._token;\n    }\n    return null;\n  }\n\n\n  //Validamos si el usuario logeado cuenta con un role\n  hasRoles(roleInc: string): boolean{\n    const rolename = localStorage.getItem('role');\n    if(rolename === roleInc){\n      return true;\n    }\n    return false;\n  }\n\n\n  createActivityLog(action: string, ubication?: string){\n    this.todayWithPipe = this.pipe.transform(Date.now(), 'yyyy-MM-dd HH:mm:ss');\n    //Mandamos a llamar la actividad buscandola por su nombre\n    this.actionService.getActionByName(action).subscribe(action => {\n         const username = localStorage.getItem('username');\n\n        //Llenamos los datos del registro a bitacora\n        this.activityLog.username = username;\n        this,this.activityLog.date = this.todayWithPipe;\n        this.activityLog.action = action;\n        this.activityLog.change = action.description.toString() + ubication;\n\n        //Guardamos los datos\n        this.activityLogService.create(this.activityLog).subscribe(data =>{});\n  }), error => console.log(error)\n}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePhotoComponent.html":{"url":"components/ChangePhotoComponent.html","title":"component - ChangePhotoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePhotoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-photo\n            \n\n            \n                styleUrls\n                ./change-photo.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-photo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                extensions\n                            \n                            \n                                photoProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                guardar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                validatePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profilePicture\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, formBuilder: FormBuilder, dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guardar\n                        \n                    \n                \n            \n            \n                \nguardar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePhoto\n                        \n                    \n                \n            \n            \n                \nvalidatePhoto(archivo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    archivo\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (formGroup: FormGroup) => void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extensions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['image/png', 'image/jpg', 'image/x-icon', 'image/jpeg']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profilePicture\n                    \n                \n\n                \n                    \n                        getprofilePicture()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { FileValidator } from 'ngx-material-file-input';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { changeProdfilePhotoConfirmation, quitarBackground } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-change-photo',\n  templateUrl: './change-photo.component.html',\n  styleUrls: ['./change-photo.component.scss']\n})\nexport class ChangePhotoComponent implements OnInit {\n\n  extensions = ['image/png', 'image/jpg', 'image/x-icon', 'image/jpeg'];\n  photoProfile: FormGroup;\n\n  constructor(    \n    private router: Router,\n    private userService: UserService,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) { \n          //Cambio de foto de perfil \n    this.photoProfile = this.formBuilder.group({\n      profilePicture: [null, [Validators.required, FileValidator.maxContentSize(10485760)]]\n    }, {\n      validators: this.validatePhoto('profilePicture')\n    });\n    }\n\n  ngOnInit(): void {\n    this.dialogRef.disableClose = true;\n    quitarBackground('dialog-foto-perfil');\n  }\n\n    //Controles sobre la foto de perfil \n    get profilePicture() { return this.photoProfile.get('profilePicture'); }\n\n    validatePhoto(archivo) {\n      return (formGroup: FormGroup) => {\n        const archivo1 = formGroup.get(archivo);\n        if (archivo1.value !== null) {\n          this.extensions.includes(archivo1.value.files[0].type) ?\n            archivo1.setErrors(null) :\n            archivo1.setErrors({ fileInvalid: true });\n        }\n      };\n    }\n\n    close() {\n      this.dialogRef.close(this.data);\n    }\n  \n      //Revisar esta actividad con referencia al back\n  guardar() {\n    this.userService.updatePhoto(this.data.id, this.profilePicture.value.files[0]).subscribe(data => {\n      changeProdfilePhotoConfirmation();\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n        Cambiar Foto de Perfil\n    \n    \n        \n            \n                Seleccionar archivo\n                \n\n                \n                    clear\n                \n\n                \n                    * Solo se aceptan imagenes con extensiones .ico, .jpg, .jpeg y .png\n            \n\n\n        \n        \n            Cancelar\n                close\n            \n            Guardar\n                check\n            \n        \n    \n\n    \n\n    \n                \n                    ./change-photo.component.scss\n                \n                .mat-card {\n    padding: 0px;\n}\n\n.mat-card-content {\n    padding: 10px;\n    margin-bottom: 0%;\n}\n\n.mat-card-actions {\n    text-align: center;\n    padding-bottom: 10px;\n    padding-top: 10px;\n}\n\n.example-container {\n    display: flex;\n    flex-direction: column;\n}\n\n.example-container>* {\n    width: 100%;\n}\n\n.example-full-width {\n    width: 100%;\n    padding: 0px 8px 0px 8px; //Izquierda y Derecha\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Cambiar Foto de Perfil                                            Seleccionar archivo                                                    clear                                                    * Solo se aceptan imagenes con extensiones .ico, .jpg, .jpeg y .png                                        Cancelar                close                        Guardar                check                        '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePhotoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Constants.html":{"url":"classes/Constants.html","title":"class - Constants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Constants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/actionconstants.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                patternTEXT\n                            \n                            \n                                    Static\n                                pattertPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        patternTEXT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /^\\w+([a-zñ A-ZÑ0-9zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙ.-_\\\"\\´\\-\\s\\,]+)?$/\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        pattertPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : \"^(?=.*[0-9])\"\n  + \"(?=.*[a-z])(?=.*[A-Z])\"\n  + \"(?=.*[@#$%^&+=])\"\n  + \"(?=\\\\S+$).{8,15}$\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/utils/actionconstants.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ActionConstants{\n \n  /**\n   * Estas constantes son las que nos ayudan a registrar cada evento que ocurre\n   * sobre el sistema en la bitacora\n   */\n    public static ACTIVO: string = \"ACTIVO\";\n    public static INACTIVO: string = \"INACTIVO\";\n    public static BLOQUEO_POR_EXPIRACIÓN: string = \"BLOQUEO POR EXPIRACIÓN\";\n    public static BLOQUEO_POR_INACTIVIDAD: string = \"BLOQUEO POR INACTIVIDAD\";\n    public static BLOQUEO_POR_INTENTOS_FALLIDOS: string = \"BLOQUEO POR INTENTOS FALLIDOS\";\n    public static BORRO_REGISTRO: string = \"BORRO REGISTRO\";\n    public static CAMBIO_DE_CONTRASEÑA: string = \"CAMBIO DE CONTRASEÑA\";\n    public static CONSULTO_MODULO: string = \"CONSULTO MODULO\";\n    public static EDITO_REGISTRO: string = \"EDITO REGISTRO\";\n    public static FIN_DE_SESIÓN: string = \"FIN DE SESIÓN\";\n    public static INICIO_DE_SESION: string = \"INICIO DE SESIÓN\";\n    public static NUEVO_REGISTRO: string = \"NUEVO REGISTRO\";\n    public static PRIMER_ACCESO: string = \"PRIMER ACCESO\";\n    public static RECUPERAR_CONTRASEÑA: string = \"RECUPERA CONTRASEÑA\";\n    public static RESTAURA_CONTRASEÑA_CADUCA: string = \"RESTAURA CONTRASEÑA CADUCA\";\n    public static SESIÓN_EDITO_USUARIO: string = \"SESIÓN EDITO USUARIO\";\n    public static SOLICITA_RECUPERAR_CONTRASEÑA: string = \"SOLICITA RECUPERAR CONTRASEÑA\";\n\n    public static inactiveStatus = \"624c90f9b9b30b3181e3b94b\";\n\n}\n\nexport const nombreSpinner = 'spinner';\n\nexport class Constants {\n  public static patternTEXT = /^\\w+([a-zñ A-ZÑ0-9zäÄëËïÏöÖüÜáéíóúáéíóúÁÉÍÓÚÂÊÎÔÛâêîôûàèìòùÀÈÌÒÙ.-_\\\"\\´\\-\\s\\,]+)?$/;\n  public static pattertPassword = \"^(?=.*[0-9])\"\n  + \"(?=.*[a-z])(?=.*[A-Z])\"\n  + \"(?=.*[@#$%^&+=])\"\n  + \"(?=\\\\S+$).{8,15}$\";\n}\n\n\n\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateRoleComponent.html":{"url":"components/CreateRoleComponent.html","title":"component - CreateRoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateRoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/roles/create-role/create-role.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-role\n            \n\n            \n                styleUrls\n                ./create-role.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-role.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, router: Router, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/roles/create-role/create-role.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/create-role/create-role.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/create-role/create-role.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/create-role/create-role.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Default value : new Role()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/create-role/create-role.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Role } from 'src/app/shared/models/role';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { RoleService } from 'src/app/shared/services/role.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { ErrorCreate, savedConfirmation } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-create-role',\n  templateUrl: './create-role.component.html',\n  styleUrls: ['./create-role.component.css'],\n})\nexport class CreateRoleComponent implements OnInit {\n  role: Role = new Role();\n  form: FormGroup;\n\n  constructor(\n    private roleService: RoleService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  save() {\n    this.roleService.createRole(this.role).subscribe(\n      (data) => {\n        this.role = new Role();\n        savedConfirmation();\n        this.authService.createActivityLog(ActionConstants.NUEVO_REGISTRO, 'Modulo roles');\n        this.router.navigate(['/dashboard/roles']); //Redirigimos a la lista de roles\n      },\n      (error) => {\n        ErrorCreate('Error al crear el rol');\n        this.router.navigate(['/dashboard/roles']);\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n    \n        Create new role\n    \n\n    \n        \n            \n            \n                \n                    \n                        Rele name\n                         \n                    \n                \n                \n                    \n                \n                \n                    Cancel\n                    Save\n                \n            \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./create-role.component.css\n                \n                .ancho{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create new role                                                                                                    Rele name                                                                                                                                                     Cancel                    Save                                                    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateRoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateStatusComponent.html":{"url":"components/CreateStatusComponent.html","title":"component - CreateStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/status/create-status/create-status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-status\n            \n\n            \n                styleUrls\n                ./create-status.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(statusService: StatusService, router: Router, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/status/create-status/create-status.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/create-status/create-status.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/create-status/create-status.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/create-status/create-status.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                \n                    \n                        Default value : new Status()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/create-status/create-status.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Action } from 'src/app/shared/models/action';\nimport { ActivityLog } from 'src/app/shared/models/activity-log';\nimport { Status } from 'src/app/shared/models/status';\nimport { User } from 'src/app/shared/models/user';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { StatusService } from 'src/app/shared/services/status.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { ErrorCreate, savedConfirmation } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-create-status',\n  templateUrl: './create-status.component.html',\n  styleUrls: ['./create-status.component.css'],\n})\nexport class CreateStatusComponent implements OnInit {\n  status: Status = new Status();\n  form: FormGroup;\n\n\n  constructor(\n    private statusService: StatusService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  save() {\n    this.statusService.createStatus(this.status).subscribe(\n      (data) => {\n        this.status = new Status();\n        savedConfirmation();\n        this.authService.createActivityLog(ActionConstants.NUEVO_REGISTRO,'Modulo status');\n        this.router.navigate(['/dashboard/status']); // Lista de status\n      },\n      (error) =>{\n        ErrorCreate('Error al crear el status');\n        this.router.navigate(['/dashboard/status']);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        Create new role\n    \n\n    \n        \n            \n            \n                \n                    \n                        Status name\n                         \n                    \n                \n                \n                \n                    \n                \n                \n                    Cancel\n                    Save\n                \n            \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./create-status.component.css\n                \n                .ancho{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create new role                                                                                                    Status name                                                                                                                                                                     Cancel                    Save                                                    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateUserComponent.html":{"url":"components/CreateUserComponent.html","title":"component - CreateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/users/create-user/create-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-user\n            \n\n            \n                styleUrls\n                ./create-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                roles\n                            \n                            \n                                showDetails\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadDataFromRoles\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onStrengthChangeds\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    crole\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, formBuilder: FormBuilder, roleService: RoleService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadDataFromRoles\n                        \n                    \n                \n            \n            \n                \nloadDataFromRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStrengthChangeds\n                        \n                    \n                \n            \n            \n                \nonStrengthChangeds(strength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        crole\n                    \n                \n\n                \n                    \n                        getcrole()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/users/create-user/create-user.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Role } from 'src/app/shared/models/role';\nimport { User } from 'src/app/shared/models/user';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { RoleService } from 'src/app/shared/services/role.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { ActionConstants, Constants } from 'src/app/shared/utils/actionconstants';\nimport { ErrorCreate, savedConfirmation } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css'],\n})\nexport class CreateUserComponent implements OnInit {\n  user: User = new User();\n  roles: Role[];\n  form: FormGroup;\n  showDetails: boolean = false;\n\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private roleService: RoleService,\n    private authService: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', [Validators.required, Validators.pattern(Constants.patternTEXT)]],\n      email: ['', Validators.required],\n      phone: ['',Validators.required],\n      crole: ['', Validators.required],\n      password: ['', [Validators.required, Validators.pattern(new RegExp(Constants.pattertPassword))]],\n    });\n  }\n\n  get crole() {\n    return this.form.get('crole');\n  }\n\n  ngOnInit(): void {\n    this.loadDataFromRoles();\n  }\n\n\n  loadDataFromRoles() {\n    return this.roleService\n      .getAllRoles()\n      .subscribe((role) => (this.roles = role));\n  }\n\n  save() {\n    this.userService.createUser(this.form.value, this.crole.value.id).subscribe(\n      (data) => {\n        this.user = new User();\n        savedConfirmation();\n        this.authService.createActivityLog(ActionConstants.NUEVO_REGISTRO, 'Modulo usuarios');\n        this.router.navigate(['/dashboard/users']); // Lista de usuarios\n      },\n      (error) => {\n        ErrorCreate('Error al crear el usuario');\n        this.router.navigate(['/dashboard/users']);\n      }\n    );\n  }\n\n  onStrengthChangeds(strength: number) {\n  }\n}\n\n    \n\n    \n        \n    \n        Create new user\n    \n\n    \n        \n            \n            \n\n                \n                    \n                        Name\n                        \n                    \n                    \n                \n\n                    \n                \n  -->\n\n                \n                    \n                        Last Name\n                        \n                    \n                \n\n\n                \n                    \n                        Username\n                        \n                    \n                \n\n\n                \n                    \n                        Email\n                        \n                    \n                \n\n\n                \n                    \n                        Phone\n                        \n                    \n                \n\n                \n                \n                    \n                        Role\n                         \n                            \n                                {{ role.name }}\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Password\n                        \n                        \n                        {{password.value.length}}/15\n                         \n                         \n                     \n                    \n                \n                                \n                \n                    \n                    validate password\n                    \n                    \n                \n\n\n                \n                \n                    \n                       \n                \n                \n\n\n                \n                    Cancel\n                    Save\n                \n\n\n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./create-user.component.css\n                \n                .ancho{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create new user                                                                                                    Name                                                                                                                      -->                                                            Last Name                                                                                                                        Username                                                                                                                        Email                                                                                                                        Phone                                                                                                                                        Role                                                                                     {{ role.name }}                                                                                                                                                    Password                                                                        {{password.value.length}}/15                                                                                                                                                                                                   validate password                                                                                                                                                                                                       Cancel                    Save                                                    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChangeYourPassword\n                            \n                            \n                                userActivity\n                            \n                            \n                                userInactive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserByStatus\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshUserState\n                            \n                            \n                                setTimeOut\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:mousemove\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:mousemove\n                        \n                    \n                \n            \n            \n                \nwindow:mousemove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:49\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByStatus\n                        \n                    \n                \n            \n            \n                \ngetUserByStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:59\n                \n            \n\n\n            \n                \n                    Si es la primera vez que el usuario ingresa al sistema, entonces debera\nactualizar su password\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshUserState\n                        \n                    \n                \n            \n            \n                \nrefreshUserState()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:mousemove')\n                \n            \n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTimeOut\n                        \n                    \n                \n            \n            \n                \nsetTimeOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChangeYourPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userActivity\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInactive\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/dashboard.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { CloseSession } from 'src/app/shared/utils/alerts';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  userActivity;\n  userInactive: Subject = new Subject();\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n\n    this.getUserByStatus()\n\n    this.setTimeOut();\n    this.userInactive.subscribe(() => {\n      this.authService.logout();\n      this.router.navigate(['login']);\n      CloseSession(\n        'Sesión finalizada',\n        'Por seguridad, hemos cerrado tu sesión'\n      );\n    });\n  }\n\n  ngOnDestroy(): void {\n      console.log('se supone que ya murio')\n  }\n\n  //Validamos el tiempo de inactividad del usuario\n  setTimeOut() {\n    this.userActivity = setTimeout(() => {\n      if (this.authService.logout) {\n        this.userInactive.next(undefined);\n      }\n      //60000 = 1 min\n    }, 900000); //900000 = 15 min\n  }\n\n  //Investigar que mas eventos podemos agregar y como se deben agregar\n  @HostListener('window:mousemove') refreshUserState() {\n    clearTimeout(this.userActivity);\n    this.setTimeOut();\n  }\n\n\n   /**\n     * Si es la primera vez que el usuario ingresa al sistema, entonces debera\n     * actualizar su password\n     */\n  getUserByStatus() {\n    const status = localStorage.getItem('status');\n    if (status == 'primer acceso') {\n        this.ChangeYourPassword(\n        'Este es tu primer ingreso al sistema',\n        'Al ser tu primer ingreso, te pedimos que por favor cambies tu password.'\n      );\n    \n     \n    }\n  }\n\n    //alerta para camgiar el password al primer ingrespo\n    ChangeYourPassword = (title: string, text: string) => {\n      Swal.fire({\n        icon: 'info',\n        title: title,\n        text: text,\n        confirmButtonColor: '#3f51b5',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.router.navigate(['/dashboard/profile']);\n        }\n      });\n    };\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nActivityLogComponent\n\nActivityLogComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nActivityLogComponent->DashboardModule\n\n\n\n\n\nChangePhotoComponent\n\nChangePhotoComponent\n\nDashboardModule -->\n\nChangePhotoComponent->DashboardModule\n\n\n\n\n\nCreateRoleComponent\n\nCreateRoleComponent\n\nDashboardModule -->\n\nCreateRoleComponent->DashboardModule\n\n\n\n\n\nCreateStatusComponent\n\nCreateStatusComponent\n\nDashboardModule -->\n\nCreateStatusComponent->DashboardModule\n\n\n\n\n\nCreateUserComponent\n\nCreateUserComponent\n\nDashboardModule -->\n\nCreateUserComponent->DashboardModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nDashboardModule -->\n\nFooterComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nDashboardModule -->\n\nHomeComponent->DashboardModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nDashboardModule -->\n\nProfileComponent->DashboardModule\n\n\n\n\n\nRolesComponent\n\nRolesComponent\n\nDashboardModule -->\n\nRolesComponent->DashboardModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nDashboardModule -->\n\nSidenavComponent->DashboardModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nDashboardModule -->\n\nStatusComponent->DashboardModule\n\n\n\n\n\nUpdateRoleComponent\n\nUpdateRoleComponent\n\nDashboardModule -->\n\nUpdateRoleComponent->DashboardModule\n\n\n\n\n\nUpdateStatusComponent\n\nUpdateStatusComponent\n\nDashboardModule -->\n\nUpdateStatusComponent->DashboardModule\n\n\n\n\n\nUserUpdateComponent\n\nUserUpdateComponent\n\nDashboardModule -->\n\nUserUpdateComponent->DashboardModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nDashboardModule -->\n\nUsersComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nDashboardModule -->\n\nTokenInterceptor->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActivityLogComponent\n                        \n                        \n                            ChangePhotoComponent\n                        \n                        \n                            CreateRoleComponent\n                        \n                        \n                            CreateStatusComponent\n                        \n                        \n                            CreateUserComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RolesComponent\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            StatusComponent\n                        \n                        \n                            UpdateRoleComponent\n                        \n                        \n                            UpdateStatusComponent\n                        \n                        \n                            UserUpdateComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { dashboardRoutes, DashboardRoutingModule } from './dashboard-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidenavComponent } from './components/sidenav/sidenav.component';\nimport  {  MatPasswordStrengthModule  }  from  '@angular-material-extensions/password-strength' ;\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'src/app/shared/interceptors/token.interceptor';\nimport { ErrorInterceptor } from 'src/app/shared/interceptors/error.interceptor';\nimport { ChangePhotoComponent } from './users/profile/change-photo/change-photo.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    dashboardRoutes,\n    FooterComponent,\n    SidenavComponent,\n    ChangePhotoComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DashboardRoutingModule,\n    SharedModule,\n    MatPasswordStrengthModule\n  ],\n\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    //{ provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ]\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/dashboard/dashboard-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolguardGuard } from 'src/app/shared/guards/rolguard.guard';\nimport { ActivityLogComponent } from './activity-log/activity-log.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { HomeComponent } from './home/home.component';\nimport { CreateRoleComponent } from './roles/create-role/create-role.component';\nimport { RolesComponent } from './roles/roles.component';\nimport { UpdateRoleComponent } from './roles/update-role/update-role.component';\nimport { CreateStatusComponent } from './status/create-status/create-status.component';\nimport { StatusComponent } from './status/status.component';\nimport { UpdateStatusComponent } from './status/update-status/update-status.component';\nimport { CreateUserComponent } from './users/create-user/create-user.component';\nimport { ProfileComponent } from './users/profile/profile.component';\nimport { UserUpdateComponent } from './users/user-update/user-update.component';\nimport { UsersComponent } from './users/users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      { path: '', component: HomeComponent },\n      {\n        path: 'users',\n        component: UsersComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'roles',\n        component: RolesComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'status',\n        component: StatusComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'activity-log',\n        component: ActivityLogComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n\n      {\n        path: 'create-role',\n        component: CreateRoleComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'update-role/:_id',\n        component: UpdateRoleComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n\n      {\n        path: 'create-status',\n        component: CreateStatusComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'update-status/:_id',\n        component: UpdateStatusComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n\n      {\n        path: 'create-user',\n        component: CreateUserComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n      {\n        path: 'update-user/:_id',\n        component: UserUpdateComponent,\n        canActivate: [RolguardGuard],\n        data: {\n          expectedRole: ['ROLE_ADMIN', 'ROLE_CNOC', 'ROLE_PROVE', 'ROLE_CORP'],\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DashboardRoutingModule {}\n\nexport const dashboardRoutes = [\n  DashboardComponent,\n  HomeComponent,\n  UsersComponent,\n  RolesComponent,\n  StatusComponent,\n  ActivityLogComponent,\n  ProfileComponent,\n  CreateRoleComponent,\n  UpdateRoleComponent,\n  CreateStatusComponent,\n  UpdateStatusComponent,\n  CreateUserComponent,\n  UserUpdateComponent,\n];\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMail.html":{"url":"classes/DataMail.html","title":"class - DataMail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dataMail.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/dataMail.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DataMail{\n    email: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/error.interceptor.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/error.interceptor.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, delay, mergeMap, retryWhen } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport {\n  ErrorAlert, ErrorServerAlert, InformationAlert,\n} from '../utils/alerts';\n\nexport const maxRetries = 2;\nexport const delayMs = 2000;\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n \n  constructor(private authService: AuthService, private router: Router) {}\n\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError(err => {\n        if (err?.status === 500 || err?.status === 0) {\n          ErrorServerAlert();\n        } else if (err?.status === 406) {\n          err?.error ? InformationAlert('', err?.error) : ErrorAlert('Error al realizar la operación');\n        } else {\n          ErrorAlert('Error al realizar la operación');\n        }\n        return throwError(err);\n      })\n    );\n  }\n\n\n\n  /**\n   * retryWhen(), que proporciona un mecanismo para reintentar errores en función de criterios personalizados.\n   *  Tenemos tres condiciones para nuestro reintento inteligente:\n   * \n   *  - Reintentar dos veces como máximo\n   *  - Solo reintentar 500 errores internos del servidor\n   *  - Espere antes de volver a intentarlo\n   * \n   * Con estas condiciones, pensamos que le damos a lo que sea que esté causando la excepción una oportunidad \n   * de recuperarse y solo volvemos a intentar los errores que pueden tener éxito si volvemos a intentarlo.\n   */\n\n  // intercept( request: HttpRequest, next: HttpHandler): Observable> {\n  //   return next.handle(request).pipe(\n  //     retryWhen((error) => {\n  //       return error.pipe(\n  //         mergeMap((error, index) => {\n  //           if (index \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/components/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/components/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        EL USO DE ESTE SISTEMA ES EXCLUSIVO PARA LOS FINES AUTORIZADOS POR RADIOMOVIL DIPSA S.A. DE C.V. \n            Y ESTA SUJETO A SER  AUDITADO EN CUALQUIER MOMENTO. TODA LA INFORMACIÓN AQUÍ MANEJADA TIENE CARACTER  DE CONFIDENCIAL\n    \n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \nfooter{\n    position: absolute;\n    bottom: 0px;\n    width: 100%;\n    background-color: rgb(64, 64, 219);\n}\n\nspan{\n    display: flex;\n    justify-content: space-around;\n    top: 15px; left: 235px;\n    float: none !important;\n    text-align: center;\n    color: white;\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: bold;\n    font-size: 90%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            EL USO DE ESTE SISTEMA ES EXCLUSIVO PARA LOS FINES AUTORIZADOS POR RADIOMOVIL DIPSA S.A. DE C.V.             Y ESTA SUJETO A SER  AUDITADO EN CUALQUIER MOMENTO. TODA LA INFORMACIÓN AQUÍ MANEJADA TIENE CARACTER  DE CONFIDENCIAL    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                action\n                            \n                            \n                                activityLog\n                            \n                            \n                                dataMail\n                            \n                            \n                                form\n                            \n                            \n                                ipAddress\n                            \n                            \n                                loading\n                            \n                            \n                                pipe\n                            \n                            \n                                today\n                            \n                            \n                                todayWithPipe\n                            \n                            \n                                user\n                            \n                            \n                                vars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorEmail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendingEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, snackBar: MatSnackBar, authService: AuthService, userService: UserService, activityLogService: ActivityLogService, actionService: ActionsService, statusService: StatusService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityLogService\n                                                  \n                                                        \n                                                                        ActivityLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ActionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        errorEmail\n                        \n                    \n                \n            \n            \n                \nerrorEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendingEmail\n                        \n                    \n                \n            \n            \n                \nsendingEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action\n\n                    \n                \n                \n                    \n                        Default value : new Action()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityLog\n\n                    \n                \n                \n                    \n                        Default value : new ActivityLog()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataMail\n\n                    \n                \n                \n                    \n                        Default value : new DataMail()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DatePipe('en-US')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todayWithPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        vars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/auth/forgot-password/forgot-password.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Data, Router } from '@angular/router';\nimport { Action } from 'src/app/shared/models/action';\nimport { ActivityLog } from 'src/app/shared/models/activity-log';\nimport { DataMail } from 'src/app/shared/models/dataMail';\nimport { User } from 'src/app/shared/models/user';\nimport { ActionsService } from 'src/app/shared/services/actions.service';\nimport { ActivityLogService } from 'src/app/shared/services/activity-log.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { StatusService } from 'src/app/shared/services/status.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { sendingEmailAlerts } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  form: FormGroup;\n  _id: string;\n  loading = false;\n  vars = false;\n  dataMail: DataMail = new DataMail();\n  user: User = new User();\n\n  //Datos para bitacora\n  ipAddress: string = '';\n  action: Action = new Action();\n  activityLog: ActivityLog = new ActivityLog();\n  today: Date = new Date();\n  pipe = new DatePipe('en-US');\n  todayWithPipe = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private authService: AuthService,\n    private userService: UserService,\n    private activityLogService: ActivityLogService,\n    private actionService: ActionsService,\n    private statusService: StatusService\n  ) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  ngOnInit(): void {}\n\n  sendingEmail() {\n    //Consultamos al back end para validar el email\n    this.authService.validateEmail(this.f.email.value).subscribe((mailBool) => {\n        //Despues de validado, consultamos de nuevo y esta vez le manda el email\n        this.authService.checkinEmailToPass(mailBool).subscribe((user: User) => {\n          console.log(\"No llego aqui\")\n            sendingEmailAlerts()\n            this.router.navigate(['validate-code']);\n          });\n\n        // this.loading = true;\n        // //cachamos el Objecto respuesta y lo convertimos en string para obtener su id\n        // this.user._id = JSON.stringify(mailBool['id']);\n        // this._id = JSON.parse(this.user._id);\n        // //Mandamos el id capturado a una consulta para enviarlo a reset password para su edicion\n        // this.userService.getUserById(this._id).subscribe((data) => {\n        //   setTimeout(() => {\n        //     console.log('has llegado hasta aqui');\n        //     this.router.navigate(['reset-password', this._id]);\n        //   }, 1500);\n        // });\n      },\n      (error) => {\n        console.error(error);\n        this.errorEmail();\n      }\n    );\n\n    // this.todayWithPipe = this.pipe.transform(Date.now(), 'yyyy-MM-dd HH:mm:ss');\n\n    // //Mandamos a llamar la actividad buscandola por su nombre\n    // this.actionService\n    //   .getActionByName(ActionConstants.RECUPERAR_CONTRASEÑA.toString())\n    //   .subscribe(\n    //     (action) => {\n    //       // Mandamos a llamar la IP\n\n    //         const username = localStorage.getItem('username');\n\n    //         //Llenamos los datos del registro a bitacora\n    //         this.activityLog.username = username;\n    //         this, (this.activityLog.date = this.todayWithPipe);\n    //         this.activityLog.action = action;\n    //         this.activityLog.change =\n    //           action.description.toString() + 'Modulo usuarios';\n\n    //         //Guardamos los datos\n    //         this.activityLogService\n    //           .create(this.activityLog)\n    //           .subscribe((data) => {\n    //             console.log('Se guardo registro en la bitacora');\n    //           });\n\n    //     },\n    //     (error) => console.log(error)\n    //   );\n  }\n\n  errorEmail() {\n    this.snackBar.open('El email ingresado no existe en la base de datos', '', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n         \n\n        \n            \n\n            RESET PASSWORD\n            \n                Email Address\n                \n            \n\n            \n            \n            Send email\n            \n            \n            Back\n            \n        \n    \n\n    \n\n    \n                \n                    ./forgot-password.component.css\n                \n                .body{\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n    background-image: url(\"../../../../assets/img/fondo.png\");\n    background-size: cover;\n    background-repeat:no-repeat;\n    background-position: center center;\n}\n\n.resetPass{\n    width: 100%;\n    max-width: 330px;\n    text-align: center;\n    background-color: #f5f5f5b2;\n    outline: none;\n    border-radius: 10px;\n}\n\n.ancho{\n    width: 80%;\n}\n\n.button{\n    height: 50px;\n}\n\n.spinner{\n    margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     RESET PASSWORD                            Email Address                                                                Send email                                    Back                        '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/home/home.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        Dashoard\n    \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Dashoard    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                loading\n                            \n                            \n                                trayToLogingCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onStrengthChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    password\n                                \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, snackBar: MatSnackBar, router: Router, authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n            \n                \nerrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/login/login.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/login/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/login/login.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStrengthChanged\n                        \n                    \n                \n            \n            \n                \nonStrengthChanged(strength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/login/login.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trayToLogingCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/auth/login/login.component.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/auth/login/login.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/auth/login/login.component.ts:102\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { ErrorUser, LimitToLogin, UserBlocked, WelcomeAlert } from 'src/app/shared/utils/alerts';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  loading = false;\n\n  trayToLogingCount: number = 0;\n\n  onStrengthChanged(strength: number) {\n    console.log('password strength = ', strength);\n  }\n\n\n  constructor(\n    private fb: FormBuilder,\n    private snackBar: MatSnackBar,\n    private router: Router,\n    private authService: AuthService,\n    private userService: UserService,\n  ) {\n    this.form = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  //Getters\n  get username() {\n    return this.form.get('username');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  ngOnInit(): void {\n    this.form.reset();\n  }\n\n  login() {\n    this.authService.login(this.form.value).subscribe(\n      (res) => {\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('username', res.username);\n        localStorage.setItem('role', res.role.name);\n        localStorage.setItem('status', res.status);\n\n        const userAvailable = localStorage.getItem('status');\n        if (userAvailable === 'inactivo') {\n          localStorage.clear();\n          localStorage.removeItem('token');\n          localStorage.removeItem('username');\n          localStorage.removeItem('role');\n          localStorage.removeItem('status');\n          this.form.reset();\n          this.router.navigate(['login']);\n          UserBlocked();\n        } else {\n          this.loading = true;\n          setTimeout(() => {\n            this.authService.createActivityLog(ActionConstants.INICIO_DE_SESION)\n            this.router.navigate(['dashboard']);\n            const username = localStorage.getItem(\"username\");\n            WelcomeAlert(username);\n          }, 1500);\n        }\n      },\n      (error) => {\n        if(error.status === 401){\n          ErrorUser()\n          this.trayToLogingCount++;\n          if (this.trayToLogingCount === 5) {\n            //Despues de los intentos, capturamos lo el usuario que\n            //esta en el form y lo editamos pasando su estatus a inactivo\n            this.userService\n              .getUsername(this.username.value)\n              .subscribe((user) => {\n                this.userService.blockUser(user.id, user).subscribe((data) => {\n                  console.log('Se ha desactivado la cuenta');\n                  LimitToLogin();\n                });\n              });\n          }\n        }\n\n      }\n    );\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  errorMessage() {\n    this.snackBar.open('Usuario o password incorrecto', '', {\n      duration: 5000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n\n\n        \n            \n            \n\n            QUARKUS APP\n            \n                username\n                \n                *El usuario es requerido\n\n            \n\n\n            \n                password\n                \n                \n                {{password.value.length}}/{{passwordComponent.max}} -->\n                *La contraseña es requerida\n\n            \n \n           \n            \n            \n            \n            login\n            \n            Forgot your password?\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .body{\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n    background-image: url(\"../../../../assets/img/fondo.png\");\n    background-size: cover;\n    background-repeat:no-repeat;\n    background-position: center center;\n}\n\n.login{\n    width: 100%;\n    max-width: 330px;\n    text-align: center;\n    background-color: #f5f5f5b2;\n    outline: none;\n    border-radius: 10px;\n}\n\n.ancho{\n    width: 80%;\n}\n\n.button{\n    height: 50px;\n}\n\n.spinner{\n    margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                QUARKUS APP                            username                                *El usuario es requerido                                        password                                                {{password.value.length}}/{{passwordComponent.max}} -->                *La contraseña es requerida                                                                        login                        Forgot your password?                        '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailReq.html":{"url":"classes/MailReq.html","title":"class - MailReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/mailReq.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accesCode\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accesCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/mailReq.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/mailReq.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MailReq{\n    username: string;\n    accesCode: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Menu.html":{"url":"interfaces/Menu.html","title":"interface - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/menu.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            redirect\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirect:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Menu{\n    name: string;\n    redirect: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMessage\n                            \n                            \n                                clearMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMessage\n                        \n                    \n                \n            \n            \n                \naddMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearMessages\n                        \n                    \n                \n            \n            \n                \nclearMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/message.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/message.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  \n  message : string[] = [];\n\n  addMessage(message: string){\n    this.message.push(message);\n  }\n\n  clearMessages(){\n    this.message = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundPageComponent.html":{"url":"components/NotFoundPageComponent.html","title":"component - NotFoundPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/not-found-page/not-found-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found-page\n            \n\n            \n                styleUrls\n                ./not-found-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userActivity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setTimeOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/not-found-page/not-found-page.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/not-found-page/not-found-page.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTimeOut\n                        \n                    \n                \n            \n            \n                \nsetTimeOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/not-found-page/not-found-page.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userActivity\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/components/not-found-page/not-found-page.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent implements OnInit {\n  userActivity;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.setTimeOut();\n  }\n\n    //Validamos el tiempo de inactividad del usuario\n    setTimeOut() {\n      this.userActivity = setTimeout(() => {\n        this.router.navigate(['login']);\n      }, 15000); //15 segundos\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n                \n                    ./not-found-page.component.css\n                \n                .body{\n\n    background-image: url(\"../../../assets/img/404NotFound.png\");\n\n}\n\n.login{\n    width: 100%;\n    max-width: 330px;\n    text-align: center;\n    background-color: #f5f5f5b2;\n    outline: none;\n    border-radius: 10px;\n}\n\n.mat-card{\n    display: flex;\n    justify-content: center;\n    height: 30%;\n    align-items: center;\n    background-repeat:no-repeat;\n    background-position: center center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/users/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                checked\n                            \n                            \n                                color\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                form\n                            \n                            \n                                formPassword\n                            \n                            \n                                showDetails\n                            \n                            \n                                updateProfileMessageConfirmation\n                            \n                            \n                                urlEndPoint\n                            \n                            \n                                user\n                            \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInfo\n                            \n                            \n                                IsEquals\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onStrengthChangeds\n                            \n                            \n                                openDialogPerfil\n                            \n                            \n                                updateProfile\n                            \n                            \n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newPassword\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, formBuilder: FormBuilder, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \ngetUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsEquals\n                        \n                    \n                \n            \n            \n                \nIsEquals(pNewPassword, pConfirmPassword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pNewPassword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pConfirmPassword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (formGroup: FormGroup) => void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:87\n                \n            \n\n\n            \n                \n                    Al iniciar el componente, nos carga\nla informacion del usuario que se encuentra logeado\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onStrengthChangeds\n                        \n                    \n                \n            \n            \n                \nonStrengthChangeds(strength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialogPerfil\n                        \n                    \n                \n            \n            \n                \nopenDialogPerfil()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \nupdateUserPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThemePalette\n\n                    \n                \n                \n                    \n                        Default value : 'accent'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfileMessageConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        urlEndPoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('username')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/profile/profile.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newPassword\n                    \n                \n\n                \n                    \n                        getnewPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/users/profile/profile.component.ts:66\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/shared/models/user';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { Constants } from 'src/app/shared/utils/actionconstants';\nimport { updatedConfirmation, updatedProfile } from 'src/app/shared/utils/alerts';\nimport Swal from 'sweetalert2';\nimport { FileValidator } from 'ngx-material-file-input';\nimport { environment } from 'src/environments/environment';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePhotoComponent } from './change-photo/change-photo.component';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: User = new User();\n  form: FormGroup;\n  formPassword: FormGroup;\n  userProfile = localStorage.getItem('username');\n  _id: string;\n\n  color: ThemePalette = 'accent';\n  checked = false;\n  showDetails: boolean = false;\n  urlEndPoint = environment.apiUrl;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog\n  ) {\n    //formulario de informacion del perfil\n    this.form = this.formBuilder.group({\n      name: [''],\n      lastName: [''],\n      username: [''],\n      email: [''],\n      phone: [''],\n    });\n\n    //formulario de cambio de password\n    this.formPassword = this.formBuilder.group({\n      newPassword: ['', [Validators.required, Validators.pattern(new RegExp(Constants.pattertPassword))]],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validators: this.IsEquals('newPassword', 'confirmPassword')\n    });\n\n\n  }\n\n  onStrengthChangeds(strength: number) {\n  }\n\n    // Gets para devolver los valores de los campos del fomulario de cambiar la contraseña\n    get newPassword() {\n      return this.formPassword.get('newPassword');\n    }\n    get confirmPassword() {\n      return this.formPassword.get('confirmPassword');\n    }\n\n    IsEquals(pNewPassword, pConfirmPassword) {\n      return (formGroup: FormGroup) => {\n        const pass1Control = formGroup.get(pNewPassword);\n        const pass2Control = formGroup.get(pConfirmPassword);\n        if (pass1Control.value === pass2Control.value) {\n          pass2Control.setErrors(null);\n        } else {\n          pass2Control.setErrors({ noEsIgual: true });\n        }\n      };\n    }\n  \n\n  /**\n   * Al iniciar el componente, nos carga\n   * la informacion del usuario que se encuentra logeado\n   */\n  ngOnInit(): void {\n    this.getUserInfo();\n  }\n\n  updateUserPassword(){\n    const username = localStorage.getItem('username');\n    this.userService.getUsername(username).subscribe(resp => {\n      this.userService.updatePassword(resp.id, this.newPassword.value, this.confirmPassword.value, resp).subscribe(data => {\n        updatedConfirmation()\n        this.formPassword.reset();\n        this.router.navigate(['dashboard']);\n      });\n    });\n  }\n\n\n\n  updateProfile() {\n    const username = localStorage.getItem('username');\n    this.userService.getUsername(username).subscribe(user => {\n      this.userService.updateProfile(user.id, this.user).subscribe((data) => {\n        updatedProfile() //Alerta\n      });\n    });\n  }\n\n  //alerta de informes\n  updateProfileMessageConfirmation = () => {\n    Swal.fire({\n      icon: 'info',\n      title: 'Actualizacion de perfil',\n      text: 'Esta apunto de actualizar la informacion de su perfil',\n      confirmButtonColor: '#3f51b5',\n      cancelButtonColor: '#3f51b5',\n    }).then((result) => {\n      if (result.isConfirmed) {\n       this.updateProfile();\n       this.getUserInfo();\n      }\n    });\n  };\n\n\n\n  getUserInfo(){\n    this.userService.getUsername(this.userProfile).subscribe((formData) => {\n      this.user = formData;\n    }),\n      (error) => {\n        console.log(error);\n      };\n  }\n\n\n  openDialogPerfil(): void {\n    const dialogRef = this.dialog.open(ChangePhotoComponent, {\n      maxWidth: '500px',\n      maxHeight: '600px',\n      data: this.user,\n      id: 'dialog-foto-perfil',\n      autoFocus: false\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.user.profilePicture = result.foto;\n      // if (this.usuario.id === this.authService.usuario.id) {\n      //   this.topnavService.notificarFoto.emit(result.foto);\n      // }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n\n        \n            \n\n                \n                    \n                    \n                        add_a_photo\n                    \n                \n\n                \n                    \n                \n                    \n                        \n                        \n                            \n                                Name\n                                \n                            \n                        \n\n                        \n                            \n                                Last Name\n                                \n                            \n                        \n\n\n                        \n                            \n                                Username\n                                \n                            \n                        \n\n\n                        \n                            \n                                Email\n                                \n                            \n                        \n\n\n                        \n                            \n                                Phone\n                                \n                            \n                        \n\n\n                        \n                        \n                            Update your info\n                        \n                        \n\n                    \n                    \n                \n            \n        \n\n\n\n        \n            \n\n                \n                    \n                    \n\n                        \n\n                            \n                                New Password\n                                \n                                \n                                    {{newPassword.value.length}}/15\n\n                                \n                                \n                                \n                            \n                        \n\n                        \n                            \n                                Confirm Password\n                                \n                                    {{newPassword.value.length}}/15\n                                \n                                \n                                Las contraseñas no coinciden\n                            \n                        \n\n\n                        \n                            Update password\n                        \n\n                        \n                            \n                            validate password\n                            \n                            \n                        \n\n                        \n                            \n                               \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                .ancho{\n    width: 90%;\n}\n\n.example-stretched-tabs {\n    max-width: 800px;\n    background-color: white;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                add_a_photo                                                                                                                                                                                                                        Name                                                                                                                                                                        Last Name                                                                                                                                                                        Username                                                                                                                                                                        Email                                                                                                                                                                        Phone                                                                                                                                                                Update your info                                                                                                                                                                                                                                                                                            New Password                                                                                                    {{newPassword.value.length}}/15                                                                                                                                                                                                                                        Confirm Password                                                                    {{newPassword.value.length}}/15                                                                                                Las contraseñas no coinciden                                                                                                        Update password                                                                                                        validate password                                                                                                                                                                                                                                                       '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                action\n                            \n                            \n                                activityLog\n                            \n                            \n                                dataMail\n                            \n                            \n                                email\n                            \n                            \n                                formPass\n                            \n                            \n                                ipAddress\n                            \n                            \n                                pipe\n                            \n                            \n                                today\n                            \n                            \n                                todayWithPipe\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Cancel\n                            \n                            \n                                gotoList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendMailConfirmation\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    password\n                                \n                                \n                                    confirm\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userService: UserService, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Cancel\n                        \n                    \n                \n            \n            \n                \nCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gotoList\n                        \n                    \n                \n            \n            \n                \ngotoList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMailConfirmation\n                        \n                    \n                \n            \n            \n                \nsendMailConfirmation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:62\n                \n            \n\n\n            \n                \n                    Hay que validar este metodo, esta buscando al usuario por su email correctamente\npero detecta como indefinido lo que mandamos despues\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action\n\n                    \n                \n                \n                    \n                        Default value : new Action()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityLog\n\n                    \n                \n                \n                    \n                        Default value : new ActivityLog()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataMail\n\n                    \n                \n                \n                    \n                        Default value : new DataMail()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formPass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DatePipe('en-US')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todayWithPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:49\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirm\n                    \n                \n\n                \n                    \n                        getconfirm()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/auth/reset-password/reset-password.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Action } from 'src/app/shared/models/action';\nimport { ActivityLog } from 'src/app/shared/models/activity-log';\nimport { DataMail } from 'src/app/shared/models/dataMail';\nimport { User } from 'src/app/shared/models/user';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport {\n  ErrorCreatePassword,\n  ErrorUpdatePassword,\n} from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  _id: string;\n  formPass: FormGroup;\n  user: User = new User();\n  dataMail: DataMail = new DataMail();\n  email: string;\n\n  //Datos para bitacora\n  ipAddress: string = '';\n  action: Action = new Action();\n  activityLog: ActivityLog = new ActivityLog();\n  today: Date = new Date();\n  pipe = new DatePipe('en-US');\n  todayWithPipe = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.formPass = this.formBuilder.group({\n      password: ['', Validators.required],\n      confirm: ['', Validators.required],\n    });\n  }\n\n  get password() {\n    return this.formPass.get('password');\n  }\n  get confirm() {\n    return this.formPass.get('confirm');\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Hay que validar este metodo, esta buscando al usuario por su email correctamente\n   * pero detecta como indefinido lo que mandamos despues\n   */\n  sendMailConfirmation() {\n    const user = localStorage.getItem('username');\n    this.userService.getUsername(user).subscribe(\n      (data) => {\n        this.authService.validateEmail(data.email).subscribe((info) => {\n         // console.log('esta es la info: ' + info);\n          this.email = info.email;\n          //console.log('Este es el mail capturado: ' + this.email);\n          this.authService.infoToMailSending(this.email).subscribe((check) => {\n           // console.log('Se mando correo de confirmacion');\n          });\n        });\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  updatePassword(): void {\n    if (this.password.value === this.confirm.value) {\n      const user = localStorage.getItem('username');\n      this.userService.getUsername(user).subscribe((data) => {\n        this.user = data;\n        this.userService\n          .updatePassword(\n            data.id,\n            this.password.value,\n            this.confirm.value,\n            this.user\n          )\n          .subscribe(\n            (data: User) => {\n              //console.log('el password ha sido actualizado correctamente', data);\n              this.user = new User();\n              this.sendMailConfirmation();\n              this.authService.createActivityLog(ActionConstants.CAMBIO_DE_CONTRASEÑA,'Modulo usuarios');\n              this.gotoList()\n              this.Cancel();\n            },\n            (error) => ErrorUpdatePassword()\n          );\n      });\n    } else {\n      this.password.setErrors({ noEsIgual: true });\n      ErrorCreatePassword();\n    }\n  }\n\n  gotoList() {\n    this.router.navigate(['login']);\n  }\n\n  Cancel() {\n    this.authService.sessionKilled();\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n\n    \n        \n\n        RESET PASSWORD\n        \n            New Password\n            \n        \n\n        \n            Confirm Password\n            \n        \n\n        \n        \n        Change password\n        \n        \n        Cancel\n        \n    \n    \n\n\n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                .body{\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n    background-image: url(\"../../../../assets/img/fondo.png\");\n    background-size: cover;\n    background-repeat:no-repeat;\n    background-position: center center;\n}\n\n.resetPass{\n    width: 100%;\n    max-width: 330px;\n    text-align: center;\n    background-color: #f5f5f5b2;\n    outline: none;\n    border-radius: 10px;\n}\n\n.ancho{\n    width: 80%;\n}\n\n.button{\n    height: 50px;\n}\n\n.spinner{\n    margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                RESET PASSWORD                    New Password                                        Confirm Password                                            Change password                        Cancel                '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/role.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/role.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/role.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Role{\n    _id: number;\n    name: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                getAllRoles\n                            \n                            \n                                getRole\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/role.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(role: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRoles\n                        \n                    \n                \n            \n            \n                \ngetAllRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRole\n                        \n                    \n                \n            \n            \n                \ngetRole(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:47\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(_id: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/role.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/role.service.ts:55\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Role } from '../models/role';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n\n  constructor(\n    private httpClient: HttpClient,\n    private messageService: MessageService\n  ) {}\n\n  getAllRoles(): Observable {\n    return this.httpClient.get(`${environment.apiUrl}/roles`);\n  }\n\n  getRole(_id: string): Observable {\n    return this.httpClient.get(`${environment.apiUrl}/roles/${_id}`);\n  }\n\n\n  createRole(role: Role): Observable {\n    return this.httpClient\n      .post(`${environment.apiUrl}/roles`, role, this.httpOptions)\n      .pipe(\n        tap((newRole: Role) => this.log(`Added new role with id=${role._id}`)),\n        catchError(this.handleError('add role'))\n      );\n  }\n\n  updateRole(_id: string, value: any): Observable {\n    return this.httpClient.put(`${environment.apiUrl}/roles/${_id}`, value);\n  }\n\n\n  deleteRole(_id: string): Observable{\n    return this.httpClient.delete(`${environment.apiUrl}/roles/${_id}`, {responseType: 'text'});\n  }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' }),\n  };\n\n  private log(message: string) {\n    this.messageService.addMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RolesComponent.html":{"url":"components/RolesComponent.html","title":"component - RolesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RolesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/roles/roles.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-roles\n            \n\n            \n                styleUrls\n                ./roles.component.css\n            \n\n\n\n            \n                templateUrl\n                ./roles.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteRole\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/roles/roles.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/roles.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/roles.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/roles.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/roles.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/roles.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'name', 'update', 'delete']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/roles.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/roles.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { RoleService } from 'src/app/shared/services/role.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css'],\n})\nexport class RolesComponent implements OnInit {\n  //Para que aparezca en la tabla, tiene que estar aqui primero el campo para que hagan match\n  displayedColumns: string[] = ['id', 'name', 'update', 'delete'];\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private roleService: RoleService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.roleService.getAllRoles().subscribe((info) => {\n      this.dataSource.data = info\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  //Accion para eliminar el rol\n  deleteRole(_id: string) {\n    this.roleService.deleteRole(_id).subscribe(\n      (data) => {\n        this.loadData();\n        this.authService.createActivityLog(ActionConstants.BORRO_REGISTRO, 'Modulo roles');\n      },\n      (error) => console.log(error)\n    );      \n  }\n\n  //Editar la informacion del rol\n  updateRole(_id: string) {\n    this.router.navigate(['/dashboard/update-role', _id]);\n  }\n}\n\n    \n\n    \n        \n    \n        Roles\n        \n            \n                Add New Role\n            \n    \n\n    \n\n\n    \n\n        \n        \n            ID\n            {{element.id}}\n        \n\n\n        \n        \n            Name\n            {{element.name}}\n        \n\n        \n             \n            \n              \n                Update\n              \n            \n          \n\n        \n             \n            \n              \n                Delete\n              \n            \n          \n\n\n\n        \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./roles.component.css\n                \n                .demo-table {\n    width: 100%;\n  }\n  \n  .demo-button-container {\n    padding-bottom: 16px;\n  }\n  \n  .demo-button + .demo-button {\n    margin-right: 8px;\n  }\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Roles                                    Add New Role                                                    ID            {{element.id}}                                    Name            {{element.name}}                                                                       Update                                                                                                   Delete                                                            '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RolesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolguardGuard.html":{"url":"guards/RolguardGuard.html","title":"guard - RolguardGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolguardGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/rolguard.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                isAuthorized\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/rolguard.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/rolguard.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isAuthorized\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthorized(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/guards/rolguard.guard.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolguardGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService){}\n\n  canActivate(route: ActivatedRouteSnapshot){\n\n    /**\n     * Validacion de acceso a las rutas por Rol de usuario\n     * Esto lo comparamos con la variable definida en la ruta \n     */\n\n    return this.isAuthorized(route);\n  }\n  \n  private isAuthorized(route: ActivatedRouteSnapshot): boolean{\n    const roles = localStorage.getItem('role');\n    const expectedRole = route.data.expectedRole;\n    return (expectedRole.includes(roles)) ? true : false;\n\n  }\n  \n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n//Angular material\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatPasswordStrengthModule } from '@angular-material-extensions/password-strength';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatTableModule,\n    MatCardModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatListModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatPasswordStrengthModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MaterialFileInputModule\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatIconModule,\n    HttpClientModule,\n    MatTableModule,\n    MatCardModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatListModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatPasswordStrengthModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MaterialFileInputModule\n  ],\n\n  providers: [],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/components/sidenav/sidenav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _mobileQueryListener\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                fillerContent\n                            \n                            \n                                mobileQuery\n                            \n                            \n                                shouldRun\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                    MediaMatcher\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _mobileQueryListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fillerContent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Array.from({ length: 50 }, () => ``)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaQueryList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldRun\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/components/sidenav/sidenav.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { MediaMatcher } from '@angular/cdk/layout';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css'],\n})\nexport class SidenavComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  fillerContent = Array.from({ length: 50 }, () => ``);\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    private router: Router,\n    public authService: AuthService\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  shouldRun = true;\n\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                menu\n            \n            Quarkus app\n          \n\n            \n            \n                account_circle \n            \n            \n                logout\n            \n        \n\n        \n            \n                \n\n                    \n                        home home\n                    \n\n                    \n                        supervisor_account users\n                    \n\n                    \n                        account_balance roles\n                    \n\n                    \n                        remove_red_eye status\n                    \n                    \n                        file_copyactivity log\n                    \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n    Please open on Stackblitz to see result\n\n    \n\n    \n                \n                    ./sidenav.component.css\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n\n.example-is-mobile .example-toolbar {\n  position: fixed;\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\n  z-index: 2;\n}\n\nh1.example-app-name {\n  margin-left: 8px;\n}\n\n.example-sidenav-container {\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\n     causes `` to act as our scrolling element for desktop layouts. */\n  flex: 1;\n}\n\n.example-is-mobile .example-sidenav-container {\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\n     `` to be our scrolling element for mobile layouts. */\n  flex: 1 0 auto;\n}\n\nmat-sidenav{\n  width: 10%;\n}\n\n.fondo{\n  background-color: rgb(71, 76, 82);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        menu                        Quarkus app                                                  account_circle                                         logout                                                                                                    home home                                                                supervisor_account users                                                                account_balance roles                                                                remove_red_eye status                                                                file_copyactivity log                                                                                                                        Please open on Stackblitz to see result'\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Status.html":{"url":"classes/Status.html","title":"class - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/status.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                actionsDate\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/status.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionsDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/status.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/status.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Status{\n    _id: number;\n    name: string;\n    actionsDate: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/status/status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-status\n            \n\n            \n                styleUrls\n                ./status.component.css\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                activityLog\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                pipe\n                            \n                            \n                                today\n                            \n                            \n                                todayWithPipe\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStatus\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(statusService: StatusService, router: Router, activityLogService: ActivityLogService, actionService: ActionsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/status/status.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activityLogService\n                                                  \n                                                        \n                                                                        ActivityLogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ActionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteStatus\n                        \n                    \n                \n            \n            \n                \ndeleteStatus(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/status.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/status.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/status.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/status.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action\n\n                    \n                \n                \n                    \n                        Default value : new Action()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityLog\n\n                    \n                \n                \n                    \n                        Default value : new ActivityLog()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['id', 'name', 'date', 'update', 'delete']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DatePipe('en-US')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todayWithPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/status.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { Action } from 'src/app/shared/models/action';\nimport { ActivityLog } from 'src/app/shared/models/activity-log';\nimport { User } from 'src/app/shared/models/user';\nimport { ActionsService } from 'src/app/shared/services/actions.service';\nimport { ActivityLogService } from 'src/app/shared/services/activity-log.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { StatusService } from 'src/app/shared/services/status.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css'],\n})\nexport class StatusComponent implements OnInit {\n  //Objetos del componente de tabla\n  displayedColumns: string[] = ['id', 'name', 'date', 'update', 'delete'];\n  dataSource = new MatTableDataSource();\n\n  //Instancias de clases\n  action: Action = new Action();\n  activityLog: ActivityLog = new ActivityLog();\n  user: User = new User();\n\n  today: Date = new Date();\n  pipe = new DatePipe('en-US');\n  todayWithPipe = null;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n  constructor(\n    private statusService: StatusService,\n    private router: Router,\n    private activityLogService: ActivityLogService,\n    private actionService: ActionsService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  deleteStatus(_id: string) {\n    this.statusService.deleteStatus(_id).subscribe(\n      (data: any) => {\n        this.authService.createActivityLog(ActionConstants.BORRO_REGISTRO, 'Modulo status');\n        this.loadData();\n      },\n      (error) => console.log(error));\n  }\n\n  loadData() {\n    this.statusService.getAllStatus().subscribe((info: any) => {\n      this.dataSource.data = info;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  updateStatus(_id: string) {\n    this.router.navigate(['/dashboard/update-status', _id]);\n  }\n\n}\n\n    \n\n    \n        \n    \n        Status\n        \n            \n                Add New Status\n            \n            \n              \n            \n    \n\n    \n\n\n    \n\n        \n        \n            ID\n            {{element.id}}\n        \n\n\n        \n        \n            Name\n            {{element.name}}\n        \n\n        \n        \n            Date creation\n            {{element.actionsDate}}\n        \n\n        \n             \n            \n              \n                Update\n              \n            \n          \n\n        \n             \n            \n              \n                Delete\n              \n            \n          \n\n\n\n        \n        \n    \n\n    \n\n\n\n    \n\n    \n                \n                    ./status.component.css\n                \n                .demo-table {\n    width: 100%;\n  }\n  \n  .demo-button-container {\n    padding-bottom: 16px;\n  }\n  \n  .demo-button + .demo-button {\n    margin-right: 8px;\n  }\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Status                                    Add New Status                                                                                          ID            {{element.id}}                                    Name            {{element.name}}                                    Date creation            {{element.actionsDate}}                                                                       Update                                                                                                   Delete                                                            '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/status.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStatus\n                            \n                            \n                                deleteStatus\n                            \n                            \n                                getAllStatus\n                            \n                            \n                                getStatusById\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/status.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createStatus\n                        \n                    \n                \n            \n            \n                \ncreateStatus(status: Status)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Status\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteStatus\n                        \n                    \n                \n            \n            \n                \ndeleteStatus(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllStatus\n                        \n                    \n                \n            \n            \n                \ngetAllStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatusById\n                        \n                    \n                \n            \n            \n                \ngetStatusById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:49\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(_id: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/status.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/status.service.ts:57\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Status } from '../models/status';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusService {\n  constructor(\n    private httpClient: HttpClient,\n    private messageService: MessageService\n  ) {}\n\n\n  getAllStatus(): Observable {\n    return this.httpClient.get(`${environment.apiUrl}/status`);\n  }\n\n  getStatusById(_id: string): Observable {\n    return this.httpClient.get(`${environment.apiUrl}/status/${_id}`);\n  }\n\n\n  createStatus(status: Status): Observable {\n    return this.httpClient\n      .post(`${environment.apiUrl}/status`, status, this.httpOptions)\n      .pipe(\n        tap((newStatus: Status) =>\n          this.log(`Added new Status with id=${status._id}`)\n        ),\n        catchError(this.handleError('add status'))\n      );\n  }\n\n  updateStatus(_id: string, value: any): Observable {\n    return this.httpClient.put(`${environment.apiUrl}/status/${_id}`, value);\n  }\n\n  deleteStatus(_id: string): Observable {\n    return this.httpClient.delete(`${environment.apiUrl}/status/${_id}`, {\n      responseType: 'text',\n    });\n  }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' }),\n  };\n\n  private log(message: string) {\n    this.messageService.addMessage(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/token.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filteredUrlPatterns\n                            \n                            \n                                    Private\n                                panddingRequest\n                            \n                            \n                                    Private\n                                pendingRequestStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handler401Error\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                shouldByPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/token.interceptor.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handler401Error\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler401Error()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/token.interceptor.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/token.interceptor.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldByPass\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldByPass(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptors/token.interceptor.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filteredUrlPatterns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RegExp[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/interceptors/token.interceptor.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        panddingRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/interceptors/token.interceptor.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pendingRequestStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/interceptors/token.interceptor.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { catchError, finalize, map } from 'rxjs/operators';\nimport {\n  NavigationCancel,\n  NavigationEnd,\n  NavigationError,\n  NavigationStart,\n  Router,\n} from '@angular/router';\nimport { ExpiredSession } from '../utils/alerts';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  private panddingRequest = 0;\n  private filteredUrlPatterns: RegExp[] = [];\n  private pendingRequestStatus: ReplaySubject =\n    new ReplaySubject(1);\n\n\n  constructor(private authService: AuthService, private router: Router) {\n    // debugger;\n    router.events.subscribe((event) => {\n      if (event instanceof NavigationStart) {\n        this.pendingRequestStatus.next(true);\n      }\n      if (\n        event instanceof NavigationError ||\n        event instanceof NavigationEnd ||\n        event instanceof NavigationCancel\n      ) {\n        this.pendingRequestStatus.next(false);\n      }\n    });\n  }\n\n  private shouldByPass(url: string): boolean {\n    return this.filteredUrlPatterns.some((e) => {\n      return e.test(url);\n    });\n  }\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    //debugger;\n    const shouldByPass = this.shouldByPass(request.url);\n    const token: string = localStorage.getItem('token');\n\n    if (token) {\n      request = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + token),\n      });\n    }\n\n    if (!request.headers.has('Content-Type')) {\n      request = request.clone({\n        headers: request.headers.set('Content-Type', 'application/json'),\n      });\n    }\n\n    request = request.clone({\n      headers: request.headers.set('Accept', 'application/json'),\n    });\n\n    if (!shouldByPass) {\n      this.panddingRequest++;\n\n      if (1 === this.panddingRequest) {\n        this.pendingRequestStatus.next(true);\n      }\n    }\n\n    return next.handle(request).pipe(\n      map((event) => {\n        return event;\n      }),\n      catchError((error) => {\n        //debugger;\n\n        if (error.status === 401) {\n          this.handler401Error();\n          ExpiredSession();\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n\n\n        return throwError(error);\n      }),\n      finalize(() => {\n        //debugger;\n        if (!shouldByPass) {\n          this.panddingRequest--;\n          if (0 === this.panddingRequest) {\n            this.pendingRequestStatus.next(false);\n          }\n        }\n      })\n    );\n  }\n\n  private handler401Error(): Observable {\n    this.authService.logout();\n    return throwError('error 401');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateRoleComponent.html":{"url":"components/UpdateRoleComponent.html","title":"component - UpdateRoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateRoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/roles/update-role/update-role.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-role\n            \n\n            \n                styleUrls\n                ./update-role.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-role.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                form\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, roleService: RoleService, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/roles/update-role/update-role.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/update-role/update-role.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/roles/update-role/update-role.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/update-role/update-role.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/update-role/update-role.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/roles/update-role/update-role.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Role } from 'src/app/shared/models/role';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { RoleService } from 'src/app/shared/services/role.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { changeConfirmation, ErrorUpdate } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-update-role',\n  templateUrl: './update-role.component.html',\n  styleUrls: ['./update-role.component.css'],\n})\nexport class UpdateRoleComponent implements OnInit {\n  _id: string;\n  role: Role;\n  form: FormGroup;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private roleService: RoleService,\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.role = new Role();\n    this._id = this.route.snapshot.params['_id'];\n    this.roleService.getRole(this._id).subscribe(\n      (data) => {\n        this.role = data;\n      },\n      (error) => console.log(error)\n    );\n  }\n\n\n  updateRole() {\n    this.roleService.updateRole(this._id, this.role).subscribe(\n      (data) => {\n        console.log(data);\n        this.role = new Role();\n        changeConfirmation();\n        this.authService.createActivityLog(ActionConstants.EDITO_REGISTRO, 'Modulo roles');\n        this.router.navigate(['/dashboard/roles']);\n      },\n      (error) => {\n        ErrorUpdate('Error al editar el rol');\n        this.router.navigate(['/dashboard/roles']);\n      }\n    );\n\n  }\n}\n\n    \n\n    \n        \n    \n        Update role\n    \n\n    \n        \n            \n            \n                \n                    \n                        Rele name\n                         \n                    \n                \n                \n                    \n                \n                \n                    Cancel\n                    Update\n                \n            \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./update-role.component.css\n                \n                .ancho{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Update role                                                                                                    Rele name                                                                                                                                                     Cancel                    Update                                                    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateRoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateStatusComponent.html":{"url":"components/UpdateStatusComponent.html","title":"component - UpdateStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/status/update-status/update-status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-status\n            \n\n            \n                styleUrls\n                ./update-status.component.css\n            \n\n\n\n            \n                templateUrl\n                ./update-status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                form\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, statusService: StatusService, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/status/update-status/update-status.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusService\n                                                  \n                                                        \n                                                                        StatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/update-status/update-status.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/status/update-status/update-status.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/update-status/update-status.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/update-status/update-status.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/status/update-status/update-status.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Status } from 'src/app/shared/models/status';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { StatusService } from 'src/app/shared/services/status.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { changeConfirmation, ErrorUpdate } from 'src/app/shared/utils/alerts';\n\n@Component({\n  selector: 'app-update-status',\n  templateUrl: './update-status.component.html',\n  styleUrls: ['./update-status.component.css'],\n})\nexport class UpdateStatusComponent implements OnInit {\n  _id: string;\n  status: Status;\n  form: FormGroup;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private statusService: StatusService,\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.status = new Status();\n    this._id = this.route.snapshot.params['_id'];\n\n    this.statusService.getStatusById(this._id).subscribe(\n      (data) => {\n        this.status = data;\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  updateStatus() {\n    this.statusService.updateStatus(this._id, this.status).subscribe(\n      (data) => {\n        console.log(data);\n        this.status = new Status();\n        changeConfirmation();\n        this.authService.createActivityLog(ActionConstants.EDITO_REGISTRO, 'Modulo status');\n        this.router.navigate(['/dashboard/status']);\n      },\n      (error) => {\n        ErrorUpdate('Error al editar el status');\n        this.router.navigate(['/dashboard/status']);\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n    \n        Update status\n    \n\n    \n        \n            \n            \n                \n                    \n                        Rele name\n                         \n                    \n                \n                \n                    \n                \n                \n                    Cancel\n                    Update\n                \n            \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./update-status.component.css\n                \n                .ancho{\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Update status                                                                                                    Rele name                                                                                                                                                     Cancel                    Update                                                    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                lastName\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                profilePicture\n                            \n                            \n                                role\n                            \n                            \n                                status\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/user.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profilePicture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/models/user.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"./role\";\nimport { Status } from \"./status\";\n\nexport class User{\n\n    constructor(){}\n\n    _id: string;\n    name: string;\n    lastName: string;\n    username: string;\n    email: string;\n    phone: string;\n    role: Role\n    password: string;\n    status: string;\n    profilePicture: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activeDeactivateUser\n                            \n                            \n                                blockUser\n                            \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                getUserById\n                            \n                            \n                                getUsername\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updatePhoto\n                            \n                            \n                                updateProfile\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpClient: HttpClient, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        activeDeactivateUser\n                        \n                    \n                \n            \n            \n                \nactiveDeactivateUser(_id: string, status: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockUser\n                        \n                    \n                \n            \n            \n                \nblockUser(_id: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(user: User, _id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsername\n                        \n                    \n                \n            \n            \n                \ngetUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(_id: string, password: string, confirmPass: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    confirmPass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePhoto\n                        \n                    \n                \n            \n            \n                \nupdatePhoto(id: any, archivo: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    archivo\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(_id: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(_id: string, user: any, idRole: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idRole\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/user.service.ts:76\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private router: Router,\n    private httpClient: HttpClient,\n    private messageService: MessageService\n  ) {}\n\n  getAllUsers(): Observable {\n    return this.httpClient.get(`${environment.apiUrl}/users`);\n  }\n\n  getUserById(_id: string): Observable {\n    return this.httpClient.get(`${environment.apiUrl}/users/${_id}`);\n  }\n\n  getUsername(username: string): Observable{\n    return this.httpClient.get(`${environment.apiUrl}/users/username/${username}`)\n  }\n  blockUser(_id: string, value: any): Observable{\n    return this.httpClient.put(`${environment.apiUrl}/users/blocked/${_id}`, value);\n  }\n  activeDeactivateUser(_id: string, status: string): Observable{\n    return this.httpClient.put(`${environment.apiUrl}/users/changeStat/${_id}`, status);\n  }\n\n  createUser(user: User, _id:string): Observable {\n    return this.httpClient\n      .post(`${environment.apiUrl}/users/role/${_id}`, user, this.httpOptions)\n      .pipe(\n        tap((newStatus: User) =>\n          this.log(`Added new Status with id=${user._id}`)\n        ),\n        catchError(this.handleError('add status'))\n      );\n  }\n\n\n  updateUser(_id: string, user: any, idRole: string): Observable {\n    return this.httpClient.put(`${environment.apiUrl}/users/${_id}/newRole/${idRole}`, user);\n  }\n\n  updateProfile(_id: string, user: any): Observable {\n    return this.httpClient.put(`${environment.apiUrl}/users/profile/${_id}`, user);\n  }\n\n  deleteUser(_id: string): Observable {\n    return this.httpClient.delete(`${environment.apiUrl}/users/${_id}`, {\n      responseType: 'text',\n    });\n  }\n\n  updatePassword(_id: string, password: string, confirmPass: string, value: any):Observable{\n    return this.httpClient.put(`${environment.apiUrl}/users/update-password/${_id}/${password}/${confirmPass}`, value, {responseType: 'text'})\n  }\n\n  updatePhoto(id: any, archivo: File): Observable {\n    const formData = new FormData();\n    formData.append('archivo', archivo);\n    return this.httpClient.post(`${environment.apiUrl}/users/upload/${id}`, formData);\n  }\n\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' }),\n  };\n\n  private log(message: string) {\n    this.messageService.addMessage(message);\n  }\n\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      console.error(error);\n      this.log(`${operation} failed: ${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserUpdateComponent.html":{"url":"components/UserUpdateComponent.html","title":"component - UserUpdateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserUpdateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/users/user-update/user-update.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-update\n            \n\n            \n                styleUrls\n                ./user-update.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-update.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                action\n                            \n                            \n                                activityLog\n                            \n                            \n                                form\n                            \n                            \n                                pipe\n                            \n                            \n                                roles\n                            \n                            \n                                today\n                            \n                            \n                                todayWithPipe\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadDataFromRoles\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    crole\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, userService: UserService, roleService: RoleService, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadDataFromRoles\n                        \n                    \n                \n            \n            \n                \nloadDataFromRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action\n\n                    \n                \n                \n                    \n                        Default value : new Action()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activityLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityLog\n\n                    \n                \n                \n                    \n                        Default value : new ActivityLog()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DatePipe('en-US')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        todayWithPipe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        crole\n                    \n                \n\n                \n                    \n                        getcrole()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dashboard/users/user-update/user-update.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Action } from 'src/app/shared/models/action';\nimport { ActivityLog } from 'src/app/shared/models/activity-log';\nimport { Role } from 'src/app/shared/models/role';\nimport { User } from 'src/app/shared/models/user';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { RoleService } from 'src/app/shared/services/role.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\nimport { changeConfirmation, ErrorUpdate } from 'src/app/shared/utils/alerts';\n\n\n@Component({\n  selector: 'app-user-update',\n  templateUrl: './user-update.component.html',\n  styleUrls: ['./user-update.component.css'],\n})\nexport class UserUpdateComponent implements OnInit {\n  _id: string;\n  user: User = new User();;\n  form: FormGroup;\n  roles: Role[];\n\n  //Datos para bitacora\n  action: Action = new Action();\n  users: User = new User();\n  activityLog: ActivityLog = new ActivityLog();\n  today: Date = new Date();\n  pipe = new DatePipe('en-US');\n  todayWithPipe = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private userService: UserService,\n    private roleService: RoleService,\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: [''],\n      crole: ['', Validators.required],\n      status: ['', Validators.required]\n    });\n  }\n  get crole() {\n    return this.form.get('crole');\n  }\n\n  ngOnInit(): void {\n    this.user = new User();\n    this.loadDataFromRoles();\n    this._id = this.route.snapshot.params['_id'];\n    this.userService.getUserById(this._id).subscribe(\n      data => {\n        this.user = data;\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  updateUser() {\n   // this.user.role = this.roles;\n    this.userService.updateUser(this._id, this.user, this.crole.value.id).subscribe(\n      (data) => {\n        this.user = new User();\n        this.router.navigate(['/dashboard/users']);\n        changeConfirmation()\n        this.authService.createActivityLog(ActionConstants.EDITO_REGISTRO,'Modulo usuarios');\n      },\n      (error) => {\n        ErrorUpdate('Error al actualizar el usuario');\n        this.router.navigate(['/dashboard/users']);\n      }\n    );\n  }\n\n  //Cargamos todos los roles que usaremos en el droplist\n  loadDataFromRoles() {\n    return this.roleService\n      .getAllRoles()\n      .subscribe((role) => (this.roles = role));\n  }\n \n}\n\n    \n\n    \n        \n    \n        Update new user\n    \n\n    \n        \n            \n            \n\n                \n                    \n                        Name\n                        \n                    \n                \n\n                \n                    \n                \n \n\n                \n                    \n                        Last Name\n                        \n                    \n                \n\n\n                \n                    \n                        Username\n                        \n                    \n                \n\n\n                \n                    \n                        Email\n                        \n                    \n                \n\n\n                \n                    \n                        Phone\n                        \n                    \n                \n                \n                \n                    \n                        Role\n                         \n                            \n                                {{ role.name }}\n                            \n                        \n                    \n                \n\n\n                \n                    Cancel\n                    Update\n                \n\n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-update.component.css\n                \n                .ancho{\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Update new user                                                                                                    Name                                                                                                                                                                             Last Name                                                                                                                        Username                                                                                                                        Email                                                                                                                        Phone                                                                                                                                        Role                                                                                     {{ role.name }}                                                                                                                            Cancel                    Update                                                    '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserUpdateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                styleUrls\n                ./users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStatus\n                            \n                            \n                                deleteUser\n                            \n                            \n                                loadData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/users/users.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStatus\n                        \n                    \n                \n            \n            \n                \nchangeStatus(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/users.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/users.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/users.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/users.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/users/users.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/users.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MatTableDataSource()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/users.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'name',\n    'lastname',\n    'email',\n    'username',\n    'role',\n    'status',\n    'update',\n    'delete',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/users.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dashboard/users/users.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { ActionConstants } from 'src/app/shared/utils/actionconstants';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit {\n  displayedColumns: string[] = [\n    'name',\n    'lastname',\n    'email',\n    'username',\n    'role',\n    'status',\n    'update',\n    'delete',\n  ];\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  active: string;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  //Dependiendo de lo que se necesite, cambiamos el estatus del usuario\n  //Con un solo clic\n  changeStatus(_id: string) {\n    this.userService.getUserById(_id).subscribe((data) => {\n      if (data.status === 'inactivo') {\n        this.active = 'activo';\n        this.userService\n          .activeDeactivateUser(data.id, this.active)\n          .subscribe((info) => {\n            this.loadData();\n          });\n      } else {\n        this.active = 'inactivo';\n        this.userService\n          .activeDeactivateUser(data.id, this.active)\n          .subscribe((info) => {\n            this.loadData();\n          });\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  //Mandamos a llamar la informaci[on de la tabla]\n  loadData() {\n    this.userService.getAllUsers().subscribe((info) => {\n      this.dataSource.data = info;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  //Accion para eliminar el rol\n  deleteUser(_id: string) {\n    this.userService.deleteUser(_id).subscribe(\n      (data) => {\n        this.loadData();\n        this.authService.createActivityLog(\n          ActionConstants.BORRO_REGISTRO,\n          'Modulo usuarios'\n        );\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  //Editar la informacion del rol\n  updateUser(_id: string) {\n    this.router.navigate(['/dashboard/update-user', _id]);\n  }\n}\n\n    \n\n    \n        \n  \n      Users\n      \n          \n              Add New User\n          \n  \n\n  \n\n\n  \n\n\n      \n      \n          Name\n          {{element.name}}\n      \n      \n      \n          LastName\n          {{element.lastName}}\n      \n\n      \n          Email\n          {{element.email}}\n      \n\n      \n          Username\n          {{element.username}}\n      \n\n      \n          Role\n          {{element.role.name}}\n      \n\n      \n          Status\n          {{element.status}}\n      \n\n      \n          \n          \n            \n              Update\n            \n            \n              Delete\n            \n            \n              activate / deactivate\n            \n          \n        \n\n      \n          \n          \n          \n        \n\n\n\n      \n      \n  \n\n  \n\n\n    \n\n    \n                \n                    ./users.component.css\n                \n                .demo-table {\n    width: 100%;\n  }\n  \n  .demo-button-container {\n    padding-bottom: 16px;\n  }\n  \n  .demo-button + .demo-button {\n    margin-left: 8px;\n  }\n  \n  .example-container {\n    height: 400px;\n    max-width: 100%;\n    overflow: auto;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Users                              Add New User                                      Name          {{element.name}}                            LastName          {{element.lastName}}                      Email          {{element.email}}                      Username          {{element.username}}                      Role          {{element.role.name}}                      Status          {{element.status}}                                                          Update                                      Delete                                      activate / deactivate                                                                                          '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Util.html":{"url":"classes/Util.html","title":"class - Util","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Util\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                textRequeridoM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        textRequeridoM\n                        \n                    \n                \n            \n            \n                \n                    \n                    textRequeridoM(nombre: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/utils/utils.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nombre\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Util{\n    \n    public textRequeridoM(nombre: string): string {\n        return `*El ${nombre} es requerido`;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateCodeComponent.html":{"url":"components/ValidateCodeComponent.html","title":"component - ValidateCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ValidateCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/auth/validate-code/validate-code.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validate-code\n            \n\n            \n                styleUrls\n                ./validate-code.component.css\n            \n\n\n\n            \n                templateUrl\n                ./validate-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formCode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/validate-code/validate-code.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/validate-code/validate-code.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCredentials\n                        \n                    \n                \n            \n            \n                \nsendCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/validate-code/validate-code.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/validate-code/validate-code.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/shared/services/auth.service';\n\n@Component({\n  selector: 'app-validate-code',\n  templateUrl: './validate-code.component.html',\n  styleUrls: ['./validate-code.component.css']\n})\nexport class ValidateCodeComponent implements OnInit {\n\n  formCode: FormGroup\n\n  constructor(private router: Router, private formBuilder: FormBuilder, private authService: AuthService) { \n    this.formCode = this.formBuilder.group({\n      username: ['', Validators.required],\n      accesCode: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendCredentials(){\n    return this.authService.sendCodeToResetPassword(this.formCode.value).subscribe(res => {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('username', res.username);\n      localStorage.setItem('role', res.role.name);\n      this.router.navigate(['reset-password'])\n    });\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n        INSERT CODE\n        \n            Username\n            \n        \n        \n            Code\n            \n        \n        \n        \n        Validate code\n        \n        \n        Cancel\n\n        \n\n    \n    \n\n    \n\n    \n                \n                    ./validate-code.component.css\n                \n                .body{\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n    background-image: url(\"../../../../assets/img/fondo.png\");\n    background-size: cover;\n    background-repeat:no-repeat;\n    background-position: center center;\n}\n\n.resetPass{\n    width: 100%;\n    max-width: 330px;\n    text-align: center;\n    background-color: #f5f5f5b2;\n    outline: none;\n    border-radius: 10px;\n}\n\n.ancho{\n    width: 80%;\n}\n\n.button{\n    height: 50px;\n}\n\n.spinner{\n    margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    INSERT CODE                    Username                                        Code                                            Validate code                        Cancel                '\n    var COMPONENTS = [{'name': 'ActivityLogComponent', 'selector': 'app-activity-log'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePhotoComponent', 'selector': 'app-change-photo'},{'name': 'CreateRoleComponent', 'selector': 'app-create-role'},{'name': 'CreateStatusComponent', 'selector': 'app-create-status'},{'name': 'CreateUserComponent', 'selector': 'app-create-user'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found-page'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RolesComponent', 'selector': 'app-roles'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StatusComponent', 'selector': 'app-status'},{'name': 'UpdateRoleComponent', 'selector': 'app-update-role'},{'name': 'UpdateStatusComponent', 'selector': 'app-update-status'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserUpdateComponent', 'selector': 'app-user-update'},{'name': 'ValidateCodeComponent', 'selector': 'app-validate-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            dashboardModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/auth/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/auth/validate-code/validate-code.component.ts\n            \n            component\n            ValidateCodeComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/activity-log/activity-log.component.ts\n            \n            component\n            ActivityLogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/components/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard-routing.module.ts\n            \n            variable\n            dashboardRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/roles/create-role/create-role.component.ts\n            \n            component\n            CreateRoleComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/roles/roles.component.ts\n            \n            component\n            RolesComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/roles/update-role/update-role.component.ts\n            \n            component\n            UpdateRoleComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/status/create-status/create-status.component.ts\n            \n            component\n            CreateStatusComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/status/status.component.ts\n            \n            component\n            StatusComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/status/update-status/update-status.component.ts\n            \n            component\n            UpdateStatusComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/users/create-user/create-user.component.ts\n            \n            component\n            CreateUserComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/users/profile/change-photo/change-photo.component.ts\n            \n            component\n            ChangePhotoComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/users/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/users/user-update/user-update.component.ts\n            \n            component\n            UserUpdateComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/not-found-page/not-found-page.component.ts\n            \n            component\n            NotFoundPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/guards/rolguard.guard.ts\n            \n            guard\n            RolguardGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/error.interceptor.ts\n            \n            variable\n            delayMs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/error.interceptor.ts\n            \n            variable\n            maxRetries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/token.interceptor.ts\n            \n            interceptor\n            TokenInterceptor\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/models/action.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/activity-log.ts\n            \n            class\n            ActivityLog\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/models/auth.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/dataMail.ts\n            \n            class\n            DataMail\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/models/mailReq.ts\n            \n            class\n            MailReq\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/menu.ts\n            \n            interface\n            Menu\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/role.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/models/status.ts\n            \n            class\n            Status\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/services/actions.service.ts\n            \n            injectable\n            ActionsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/activity-log.service.ts\n            \n            injectable\n            ActivityLogService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/shared/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/status.service.ts\n            \n            injectable\n            StatusService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/utils/actionconstants.ts\n            \n            class\n            ActionConstants\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/shared/utils/actionconstants.ts\n            \n            class\n            Constants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/utils/actionconstants.ts\n            \n            variable\n            nombreSpinner\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            changeConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            changeProdfilePhotoConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            CloseSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorAlert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorCreate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorCreatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorNetworkAlert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorServerAlert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorUpdate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorUpdatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ErrorUserAuthorization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ExpiredSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            InformationAlert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            InternetSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            LimitToLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            quitarBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            savedConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            sendingEmailAlerts\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            ToastWelcome\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            updatedConfirmation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            updatedProfile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            UserBlocked\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            Welcome\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/alerts.ts\n            \n            variable\n            WelcomeAlert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/utils.ts\n            \n            class\n            Util\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-extensions/password-strength : ^8.0.0\n        \n            @angular/animations : ~10.2.0\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @ngrx/store : ^13.2.0\n        \n            jwt-decode : ^3.1.2\n        \n            ngx-material-file-input : ^2.1.1\n        \n            ngx-spinner : ^13.1.1\n        \n            rxjs : ~6.6.0\n        \n            sweetalert2 : ^11.4.10\n        \n            tsd : ^0.20.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApp\nThis project was generated with Angular CLI version 10.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotFoundPageComponent\n\nNotFoundPageComponent\n\nAppModule -->\n\nNotFoundPageComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nValidateCodeComponent\n\nValidateCodeComponent\n\nAppModule -->\n\nValidateCodeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\nDashboardModule -->\n\nTokenInterceptor->DashboardModule\n\n\n\n\n\nActivityLogComponent\n\nActivityLogComponent\n\nDashboardModule -->\n\nActivityLogComponent->DashboardModule\n\n\n\n\n\nChangePhotoComponent\n\nChangePhotoComponent\n\nDashboardModule -->\n\nChangePhotoComponent->DashboardModule\n\n\n\n\n\nCreateRoleComponent\n\nCreateRoleComponent\n\nDashboardModule -->\n\nCreateRoleComponent->DashboardModule\n\n\n\n\n\nCreateStatusComponent\n\nCreateStatusComponent\n\nDashboardModule -->\n\nCreateStatusComponent->DashboardModule\n\n\n\n\n\nCreateUserComponent\n\nCreateUserComponent\n\nDashboardModule -->\n\nCreateUserComponent->DashboardModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nDashboardModule -->\n\nFooterComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nDashboardModule -->\n\nHomeComponent->DashboardModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nDashboardModule -->\n\nProfileComponent->DashboardModule\n\n\n\n\n\nRolesComponent\n\nRolesComponent\n\nDashboardModule -->\n\nRolesComponent->DashboardModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nDashboardModule -->\n\nSidenavComponent->DashboardModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nDashboardModule -->\n\nStatusComponent->DashboardModule\n\n\n\n\n\nUpdateRoleComponent\n\nUpdateRoleComponent\n\nDashboardModule -->\n\nUpdateRoleComponent->DashboardModule\n\n\n\n\n\nUpdateStatusComponent\n\nUpdateStatusComponent\n\nDashboardModule -->\n\nUpdateStatusComponent->DashboardModule\n\n\n\n\n\nUserUpdateComponent\n\nUserUpdateComponent\n\nDashboardModule -->\n\nUserUpdateComponent->DashboardModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nDashboardModule -->\n\nUsersComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            changeConfirmation   (src/.../alerts.ts)\n                        \n                        \n                            changeProdfilePhotoConfirmation   (src/.../alerts.ts)\n                        \n                        \n                            CloseSession   (src/.../alerts.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dashboardModule   (src/.../app-routing.module.ts)\n                        \n                        \n                            dashboardRoutes   (src/.../dashboard-routing.module.ts)\n                        \n                        \n                            delayMs   (src/.../error.interceptor.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ErrorAlert   (src/.../alerts.ts)\n                        \n                        \n                            ErrorCreate   (src/.../alerts.ts)\n                        \n                        \n                            ErrorCreatePassword   (src/.../alerts.ts)\n                        \n                        \n                            ErrorNetworkAlert   (src/.../alerts.ts)\n                        \n                        \n                            ErrorServerAlert   (src/.../alerts.ts)\n                        \n                        \n                            ErrorUpdate   (src/.../alerts.ts)\n                        \n                        \n                            ErrorUpdatePassword   (src/.../alerts.ts)\n                        \n                        \n                            ErrorUser   (src/.../alerts.ts)\n                        \n                        \n                            ErrorUserAuthorization   (src/.../alerts.ts)\n                        \n                        \n                            ExpiredSession   (src/.../alerts.ts)\n                        \n                        \n                            InformationAlert   (src/.../alerts.ts)\n                        \n                        \n                            InternetSuccess   (src/.../alerts.ts)\n                        \n                        \n                            LimitToLogin   (src/.../alerts.ts)\n                        \n                        \n                            maxRetries   (src/.../error.interceptor.ts)\n                        \n                        \n                            nombreSpinner   (src/.../actionconstants.ts)\n                        \n                        \n                            quitarBackground   (src/.../alerts.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routingComponents   (src/.../app-routing.module.ts)\n                        \n                        \n                            savedConfirmation   (src/.../alerts.ts)\n                        \n                        \n                            sendingEmailAlerts   (src/.../alerts.ts)\n                        \n                        \n                            ToastWelcome   (src/.../alerts.ts)\n                        \n                        \n                            updatedConfirmation   (src/.../alerts.ts)\n                        \n                        \n                            updatedProfile   (src/.../alerts.ts)\n                        \n                        \n                            UserBlocked   (src/.../alerts.ts)\n                        \n                        \n                            Welcome   (src/.../alerts.ts)\n                        \n                        \n                            WelcomeAlert   (src/.../alerts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/utils/alerts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        changeConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    position: 'top-end',\n    icon: 'success',\n    title: 'Registro actualizado correctamente',\n    showConfirmButton: false,\n    timer: 1500,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeProdfilePhotoConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    position: 'top-end',\n    icon: 'success',\n    title: 'Registro actualizado correctamente',\n    showConfirmButton: false,\n    timer: 1500,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CloseSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string, text: string) => {\n  Swal.fire({\n    icon: 'info',\n    title: title,\n    text: text,\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => {\n  Swal.fire({\n    icon: 'error',\n    text: title,\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (msg: string) => {\n  return Swal.fire({\n    icon: 'error',\n    text: msg,\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorCreatePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Los passwords no coinciden',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorNetworkAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Error de red, verifique su conexión a internet',\n    confirmButtonColor: '#3f51b5',\n    timer: 2000,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorServerAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Error, servidor desconectado',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (msg: string) => {\n  return Swal.fire({\n    icon: 'error',\n    text: msg,\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorUpdatePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'No ha podido actualizarse el password',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'username o password incorrecto',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ErrorUserAuthorization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Acceso sin authorizacion',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ExpiredSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Lo sentimos, pero la sesión ha caducado. Por favor inicia sesión de nuevo',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InformationAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string, text: string) => {\n  Swal.fire({\n    icon: 'info',\n    title: title,\n    text: text,\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        InternetSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    icon: 'success',\n    text: '¡Conexión a internet restablecida!',\n    confirmButtonColor: '#3f51b5',\n    timer: 2000,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LimitToLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Has superado el limite de intentos de inicio de sesion, por lo cual la cuenta ha sido bloqueada por seguridad',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitarBackground\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elemento: string) => {\n  const dialog = document.getElementById(elemento);\n  dialog.classList.add('dialog-style');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savedConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    position: 'top-end',\n    icon: 'success',\n    title: 'Se ha guardado extiosamente el registro',\n    showConfirmButton: false,\n    timer: 1500,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendingEmailAlerts\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    icon: 'info',\n    title: 'Se han enviado las instrucciones al correo ingresado',\n    showConfirmButton: false,\n    timer: 3000,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToastWelcome\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Swal.mixin({\n  toast: true,\n  showConfirmButton: false,\n  timer: 3000,\n  timerProgressBar: true,\n  didOpen: (toast) => {\n    toast.addEventListener('mouseenter', Swal.stopTimer);\n    toast.addEventListener('mouseleave', Swal.resumeTimer);\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedConfirmation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    position: 'top-end',\n    icon: 'success',\n    title: 'Tu password se ha actualizado correctamente',\n    showConfirmButton: false,\n    timer: 1500,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedProfile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    position: 'top-end',\n    icon: 'success',\n    title: 'Tu perfil se ha actualizado correctamente',\n    showConfirmButton: false,\n    timer: 1500,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserBlocked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Swal.fire({\n    icon: 'error',\n    text: 'Usuario bloqueado, favor de comunicarse con el administrador',\n    confirmButtonColor: '#3f51b5',\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Welcome\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  Swal.fire({\n    position: 'top-end',\n    icon: 'success',\n    title: 'Tu perfil se ha actualizado correctamente',\n    showConfirmButton: false,\n    timer: 1500,\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WelcomeAlert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (title: string) => {\n  return ToastWelcome.fire({\n    position: 'top-end',\n    icon: 'success',\n    width: '300px',\n    title: ' Hola ' + title + ' bienvenido',\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dashboardModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  import('./components/dashboard/dashboard.module').then(\n    (x) => x.DashboardModule\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routingComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  LoginComponent,\n  ValidateCodeComponent,\n  ForgotPasswordComponent,\n  ResetPasswordComponent,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/components/dashboard/dashboard-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dashboardRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  DashboardComponent,\n  HomeComponent,\n  UsersComponent,\n  RolesComponent,\n  StatusComponent,\n  ActivityLogComponent,\n  ProfileComponent,\n  CreateRoleComponent,\n  UpdateRoleComponent,\n  CreateStatusComponent,\n  UpdateStatusComponent,\n  CreateUserComponent,\n  UserUpdateComponent,\n]\n                    \n                \n\n\n        \n    \n\n    src/app/shared/interceptors/error.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        delayMs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxRetries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/utils/actionconstants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nombreSpinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'spinner'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
